(function() {var implementors = {};
implementors["basic_dsp_matrix"] = [{"text":"impl&lt;S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt; for MatrixMxN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DspVec&lt;S, T, N, D&gt;: ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt; for Matrix2xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DspVec&lt;S, T, N, D&gt;: ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt; for Matrix3xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DspVec&lt;S, T, N, D&gt;: ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt; for Matrix4xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DspVec&lt;S, T, N, D&gt;: ConvolutionOps&lt;DspVec&lt;S, T, N, D&gt;, S, T, N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;Vec&lt;&amp;'a Vec&lt;&amp;'a DspVec&lt;S, T, N, D&gt;&gt;&gt;, S, T, N, D&gt; for MatrixMxN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;[[&amp;'a DspVec&lt;S, T, N, D&gt;; 2]; 2], S, T, N, D&gt; for Matrix2xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;[[&amp;'a DspVec&lt;S, T, N, D&gt;; 3]; 3], S, T, N, D&gt; for Matrix3xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;ToSliceMut&lt;T&gt;, T:&nbsp;RealNumber, N:&nbsp;NumberSpace, D:&nbsp;Domain&gt; ConvolutionOps&lt;[[&amp;'a DspVec&lt;S, T, N, D&gt;; 4]; 4], S, T, N, D&gt; for Matrix4xN&lt;DspVec&lt;S, T, N, D&gt;, S, T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()