var N=null,E="",T="t",U="u",searchIndex={};
var R=["basic_dsp","is_symmetric","Indicates whether this function is symmetric around 0 or…","Calculates the convolution for a data point","complex","Allows to create a lookup table with linear interpolation…","Complex","result","errorreason","dspvec","Performs a Symmetric Inverse Fast Fourier Transformation…","See `to_complex` for some details.","Offers the same functionality as the `StatisticsOps` trait…","Calculates the statistics of the data contained in the…","A vector with complex numbers in time domain.","Make `Other` a `Self` without performing any checks.","datadomain","A vector with complex numbers in frequency domain.","to_complex","This trait allows to change a data type. The operations…","Conversion from a generic data type into a dsp vector with…","Create a new vector in complex number space and time…","Create a new vector in complex number space and frequency…","A vector with real numbers in time domain.","Specifies what the the result is if a type is transformed…","An operation which multiplies each vector element with a…","typemetadata","Operations which allow to iterate over the vector and to…","A vector with no information about number space or domain…","Defines all operations which are valid on `DataVecs`…","Performs a Symmetric Fast Fourier Transformation under the…","windowfunction","A trait to insert zeros into the data at some specified…","Appends zeros add the end of the vector until the vector…","paddingoption","Interleaves zeros `factor - 1`times after every vector…","Calculates the delta of each elements to its previous…","Interpolates `self` with the convolution function…","realfrequencyresponse","Interpolates the signal in frequency domain by padding it…","A vector with real numbers in frequency domain.","alloc_len","Operations to resize a data type.","Changes `self.len()`. If `self.is_complex()` is true then…","Convolves `self` with the convolution function…","Conversion from a generic data type into a dsp vector…","Create a new generic vector. `delta` can be changed after…","realorcomplex","timeorfreq","Create a new vector from the given meta data. The meta…","Defines transformations from complex to real number space.","Gets the absolute value, magnitude or norm of all vector…","Gets the square root of the absolute value of all vector…","Gets all real elements. # Example","Gets all imag elements. # Example","Gets the phase of all elements in [rad]. # Example","Buffer borrow type for `SingleBuffer`.","Calculates the principal value of the inverse hyperbolic…","Defines transformations from real to complex number space.","Output","to_slice","Performs a Fast Fourier Transformation transforming a time…","is_complex","Operations on real types.","The method for complex indexing","Calculates the sum of the squared data contained in the…","Create a new vector in real number space and time domain.…","Create a new vector in real number space and frequency…","Performs an Inverse Fast Fourier Transformation…","is_empty","This trait offers operations to calculate statistics about…","A matrix which can hold 1 to N vectors of 32 bit floating…","A matrix which can hold 1 to N vectors of 64 bit floating…","A matrix which can hold exactly 2 vectors of 32 bit…","A matrix which can hold exactly 2 vectors of 64 bit…","A matrix which can hold exactly 3 vectors of 32 bit…","A matrix which can hold exactly 3 vectors of 64 bit…","A matrix which can hold exactly 4 vectors of 64 bit…","A matrix which can hold exactly 4 vectors of 32 bit…","The x-axis delta. If `domain` is time domain then `delta`…","set_delta","Sets the x-axis delta. If `domain` is time domain then…","Conversion from a generic data type into a dsp matrix with…","basic_dsp::conv_types","try_from","borrow_mut","try_into","type_id","borrow","typeid","basic_dsp::meta","to_owned","clone_into","basic_dsp::window_functions","basic_dsp::numbers","basic_dsp::matrix","get_real","get_imag","get_magnitude","get_magnitude_squared","get_phase","get_real_imag","get_mag_phase","correlate","plain_ifft","windowed_ifft","multiply_frequency_response","ln_approx","exp_approx","sin_approx","cos_approx","log_approx","expf_approx","powf_approx","swap_halves","map_inplace","matrixmxn","matrix2xn","matrix4xn","matrix3xn","magnitude","magnitude_squared","to_real","get_meta_data","diff_with_start","dot_product_prec","interpolatef","interpolatei","interpolate","decimatei","interpft","plain_sifft","windowed_sifft","multiply_complex_exponential","convolve","to_complex_b","magnitude_b","magnitude_squared_b","to_real_b","to_imag_b","prepare_argument","prepare_argument_padded","sum_sq_prec","sum_prec","apply_window","unapply_window","plain_fft","windowed_fft","statistics_split_prec","statistics_prec","statistics","dot_product","convolve_signal","set_real_imag","set_mag_phase","plain_sfft","windowed_sfft","interpolate_hermite","interpolate_lin","fft_shift","ifft_shift","rededicate_from_force","rededicate_with_runtime_data","statistics_split","add_smaller","sub_smaller","div_smaller","mul_smaller","row_points","rows_mut","map_aggregate","merge_cols","empty_vec","arrayvec","formatter","split_into","zero_pad_b","zero_interleave_b","zero_interleave","reverse","deref_mut","get_multicore_settings","multicoresettings","set_multicore_settings","rededicate","complex_mut","index_mut","add_prec","phase_b","rededicate_from","to_imag","cum_sum","from_str_radix","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","div_assign","sub_assign","mul_assign","add_assign","rem_assign","from_raw_parts","Creates a lookup table by putting the pieces together.","from_conv_function","Creates a lookup table from another convolution function.…","realimpulseresponse","realtimelineartablelookup","Convert the lookup table into complex number space","complextimelineartablelookup","Convert the lookup table into a magnitude spectrum","realfrequencylineartablelookup","Allows to inspect the generated lookup table","Gets the delta value which determines the resolution","complexfrequencylineartablelookup","compleximpulseresponse","Convert the lookup table into real number space","Convert the lookup table into frequency domain","complexfrequencyresponse","Convert the lookup table into time domain","sincfunction","hammingwindow","is_infinite","is_finite","is_normal","singlebuffer","Creates a new buffer which is ready to be passed around.","RealImpulseResponse","RealFrequencyResponse","ComplexImpulseResponse","ComplexFrequencyResponse","RealOrComplex","TimeOrFreq","WindowFunction","PreciseStatisticsSplitOps","ElementaryOps","ToComplexVectorPar","SymmetricFrequencyToTimeDomainOperations","PreciseSumOps","PreciseStatisticsOps","ToRealTimeResult","PreciseStats","ErrorReason","InterleaveToVector","CrossCorrelationOps","ResizeBufferedOps","ElementaryWrapAroundOps","RededicateForceOps","RededicateOps","ToDspVector","InsertZerosOpsBuffered","NumberSpace","RealToComplexTransformsOps","Statistics","RededicateToOps","OffsetOps","ToComplexVector","ToSliceMut","ComplexToRealTransformsOps","MapAggregateOps","ToFreqResult","PreciseDotProductOps","GetMetaData","FrequencyMultiplication","ComplexOps","MapInplaceOps","SymmetricTimeToFrequencyDomainOperations","ToRealResult","ApproximatedOps","InsertZerosOps","DiffSumOps","Convolution","ComplexToRealSetterOps","ComplexIndex","InterpolationOps","ToComplexResult","ResizeOps","ConvolutionOps","DotProductOps","MultiCoreSettings","RealInterpolationOps","FrequencyDomainOperations","ToTimeResult","ModuloOps","ComplexToRealGetterOps","ToDspVectorPar","ComplexToRealTransformsOpsBuffered","ReorganizeDataOps","RealToComplexTransformsOpsBuffered","DataDomain","FromVector","TimeToFrequencyDomainOperations","PaddingOption","BufferBorrow","TimeDomainOperations","ComplexIndexMut","ToRealVectorPar","CrossCorrelationArgumentOps","StatisticsSplitOps","ToRealVector","FrequencyToTimeDomainOperations","StatisticsOps","ToRealFreqMatrix","FromMatrix","ToComplexTimeMatrix","ToComplexFreqMatrix","ToDspMatrix","ToRealTimeMatrix","RealTimeLinearTableLookup","RealFrequencyLinearTableLookup","ComplexTimeLinearTableLookup","ComplexFrequencyLinearTableLookup","RaisedCosineFunction","SincFunction","TriangularWindow","HammingWindow","SingleBuffer","NoTradeBufferBurrow","SingleBufferBurrow","NoBufferBurrow","FixedLenBuffer","TypeMetaData","FixedLenBufferBurrow","MatrixMxN","Matrix2xN","Matrix3xN","Matrix4xN","basic_dsp_matrix","transres","scalarresult","voidresult","A matrix which can hold 1 to N vectors.","A matrix which can hold exactly 2 vectors.","A matrix which can hold exactly 3 vectors.","A matrix which can hold exactly 4 vectors.","Matrix32xN","Matrix64xN","RealTimeMatrix32xN","RealTimeMatrix64xN","ComplexTimeMatrix32xN","ComplexTimeMatrix64xN","RealFreqMatrix32xN","RealFreqMatrix64xN","ComplexFreqMatrix32xN","ComplexFreqMatrix64xN","Matrix32x2","Matrix64x2","RealTimeMatrix32x2","RealTimeMatrix64x2","ComplexTimeMatrix32x2","ComplexTimeMatrix64x2","RealFreqMatrix32x2","RealFreqMatrix64x2","ComplexFreqMatrix32x2","ComplexFreqMatrix64x2","Matrix32x3","Matrix64x3","RealTimeMatrix32x3","RealTimeMatrix64x3","ComplexTimeMatrix32x3","ComplexTimeMatrix64x3","RealFreqMatrix32x3","RealFreqMatrix64x3","ComplexFreqMatrix32x3","ComplexFreqMatrix64x3","Matrix32x4","Matrix64x4","RealTimeMatrix32x4","RealTimeMatrix64x4","ComplexTimeMatrix32x4","ComplexTimeMatrix64x4","RealFreqMatrix32x4","RealFreqMatrix64x4","ComplexFreqMatrix32x4","ComplexFreqMatrix64x4","to_real_freq_mat","A trait for matrix types. In this lib a matrix is simply a…","row_len","The number of valid elements in each row of the matrix.…","The number of valid points in a row. If the matrix is…","col_len","The number of columns in the matrix.","Gets the rows as vectors.","Gets the rows as mutable vectors.","Retrieves the underlying storage from a matrix.","Type of the underlying storage of a matrix.","Gets the underlying matrix and the number of elements…","ToMatrix","Conversion from a collection of vectors to a matrix.","Create a new matrix from a collection of vectors.","to_complex_time_mat","Create a new matrix in complex number space and time…","to_complex_freq_mat","Create a new matrix in complex number space and frequency…","Conversion from a generic data type into a dsp matrix…","to_gen_dsp_mat","Create a new generic matrix. `delta` can be changed after…","to_real_time_mat","Create a new matrix in real number space and time domain.…","basic_dsp_vector","complextimevec","complexfreqvec","gendspvec","realtimevec","realfreqvec","basic_dsp_vector::conv_types","basic_dsp_vector::meta","basic_dsp_vector::window_functions","basic_dsp_vector::numbers","complex32","complex64","statsvec","RealTimeVec","RealFreqVec","ComplexTimeVec","ComplexFreqVec","GenDspVec","conv_types","Types around a convolution, see also…","A convolution function in time domain and real number space","A convolution function in frequency domain and real number…","A convolution function in time domain and complex number…","A convolution function in frequency domain and complex…","Raised cosine function according to…","Sinc function according to…","Marker for types containing real data.","Marker for types containing complex data.","Marker for types containing real or complex data.","is_complex_current","Marker for types containing time data.","Marker for types containing frequency data.","Marker for types containing time or frequency data.","domain_current","window_functions","This mod contains a definition for window functions and…","A window function for FFT windows. See…","Indicates whether this function is symmetric around the y…","Calculates a point of the window function. Callers will…","A triangular window:…","A generalized Hamming window:…","Traits from the `num` crate which are used inside…","DspNumber","A trait for a numeric value which at least supports a…","Associates a number type with a SIMD register type.","RegFallback","Type for the SIMD register on the CPU.","RegAvx512","Type for the SIMD register on the GPU. Defaults to an…","RealNumber","A real floating pointer number intended to abstract over…","This trait is necessary so that we can define zero for…","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","neg_infinity","Returns the negative infinite value.","Returns `-0.0`.","min_value","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","max_value","Returns the largest finite value that this type can…","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","Returns `true` if `self` is positive, including `+0.0`,…","is_sign_negative","Returns `true` if `self` is negative, including `-0.0`,…","Fused multiply-add. Computes `(self * a) + b` with only…","Take the reciprocal (inverse) of a number, `1/x`.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","to_degrees","Converts radians to degrees.","to_radians","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Returns `true` if `self` is equal to the multiplicative…","RealNumberSpace","Trait for types containing real data.","ComplexTimeVecSlice64","Elementary algebra on types: addition, subtraction,…","Calculates the sum of `self + summand`. It consumes self…","Calculates the difference of `self - subtrahend`. It…","Calculates the product of `self * factor`. It consumes…","Calculates the quotient of `self / summand`. It consumes…","to_complex_time_vec_par","to_complex_freq_vec_par","Offers the same functionality as the `SumOps` trait but…","Calculates the sum of the data contained in the vector…","Domain (time or frequency) information.","RealTimeResult","A buffer which stores a single vector and never shrinks.","A trait for statistics which allows to add new values in a…","Adds a new values to the statistics using the Kahan…","NoBuffer","This type can be used everytime the API asks for a buffer…","Enumeration of all error reasons","InputMustHaveTheSameSize","The operations requires all inputs to have the same size,…","InputMetaDataMustAgree","The operations requires all inputs to have the same meta…","InputMustBeComplex","The operation requires the input to be complex.","InputMustBeReal","The operation requires the input to be real.","InputMustBeInTimeDomain","The operation requires the input to be in time domain.","InputMustBeInFrequencyDomain","The operation requires the input to be in frequency domain.","InvalidArgumentLength","The arguments have an invalid length to perform the…","InputMustBeConjSymmetric","The operations is only valid if the data input contains…","InputMustHaveAnOddLength","`self.points()` must be an odd number.","ArgumentFunctionMustBeSymmetric","The function passed as argument must be symmetric","InvalidNumberOfArgumentsForCombinedOp","The number of arguments passed into a combined operation…","InputMustNotBeEmpty","The operation isn't specified for an empty vector.","InputMustHaveAnEvenLength","Given input must have an even length.","TypeCanNotResize","The arguments would require that the type allocates larger…","ComplexFreqVec64","Conversion from two instances of a generic data type into…","interleave_to_complex_time_vec","interleave_to_complex_freq_vec","A trait to calculate the cross correlation.","Calculates the correlation between `self` and `other`.…","resize_b","Elementary algebra on types where the argument might…","Calculates the sum of `self + summand`. `summand` may be…","Calculates the sum of `self - subtrahend`. `subtrahend`…","Calculates the sum of `self - factor`. `factor` may be…","Calculates the sum of `self - divisor`. `divisor` may be…","This trait allows to change a data type and performs the…","GenDspVec32","Make `Other` a `Self`. # Example","Buffer borrow type for `NoTradeBufferBurrow`.","ScaleOps","Multiplies the vector element with a scalar.","to_gen_dsp_vec","to_dsp_vec","Number space (real or complex) information.","For implementations which track meta data at runtime this…","See `to_complex` for more details.","Converts the real vector into a complex vector.","Statistics about numeric data","Sum of all values","How many numbers have been considered for the stats","Average value","Root-mean-square or rms over all values.","The smallest value.","min_index","The index of the smallest value.","The largest value.","max_index","The index of the largest value.","Converts `Self` inot `Other`.","A buffer which can be used by other types. Types will call…","The type of the burrow which is returned.","Asks the buffer for new storage of exactly size `len`. The…","Returns the allocated length of all storage within this…","An operation which adds a constant to each vector element","Adds a scalar to each vector element.","ComplexTimeVec64","to_complex_time_vec","to_complex_freq_vec","A trait for storage types which are known to have the…","Resize a storage type. Must work for any value of `len`,…","A trait to convert a type into a mutable slice.","to_slice_mut","Convert to a mutable slice.","Buffer borrow type for `NoBuffer`.","RealFreqVec64","Transforms all vector elements using the function `map`…","RealTimeVecSlice32","PowerOps","Roots, powers, exponentials and logarithms.","Gets the square root of all vector elements.","Squares all vector elements.","Calculates the n-th root of every vector element.","Raises every vector element to a floating point power.","Computes the principal value of natural logarithm of every…","Calculates the natural exponential for every vector element.","Calculates the logarithm to the given base for every…","Calculates the exponential to the given base for every…","FreqResult","Calculates the dot product of self and factor using a more…","Expresses at compile time that two classes could…","Gets the meta data of a type. This can be used to create a…","Gets a copy of the vector meta data. This can be used to…","Provides a frequency response multiplication operations.","Multiplies `self` with the frequency response function…","Operations on complex types.","Multiplies each vector element with…","Calculates the complex conjugate of the vector. # Example","Transforms all vector elements using the function `map`.","ComplexFreqVecSlice32","RealResult","Operations on statistics.","Creates an empty statistics struct.","Creates a vector of empty statistics structs.","Creates a statistics struct which resembles an invalid…","Merges several statistics into one.","Merges several vectors of statistics into one vector.","Adds a new value to the statistics, all statistic fields…","Recommended to be only used with the CPU feature flags…","Computes the principal value approximation of natural…","Calculates the natural exponential approximation for every…","Calculates the sine approximation of each element in…","Calculates the cosine approximation of each element in…","Calculates the approximated logarithm to the given base…","Calculates the approximated exponential to the given base…","Raises every vector element to approximately a floating…","zero_pad","MergeOps","Merges several pieces of equal size into one data chunk.","Merges several vectors into `self`. All vectors must have…","GenDspVec64","A trait to calculate the diff (1st derivative in a…","Calculates the cumulative sum of all elements. This…","Provides a convolution operations.","Defines setters to create complex data from real data.","Overrides the `self` vectors data with the real and…","Overrides the `self` vectors data with the magnitude and…","Like `std::ops::Index` but with a different method name so…","ComplexTimeVecSlice32","Provides interpolation operations for real and complex…","Decimates or downsamples `self`. `decimatei` is the…","RealTimeVec32","ComplexResult","ScalarResult","Scalar result or a reason in case of an error.","RealFreqVecSlice64","A trait to convert a type into a slice.","Convert to a slice.","Length of a slice.","Indicates whether or not this storage type is empty.","Gets the allocated length of a storage. It's expected that…","try_resize","Resizes the storage to support at least `len` elements or…","A buffer which gets initalized with a data storage type…","Holds meta data about a type.","STATS_VEC_CAPACTIY","The maximum `len` for any of the `*split` methods.","Provides a convolution operation for types which at some…","Calculates the dot product of self and factor. Self and…","Result for operations which transform a type (most…","Holds parameters which specify how multiple cores are used…","core_limit","All operations will be limited to not create more threads…","med_dual_core_threshold","med_multi_core_threshold","large_dual_core_threshold","large_multi_core_threshold","Provides interpolation operations which are only…","Piecewise cubic hermite interpolation between samples.","Linear interpolation between samples.","print_calibration","Prints debug information about the calibration. The…","This function mirrors the spectrum vector to transform a…","Swaps vector halves after a Fourier Transformation.","Swaps vector halves before an Inverse Fourier…","TimeResult","Alias for a vector of any statistical information.","Each value in the vector is dividable by the divisor and…","This function corrects the jumps in the given vector which…","RealFreqVecSlice32","RealTimeVecSlice64","Defines getters to get real data from complex types.","Copies all real elements into the given vector. # Example","Copies all imag elements into the given vector. # Example","Copies the absolute value or magnitude of all vector…","Copies the absolute value squared or magnitude squared of…","Copies the phase of all elements in [rad] into the given…","Gets the real and imaginary parts and stores them in the…","Gets the magnitude and phase and stores them in the given…","to_gen_dsp_vec_par","to_dsp_vec_par","ComplexFreqVec32","GenDspVecSlice64","ComplexNumberSpace","Trait for types containing complex data.","This trait allows to reorganize the data by changing…","Reverses the data inside the vector.","This function swaps both halves of the vector. This…","Trigonometry methods.","Calculates the sine of each element in radians.","Calculates the cosine of each element in radians.","Calculates the tangent of each element in radians.","Calculates the principal value of the inverse sine of each…","Calculates the principal value of the inverse cosine of…","Calculates the principal value of the inverse tangent of…","Calculates the hyperbolic sine each element in radians.","Calculates the hyperbolic cosine each element in radians.","Calculates the hyperbolic tangent each element in radians.","Converts the real vector into a complex vector. The buffer…","The domain of a data vector","Time domain, the x-axis is in [s].","Frequency","Frequency domain, the x-axis is in [Hz].","Retrieves the underlying storage from a vector.","Type of the underlying storage of a vector.","Gets the underlying storage and the number of elements…","Gets the underlying slice of a vector.","ComplexTimeVec32","ComplexFreqVecSlice64","Applies a FFT window and performs a Fast Fourier…","An option which defines how a vector should be padded","Appends zeros to the end of the vector.","Surrounds the vector with zeros at the beginning and at…","Inserts zeros in the center of the vector","MetaData","A trait which provides information about number space and…","The domain in which the data vector resides. Basically…","Indicates whether the vector contains complex data. This…","Gets the absolute value of all vector elements. # Example","VoidResult","Void/nothing in case of success or a reason in case of an…","A \"slice-like\" type which also allows to","Moves the content of this slice into `storage`. This…","Applies a window to the data vector.","Removes a window from the data vector.","FrequencyDomain","Trait for types containing frequency domain data.","TimeDomain","Trait for types containing time domain data.","SplitOps","Splits the data into several smaller pieces of equal size.","Splits the vector into several smaller vectors.…","A 1xN (one times N elements) or Nx1 data vector as used…","The underlying storage. `self.len()` should be called to…","GenDspVecSlice32","Like `std::ops::IndexMut` but with a different method name…","Offers operations to calculate the sum or the sum of…","Calculates the sum of the data contained in the vector. #…","to_real_time_vec_par","to_real_freq_vec_par","Cross-correlation of data vectors. See also…","Prepares an argument to be used for convolution. Preparing…","Prepares an argument to be used for convolution. The…","RealTimeVec64","to_real_time_vec","to_real_freq_vec","A trait for vector types.","The number of valid elements in the vector. This can be…","Indicates whether or not the vector is empty.","The number of valid points. If the vector is complex then…","Gets the multi core settings which determine how the work…","Sets the multi core settings which determine how the work…","Gets the number of allocated elements in the underlying…","Calculates the statistics of the data.","RealFreqVec32","to_string","invalid","default","to_freq","to_time","clone_from","from_usize","from_isize","from_u128","from_i128","Creates a raised cosine function.","Creates a sinc function.","Creates a new Hamming window","Creates the default Hamming window as defined in GNU Octave.","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","from_polar","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","with_capacity","Creates a new buffer from a storage type. The buffer will…","fixedlenbuffer","Creates multi core settings with default values","single_threaded","Creates multi core settings so that no thread will be…","Creates multi core so that threads will be spawned if this…","Creates multi core settings with the given values.","with_thresholds","Creates multi core settings with explicit thresholds.","convolve_mat","Convolves a vector of vectors (in this lib also considered…","is_erroneous","Indicates whether or not the operations on this vector…"];
searchIndex[R[396]]={"doc":"Basic digital signal processing (DSP) operations","i":[[3,R[276],R[396],R[699],N,N],[12,R[700],E,R[701],0,N],[12,R[702],E,E,0,N],[12,R[703],E,E,0,N],[12,R[704],E,E,0,N],[12,R[705],E,E,0,N],[3,R[319],E,R[56],N,N],[3,R[317],E,R[692],N,N],[3,R[315],E,R[56],N,N],[3,R[313],E,R[539],N,N],[3,R[542],E,R[543],N,N],[3,R[316],E,R[623],N,N],[3,R[250],E,R[597],N,N],[12,"sum",E,R[598],1,N],[12,"count",E,R[599],1,N],[12,"average",E,R[600],1,N],[12,"rms",E,R[601],1,N],[12,"min",E,R[602],1,N],[12,R[603],E,R[604],1,N],[12,"max",E,R[605],1,N],[12,R[606],E,R[607],1,N],[3,"DspVec",E,R[781],N,N],[12,"data",E,R[782],2,N],[3,R[318],E,R[693],N,N],[3,R[314],E,R[588],N,N],[4,R[239],E,R[544],N,N],[13,R[545],E,R[546],3,N],[13,R[547],E,R[548],3,N],[13,R[549],E,R[550],3,N],[13,R[551],E,R[552],3,N],[13,R[553],E,R[554],3,N],[13,R[555],E,R[556],3,N],[13,R[557],E,R[558],3,N],[13,R[559],E,R[560],3,N],[13,R[561],E,R[562],3,N],[13,R[563],E,R[564],3,N],[13,R[565],E,R[566],3,N],[13,R[567],E,R[568],3,N],[13,R[569],E,R[570],3,N],[13,R[571],E,R[572],3,N],[4,R[289],E,R[759],N,N],[13,"End",E,R[760],4,N],[13,"Surround",E,R[761],4,N],[13,"Center",E,R[762],4,N],[4,R[286],E,R[748],N,N],[13,"Time",E,R[749],5,N],[13,R[750],E,R[751],5,N],[5,R[709],E,R[710],N,[[],["string"]]],[0,R[414],E,R[415],N,N],[3,R[305],R[402],R[5],N,N],[3,R[306],E,R[5],N,N],[3,R[307],E,R[5],N,N],[3,R[308],E,R[5],N,N],[3,R[309],E,R[420],N,N],[3,R[310],E,R[421],N,N],[8,R[224],E,R[416],N,N],[10,R[1],E,R[2],6,[[["self"]],["bool"]]],[10,"calc",E,R[3],6,[[["self"],[T]],[T]]],[8,R[225],E,R[417],N,N],[10,R[1],E,R[2],7,[[["self"]],["bool"]]],[10,"calc",E,R[3],7,[[["self"],[T]],[T]]],[8,R[226],E,R[418],N,N],[10,R[1],E,R[2],8,[[["self"]],["bool"]]],[10,"calc",E,R[3],8,[[["self"],[T]],[R[4]]]],[8,R[227],E,R[419],N,N],[10,R[1],E,R[2],9,[[["self"]],["bool"]]],[10,"calc",E,R[3],9,[[["self"],[T]],[R[4]]]],[11,"table",E,R[209],10,N],[11,"delta",E,R[210],10,[[["self"]],[T]]],[11,"table",E,R[209],11,N],[11,"delta",E,R[210],11,[[["self"]],[T]]],[11,"table",E,R[209],12,N],[11,"delta",E,R[210],12,[[["self"]],[T]]],[11,"table",E,R[209],13,N],[11,"delta",E,R[210],13,[[["self"]],[T]]],[11,R[199],E,R[200],10,N],[11,R[201],E,R[202],10,[[[R[203]],["f32"],["usize"]],["self"]]],[11,R[199],E,R[200],10,N],[11,R[201],E,R[202],10,[[[R[203]],["f64"],["usize"]],["self"]]],[11,R[199],E,R[200],11,N],[11,R[201],E,R[202],11,[[[R[38]],["f32"],["usize"]],["self"]]],[11,R[199],E,R[200],11,N],[11,R[201],E,R[202],11,[[[R[38]],["f64"],["usize"]],["self"]]],[11,R[199],E,R[200],12,N],[11,R[201],E,R[202],12,[[[R[212]],["f32"],["usize"]],["self"]]],[11,R[199],E,R[200],12,N],[11,R[201],E,R[202],12,[[[R[212]],["f64"],["usize"]],["self"]]],[11,R[199],E,R[200],13,N],[11,R[201],E,R[202],13,[[[R[215]],["f32"],["usize"]],["self"]]],[11,R[199],E,R[200],13,N],[11,R[201],E,R[202],13,[[[R[215]],["f64"],["usize"]],["self"]]],[11,R[18],E,R[205],10,[[["self"]],[R[206],["f32"]]]],[11,R[18],E,R[205],10,[[["self"]],[R[206],["f64"]]]],[11,R[18],E,R[205],11,[[["self"]],[R[211],["f32"]]]],[11,R[18],E,R[205],11,[[["self"]],[R[211],["f64"]]]],[11,R[122],E,R[213],12,[[["self"]],[R[204],["f32"]]]],[11,R[122],E,R[213],12,[[["self"]],[R[204],["f64"]]]],[11,R[122],E,R[213],13,[[["self"]],[R[208],["f32"]]]],[11,R[122],E,R[213],13,[[["self"]],[R[208],["f64"]]]],[11,"fft",E,R[214],12,[[["self"]],[R[211],["f32"]]]],[11,"fft",E,R[214],12,[[["self"]],[R[211],["f64"]]]],[11,"fft",E,R[207],10,[[["self"]],[R[208],["f32"]]]],[11,"fft",E,R[207],10,[[["self"]],[R[208],["f64"]]]],[11,"ifft",E,R[216],13,[[["self"]],[R[206],["f32"]]]],[11,"ifft",E,R[216],13,[[["self"]],[R[206],["f64"]]]],[11,"new",E,R[814],14,[[[T]],["self"]]],[11,"new",E,R[815],15,[[],["self"]]],[0,"meta",R[396],E,N,N],[3,"Real",R[403],R[422],N,N],[3,R[6],E,R[423],N,N],[3,R[228],E,R[424],N,N],[12,R[425],E,E,16,N],[3,"Time",E,R[426],N,N],[3,"Freq",E,R[427],N,N],[3,R[229],E,R[428],N,N],[12,R[429],E,E,17,N],[11,R[806],R[396],R[856],0,[[],[R[182]]]],[11,R[857],E,R[858],0,[[],[R[182]]]],[11,"parallel",E,R[859],0,[[],[R[182]]]],[11,"new",E,R[860],0,[[["usize"]],[R[182]]]],[11,R[861],E,R[862],0,[[["usize"],["usize"],["usize"],["usize"],["usize"]],[R[182]]]],[11,"new",E,R[854],18,[[["s"]],[R[855]]]],[11,"new",E,R[223],19,[[],[R[222]]]],[11,R[853],E,R[223],19,[[["usize"]],[R[222]]]],[11,R[863],E,R[864],2,N],[11,R[865],E,R[866],2,[[["self"]],["bool"]]],[0,R[430],E,R[431],N,N],[3,R[311],R[404],R[435],N,N],[3,R[312],E,R[436],N,N],[8,R[230],E,R[432],N,N],[10,R[1],E,R[433],20,[[["self"]],["bool"]]],[10,"window",E,R[434],20,[[["self"],["usize"],["usize"]],[T]]],[11,"new",E,R[816],21,[[[T]],["self"]]],[11,R[806],E,R[817],21,[[],["self"]]],[0,"numbers",R[396],R[437],N,N],[3,R[6],R[405],R[519],N,N],[12,"re",E,R[520],22,N],[12,"im",E,R[521],22,N],[8,"Float",E,R[451],N,N],[10,"nan",E,R[452],23,[[],["self"]]],[10,"infinity",E,R[453],23,[[],["self"]]],[10,R[454],E,R[455],23,[[],["self"]]],[10,"neg_zero",E,R[456],23,[[],["self"]]],[10,R[457],E,R[458],23,[[],["self"]]],[10,R[459],E,R[460],23,[[],["self"]]],[11,"epsilon",E,R[461],23,[[],["self"]]],[10,R[462],E,R[463],23,[[],["self"]]],[10,"is_nan",E,R[464],23,[[["self"]],["bool"]]],[10,R[219],E,R[465],23,[[["self"]],["bool"]]],[10,R[220],E,R[466],23,[[["self"]],["bool"]]],[10,R[221],E,R[467],23,[[["self"]],["bool"]]],[10,"classify",E,R[468],23,[[["self"]],[R[469]]]],[10,"floor",E,R[470],23,[[["self"]],["self"]]],[10,"ceil",E,R[471],23,[[["self"]],["self"]]],[10,"round",E,R[472],23,[[["self"]],["self"]]],[10,"trunc",E,R[473],23,[[["self"]],["self"]]],[10,"fract",E,R[474],23,[[["self"]],["self"]]],[10,"abs",E,R[475],23,[[["self"]],["self"]]],[10,"signum",E,R[476],23,[[["self"]],["self"]]],[10,R[477],E,R[478],23,[[["self"]],["bool"]]],[10,R[479],E,R[480],23,[[["self"]],["bool"]]],[10,"mul_add",E,R[481],23,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[482],23,[[["self"]],["self"]]],[10,"powi",E,R[483],23,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[484],23,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[485],23,[[["self"]],["self"]]],[10,"exp",E,R[486],23,[[["self"]],["self"]]],[10,"exp2",E,R[487],23,[[["self"]],["self"]]],[10,"ln",E,R[488],23,[[["self"]],["self"]]],[10,"log",E,R[489],23,[[["self"],["self"]],["self"]]],[10,"log2",E,R[490],23,[[["self"]],["self"]]],[10,"log10",E,R[491],23,[[["self"]],["self"]]],[11,R[492],E,R[493],23,[[["self"]],["self"]]],[11,R[494],E,R[495],23,[[["self"]],["self"]]],[10,"max",E,R[496],23,[[["self"],["self"]],["self"]]],[10,"min",E,R[497],23,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[498],23,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[499],23,[[["self"]],["self"]]],[10,"hypot",E,R[500],23,[[["self"],["self"]],["self"]]],[10,"sin",E,R[501],23,[[["self"]],["self"]]],[10,"cos",E,R[502],23,[[["self"]],["self"]]],[10,"tan",E,R[503],23,[[["self"]],["self"]]],[10,"asin",E,R[504],23,[[["self"]],["self"]]],[10,"acos",E,R[505],23,[[["self"]],["self"]]],[10,"atan",E,R[506],23,[[["self"]],["self"]]],[10,"atan2",E,R[507],23,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[508],23,N],[10,"exp_m1",E,R[509],23,[[["self"]],["self"]]],[10,"ln_1p",E,R[510],23,[[["self"]],["self"]]],[10,"sinh",E,R[511],23,[[["self"]],["self"]]],[10,"cosh",E,R[512],23,[[["self"]],["self"]]],[10,"tanh",E,R[513],23,[[["self"]],["self"]]],[10,"asinh",E,R[514],23,[[["self"]],["self"]]],[10,"acosh",E,R[515],23,[[["self"]],["self"]]],[10,"atanh",E,R[516],23,[[["self"]],["self"]]],[10,R[517],E,R[518],23,N],[8,"Num",E,R[448],N,N],[16,R[449],E,E,24,N],[10,R[192],E,R[450],24,[[["str"],["u32"]],[R[7]]]],[8,"One",E,R[522],N,N],[10,"one",E,R[523],25,[[],["self"]]],[11,"is_one",E,R[524],25,[[["self"]],["bool"]]],[8,R[438],E,R[439],N,N],[8,"ToSimd",E,R[440],N,N],[16,R[441],E,R[442],26,N],[16,"RegSse",E,E,26,N],[16,"RegAvx",E,E,26,N],[16,R[443],E,E,26,N],[16,"GpuReg",E,R[444],26,N],[8,R[445],E,R[446],N,N],[8,"Zero",E,R[447],N,N],[10,"zero",E,E,27,[[],["self"]]],[6,R[409],R[396],R[23],N,N],[6,R[410],E,R[40],N,N],[6,R[411],E,R[14],N,N],[6,R[412],E,R[17],N,N],[6,R[413],E,R[28],N,N],[6,R[626],E,R[23],N,N],[6,R[718],E,R[40],N,N],[6,R[677],E,R[14],N,N],[6,R[648],E,R[17],N,N],[6,R[783],E,R[28],N,N],[6,R[719],E,R[23],N,N],[6,R[684],E,R[40],N,N],[6,R[527],E,R[14],N,N],[6,R[757],E,R[17],N,N],[6,R[731],E,R[28],N,N],[6,R[680],E,R[23],N,N],[6,R[803],E,R[40],N,N],[6,R[756],E,R[14],N,N],[6,R[730],E,R[17],N,N],[6,R[586],E,R[28],N,N],[6,R[792],E,R[23],N,N],[6,R[624],E,R[40],N,N],[6,R[615],E,R[14],N,N],[6,R[573],E,R[17],N,N],[6,R[669],E,R[28],N,N],[6,"StatsVec",E,R[715],N,N],[6,"TransRes",E,R[698],N,N],[6,R[768],E,R[769],N,N],[6,R[682],E,R[683],N,N],[17,R[694],E,R[695],N,N],[8,"ToSlice",E,R[685],N,N],[10,R[60],E,R[686],28,N],[10,"len",E,R[687],28,[[["self"]],["usize"]]],[10,R[69],E,R[688],28,[[["self"]],["bool"]]],[10,R[41],E,R[689],28,[[["self"]],["usize"]]],[10,R[690],E,R[691],28,[[["self"],["usize"]],[R[327]]]],[8,R[254],E,R[620],N,N],[10,R[621],E,R[622],29,N],[8,"Resize",E,R[618],N,N],[10,"resize",E,R[619],30,[[["self"],["usize"]]]],[8,R[246],E,R[45],N,N],[10,R[591],E,R[46],31,[[["self"],["bool"],[R[16]]],[R[399]]]],[10,R[592],E,R[49],31,[[["self"],[R[26]]],[R[9]]]],[8,R[296],E,R[20],N,N],[10,R[793],E,R[66],32,[[["self"]],[R[400]]]],[10,R[794],E,R[67],32,[[["self"]],[R[401]]]],[8,R[253],E,R[20],N,N],[10,R[616],E,R[21],33,[[["self"]],[R[397]]]],[10,R[617],E,R[22],33,[[["self"]],[R[398]]]],[8,R[287],E,R[752],N,N],[16,R[59],E,R[753],34,N],[10,"get",E,R[754],34,N],[10,R[60],E,R[755],34,N],[8,R[240],E,R[574],N,N],[10,R[575],E,R[66],35,[[["self"],["self"]],[R[7],[R[397],R[8]]]]],[10,R[576],E,R[67],35,[[["self"],["self"]],[R[7],[R[398],R[8]]]]],[8,R[282],E,R[45],N,N],[10,R[728],E,R[46],36,[[["self"],["bool"],[R[16]]],[R[399]]]],[10,R[729],E,R[49],36,[[["self"],[R[26]]],[R[9]]]],[8,R[293],E,R[20],N,N],[10,R[787],E,R[66],37,[[["self"]],[R[400]]]],[10,R[788],E,R[67],37,[[["self"]],[R[401]]]],[8,R[233],E,R[20],N,N],[10,R[533],E,R[21],38,[[["self"]],[R[397]]]],[10,R[534],E,R[22],38,[[["self"]],[R[398]]]],[8,R[270],E,R[676],N,N],[16,R[59],E,E,39,N],[10,R[4],E,R[64],39,N],[8,R[292],E,R[784],N,N],[10,R[185],E,R[64],40,N],[8,R[763],E,R[764],N,N],[10,"domain",E,R[765],41,[[["self"]],[R[16]]]],[10,R[62],E,R[766],41,[[["self"]],["bool"]]],[8,R[273],E,R[42],N,N],[10,"resize",E,R[43],42,[[["self"],["usize"]],[R[327]]]],[8,R[242],E,R[42],N,N],[10,R[579],E,R[43],43,[[["self"],["b"],["usize"]],[R[327]]]],[8,"Vector",E,R[795],N,N],[10,"delta",E,R[79],44,[[["self"]],[T]]],[10,R[80],E,R[81],44,[[["self"],[T]]]],[10,"len",E,R[796],44,[[["self"]],["usize"]]],[10,R[69],E,R[797],44,[[["self"]],["bool"]]],[10,"points",E,R[798],44,[[["self"]],["usize"]]],[10,R[181],E,R[799],44,[[["self"]],[R[182]]]],[10,R[183],E,R[800],44,[[["self"],[R[182]]]]],[10,R[41],E,R[801],44,[[["self"]],["usize"]]],[8,R[259],E,R[640],N,N],[10,R[123],E,R[641],45,[[["self"]],[R[26]]]],[8,R[255],E,R[50],N,N],[10,R[120],E,R[51],46,N],[10,R[121],E,R[52],46,N],[10,R[122],E,R[53],46,N],[10,R[190],E,R[54],46,N],[10,"phase",E,R[55],46,N],[8,R[283],E,R[50],N,N],[10,R[136],E,R[51],47,N],[10,R[137],E,R[52],47,N],[10,R[138],E,R[53],47,N],[10,R[139],E,R[54],47,N],[10,R[188],E,R[55],47,N],[8,R[281],E,R[720],N,N],[10,R[96],E,R[721],48,[[["self"],["a"]]]],[10,R[97],E,R[722],48,[[["self"],["a"]]]],[10,R[98],E,R[723],48,[[["self"],["a"]]]],[10,R[99],E,R[724],48,[[["self"],["a"]]]],[10,R[100],E,R[725],48,[[["self"],["a"]]]],[10,R[101],E,R[726],48,[[["self"],["a"],["a"]]]],[10,R[102],E,R[727],48,[[["self"],["a"],["a"]]]],[8,R[269],E,R[673],N,N],[10,R[153],E,R[674],49,[[["self"],["a"],["a"]],[R[327]]]],[10,R[154],E,R[675],49,[[["self"],["a"],["a"]],[R[327]]]],[8,R[261],E,R[644],N,N],[10,R[133],E,R[645],50,[[["self"],[T],[T]]]],[10,"conj",E,R[646],50,[[["self"]]]],[8,R[249],E,R[58],N,N],[10,R[18],E,R[596],51,[[["self"]],[R[325]]]],[8,R[285],E,R[58],N,N],[10,R[135],E,R[747],52,N],[8,"RealOps",E,R[63],N,N],[10,"abs",E,R[767],53,[[["self"]]]],[8,R[280],E,R[63],N,N],[10,"wrap",E,R[716],54,[[["self"],[T]]]],[10,"unwrap",E,R[717],54,[[["self"],[T]]]],[8,R[265],E,R[657],N,N],[10,R[107],E,R[658],55,[[["self"]]]],[10,R[108],E,R[659],55,[[["self"]]]],[10,R[109],E,R[660],55,[[["self"]]]],[10,R[110],E,R[661],55,[[["self"]]]],[10,R[111],E,R[662],55,[[["self"],[T]]]],[10,R[112],E,R[663],55,[[["self"],[T]]]],[10,R[113],E,R[664],55,[[["self"],[T]]]],[8,R[278],E,R[29],N,N],[10,"mirror",E,R[711],56,[[["self"],["b"]]]],[10,R[159],E,R[712],56,[[["self"]]]],[10,R[160],E,R[713],56,[[["self"]]]],[8,R[291],E,R[29],N,N],[10,R[144],E,R[772],57,[[["self"],[R[31]]]]],[10,R[145],E,R[773],57,[[["self"],[R[31]]]]],[8,R[288],E,R[29],N,N],[10,R[146],E,R[61],58,N],[10,"fft",E,R[61],58,N],[10,R[147],E,R[758],58,N],[8,R[263],E,R[29],N,N],[10,R[155],E,R[30],59,[[["self"],["b"]],[R[325]]]],[10,"sfft",E,R[30],59,[[["self"],["b"]],[R[325]]]],[10,R[156],E,R[30],59,[[["self"],["b"],[R[31]]],[R[325]]]],[8,R[297],E,R[29],N,N],[10,R[104],E,R[68],60,N],[10,"ifft",E,R[68],60,N],[10,R[105],E,R[68],60,N],[8,R[234],E,R[29],N,N],[10,R[131],E,R[10],61,[[["self"],["b"]],[R[325]]]],[10,"sifft",E,R[10],61,[[["self"],["b"]],[R[325]]]],[10,R[132],E,R[10],61,[[["self"],["b"],[R[31]]],[R[325]]]],[8,R[294],E,R[789],N,N],[10,R[140],E,R[790],62,N],[10,R[141],E,R[791],62,N],[8,R[241],E,R[577],N,N],[10,R[103],E,R[578],63,[[["self"],["b"],["a"]],[R[327]]]],[8,R[268],E,R[672],N,N],[10,R[134],E,R[44],64,[[["self"],["b"],["c"],[T],["usize"]]]],[8,R[274],E,R[696],N,N],[10,R[152],E,R[44],65,[[["self"],["b"],["a"]],[R[327]]]],[8,R[260],E,R[642],N,N],[10,R[106],E,R[643],66,[[["self"],["c"],[T]]]],[8,R[271],E,R[678],N,N],[10,R[126],E,R[37],67,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[10,R[127],E,R[37],67,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[10,R[128],E,R[39],67,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[10,R[130],E,R[39],67,[[["self"],["b"],["usize"]]]],[10,R[129],E,R[679],67,[[["self"],["u32"],["u32"]]]],[8,R[277],E,R[706],N,N],[10,R[157],E,R[707],68,[[["self"],["b"],[T],[T]]]],[10,R[158],E,R[708],68,[[["self"],["b"],[T],[T]]]],[8,R[245],E,R[19],N,N],[10,R[189],E,R[587],69,[[["other"]],["self"]]],[8,R[244],E,R[585],N,N],[10,R[161],E,R[15],70,[[["other"]],["self"]]],[10,R[162],E,R[15],70,[[["other"],["bool"],[R[16]]],["self"]]],[8,R[251],E,R[19],N,N],[10,R[184],E,R[608],71,[[["self"]],["other"]]],[8,R[264],E,R[24],N,N],[16,R[649],E,E,72,N],[8,R[272],E,R[24],N,N],[16,R[681],E,E,73,N],[8,R[279],E,R[24],N,N],[16,R[714],E,R[24],74,N],[8,R[257],E,R[24],N,N],[16,R[637],E,E,75,N],[8,R[237],E,R[24],N,N],[16,R[538],E,E,76,N],[8,R[589],E,R[25],N,N],[10,"scale",E,R[590],77,[[["self"],[T]]]],[8,R[252],E,R[613],N,N],[10,"offset",E,R[614],78,[[["self"],[T]]]],[8,R[232],E,R[528],N,N],[10,"add",E,R[529],79,[[["self"],["a"]],[R[327]]]],[10,"sub",E,R[530],79,[[["self"],["a"]],[R[327]]]],[10,"mul",E,R[531],79,[[["self"],["a"]],[R[327]]]],[10,"div",E,R[532],79,[[["self"],["a"]],[R[327]]]],[8,R[243],E,R[580],N,N],[10,R[164],E,R[581],80,[[["self"],["a"]],[R[327]]]],[10,R[165],E,R[582],80,[[["self"],["a"]],[R[327]]]],[10,R[167],E,R[583],80,[[["self"],["a"]],[R[327]]]],[10,R[166],E,R[584],80,[[["self"],["a"]],[R[327]]]],[8,"TrigOps",E,R[737],N,N],[10,"sin",E,R[738],81,[[["self"]]]],[10,"cos",E,R[739],81,[[["self"]]]],[10,"tan",E,R[740],81,[[["self"]]]],[10,"asin",E,R[741],81,[[["self"]]]],[10,"acos",E,R[742],81,[[["self"]]]],[10,"atan",E,R[743],81,[[["self"]]]],[10,"sinh",E,R[744],81,[[["self"]]]],[10,"cosh",E,R[745],81,[[["self"]]]],[10,"tanh",E,R[746],81,[[["self"]]]],[10,"asinh",E,R[57],81,[[["self"]]]],[10,"acosh",E,R[57],81,[[["self"]]]],[10,"atanh",E,R[57],81,[[["self"]]]],[8,R[627],E,R[628],N,N],[10,"sqrt",E,R[629],82,[[["self"]]]],[10,"square",E,R[630],82,[[["self"]]]],[10,"root",E,R[631],82,[[["self"],[T]]]],[10,"powf",E,R[632],82,[[["self"],[T]]]],[10,"ln",E,R[633],82,[[["self"]]]],[10,"exp",E,R[634],82,[[["self"]]]],[10,"log",E,R[635],82,[[["self"],[T]]]],[10,"expf",E,R[636],82,[[["self"],[T]]]],[8,R[284],E,R[734],N,N],[10,R[179],E,R[735],83,[[["self"]]]],[10,R[114],E,R[736],83,[[["self"]]]],[8,R[266],E,R[32],N,N],[10,R[665],E,R[33],84,[[["self"],["usize"],[R[34]]],[R[327]]]],[10,R[178],E,R[35],84,[[["self"],["u32"]],[R[327]]]],[8,R[247],E,R[32],N,N],[10,R[176],E,R[33],85,[[["self"],["b"],["usize"],[R[34]]],[R[327]]]],[10,R[177],E,R[35],85,[[["self"],["b"],["u32"]]]],[8,R[778],E,R[779],N,N],[10,R[175],E,R[780],86,N],[8,R[666],E,R[667],N,N],[10,"merge",E,R[668],87,N],[8,R[267],E,R[670],N,N],[10,"diff",E,R[36],88,[[["self"]]]],[10,R[124],E,R[36],88,[[["self"]]]],[10,R[191],E,R[671],88,[[["self"]]]],[8,R[275],E,R[25],N,N],[16,R[59],E,E,89,N],[10,R[151],E,R[697],89,N],[8,R[258],E,R[25],N,N],[16,R[59],E,E,90,N],[10,R[125],E,R[638],90,N],[8,R[262],E,R[27],N,N],[10,R[115],E,R[647],91,[[["self"],["a"],["f"]]]],[8,R[256],E,R[27],N,N],[16,R[59],E,E,92,N],[10,R[170],E,R[625],92,N],[8,R[298],E,R[70],N,N],[16,"Result",E,E,93,N],[10,R[150],E,R[802],93,N],[8,R[295],E,R[70],N,N],[16,"Result",E,E,94,N],[10,R[163],E,R[13],94,[[["self"],["usize"]],[R[326]]]],[8,"SumOps",E,R[785],N,N],[10,"sum",E,R[786],95,[[["self"]],[T]]],[10,"sum_sq",E,R[65],95,[[["self"]],[T]]],[8,"Stats",E,R[650],N,N],[10,"empty",E,R[651],96,[[],["self"]]],[10,R[172],E,R[652],96,[[["usize"]],[R[408]]]],[10,R[805],E,R[653],96,[[],["self"]]],[10,"merge",E,R[654],96,N],[10,R[171],E,R[655],96,N],[10,"add",E,R[656],96,[[["self"],[T],["usize"]]]],[8,R[236],E,R[12],N,N],[16,"Result",E,E,97,N],[10,R[149],E,R[13],97,N],[8,R[231],E,R[12],N,N],[16,"Result",E,E,98,N],[10,R[148],E,R[13],98,[[["self"],["usize"]],[R[326]]]],[8,R[235],E,R[535],N,N],[10,R[143],E,R[536],99,[[["self"]],[T]]],[10,R[142],E,R[65],99,[[["self"]],[T]]],[8,R[238],E,R[540],N,N],[10,R[187],E,R[541],100,[[["self"],[T],["usize"],[T],[T]]]],[8,R[290],E,R[770],N,N],[10,"trade",E,R[771],101,[[["self"],["s"]]]],[8,"Buffer",E,R[609],N,N],[16,"Borrow",E,R[610],102,N],[10,R[88],E,R[611],102,N],[10,R[41],E,R[612],102,[[["self"]],["usize"]]],[8,R[248],E,R[593],N,N],[10,R[62],E,E,103,[[["self"]],["bool"]]],[10,R[18],E,R[594],103,[[["self"]]]],[10,R[122],E,R[595],103,[[["self"]]]],[8,"Domain",E,R[537],N,N],[10,"domain",E,E,104,[[["self"]],[R[16]]]],[10,R[807],E,R[11],104,[[["self"]]]],[10,R[808],E,R[11],104,[[["self"]]]],[8,R[525],E,R[526],N,N],[8,R[732],E,R[733],N,N],[8,R[776],E,R[777],N,N],[8,R[774],E,R[775],N,N],[8,"PosEq",E,R[639],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[91],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,N],[11,R[84],E,E,0,[[[U]],[R[7]]]],[11,R[88],E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[R[89]]]],[11,R[85],E,E,0,[[["self"]],[T]]],[11,R[86],E,E,0,[[["self"]],[R[7]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[["self"]],[U]]],[11,R[84],E,E,105,[[[U]],[R[7]]]],[11,R[88],E,E,105,[[["self"]],[T]]],[11,R[87],E,E,105,[[["self"]],[R[89]]]],[11,R[85],E,E,105,[[["self"]],[T]]],[11,R[86],E,E,105,[[["self"]],[R[7]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[84],E,E,18,[[[U]],[R[7]]]],[11,R[88],E,E,18,[[["self"]],[T]]],[11,R[87],E,E,18,[[["self"]],[R[89]]]],[11,R[85],E,E,18,[[["self"]],[T]]],[11,R[86],E,E,18,[[["self"]],[R[7]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[["self"]],[U]]],[11,R[84],E,E,106,[[[U]],[R[7]]]],[11,R[88],E,E,106,[[["self"]],[T]]],[11,R[87],E,E,106,[[["self"]],[R[89]]]],[11,R[85],E,E,106,[[["self"]],[T]]],[11,R[86],E,E,106,[[["self"]],[R[7]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[84],E,E,19,[[[U]],[R[7]]]],[11,R[88],E,E,19,[[["self"]],[T]]],[11,R[87],E,E,19,[[["self"]],[R[89]]]],[11,R[85],E,E,19,[[["self"]],[T]]],[11,R[86],E,E,19,[[["self"]],[R[7]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[["self"]],[U]]],[11,R[84],E,E,107,[[[U]],[R[7]]]],[11,R[88],E,E,107,[[["self"]],[T]]],[11,R[87],E,E,107,[[["self"]],[R[89]]]],[11,R[85],E,E,107,[[["self"]],[T]]],[11,R[86],E,E,107,[[["self"]],[R[7]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[["self"]],[U]]],[11,R[84],E,E,108,[[[U]],[R[7]]]],[11,R[88],E,E,108,[[["self"]],[T]]],[11,R[87],E,E,108,[[["self"]],[R[89]]]],[11,R[85],E,E,108,[[["self"]],[T]]],[11,R[86],E,E,108,[[["self"]],[R[7]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[91],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,N],[11,R[84],E,E,1,[[[U]],[R[7]]]],[11,R[88],E,E,1,[[["self"]],[T]]],[11,R[87],E,E,1,[[["self"]],[R[89]]]],[11,R[85],E,E,1,[[["self"]],[T]]],[11,R[86],E,E,1,[[["self"]],[R[7]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[91],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,N],[11,R[84],E,E,2,[[[U]],[R[7]]]],[11,R[88],E,E,2,[[["self"]],[T]]],[11,R[87],E,E,2,[[["self"]],[R[89]]]],[11,R[85],E,E,2,[[["self"]],[T]]],[11,R[86],E,E,2,[[["self"]],[R[7]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[["self"]],[U]]],[11,R[91],E,E,109,[[["self"]],[T]]],[11,R[92],E,E,109,N],[11,R[84],E,E,109,[[[U]],[R[7]]]],[11,R[88],E,E,109,[[["self"]],[T]]],[11,R[87],E,E,109,[[["self"]],[R[89]]]],[11,R[85],E,E,109,[[["self"]],[T]]],[11,R[86],E,E,109,[[["self"]],[R[7]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[["self"]],[U]]],[11,R[84],E,E,110,[[[U]],[R[7]]]],[11,R[88],E,E,110,[[["self"]],[T]]],[11,R[87],E,E,110,[[["self"]],[R[89]]]],[11,R[85],E,E,110,[[["self"]],[T]]],[11,R[86],E,E,110,[[["self"]],[R[7]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[91],E,E,3,[[["self"]],[T]]],[11,R[92],E,E,3,N],[11,R[84],E,E,3,[[[U]],[R[7]]]],[11,R[88],E,E,3,[[["self"]],[T]]],[11,R[87],E,E,3,[[["self"]],[R[89]]]],[11,R[85],E,E,3,[[["self"]],[T]]],[11,R[86],E,E,3,[[["self"]],[R[7]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[91],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,N],[11,R[84],E,E,4,[[[U]],[R[7]]]],[11,R[88],E,E,4,[[["self"]],[T]]],[11,R[87],E,E,4,[[["self"]],[R[89]]]],[11,R[85],E,E,4,[[["self"]],[T]]],[11,R[86],E,E,4,[[["self"]],[R[7]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[91],E,E,5,[[["self"]],[T]]],[11,R[92],E,E,5,N],[11,R[84],E,E,5,[[[U]],[R[7]]]],[11,R[88],E,E,5,[[["self"]],[T]]],[11,R[87],E,E,5,[[["self"]],[R[89]]]],[11,R[85],E,E,5,[[["self"]],[T]]],[11,R[86],E,E,5,[[["self"]],[R[7]]]],[11,"from",R[402],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[84],E,E,10,[[[U]],[R[7]]]],[11,R[88],E,E,10,[[["self"]],[T]]],[11,R[87],E,E,10,[[["self"]],[R[89]]]],[11,R[85],E,E,10,[[["self"]],[T]]],[11,R[86],E,E,10,[[["self"]],[R[7]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[84],E,E,11,[[[U]],[R[7]]]],[11,R[88],E,E,11,[[["self"]],[T]]],[11,R[87],E,E,11,[[["self"]],[R[89]]]],[11,R[85],E,E,11,[[["self"]],[T]]],[11,R[86],E,E,11,[[["self"]],[R[7]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[84],E,E,12,[[[U]],[R[7]]]],[11,R[88],E,E,12,[[["self"]],[T]]],[11,R[87],E,E,12,[[["self"]],[R[89]]]],[11,R[85],E,E,12,[[["self"]],[T]]],[11,R[86],E,E,12,[[["self"]],[R[7]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[84],E,E,13,[[[U]],[R[7]]]],[11,R[88],E,E,13,[[["self"]],[T]]],[11,R[87],E,E,13,[[["self"]],[R[89]]]],[11,R[85],E,E,13,[[["self"]],[T]]],[11,R[86],E,E,13,[[["self"]],[R[7]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[84],E,E,14,[[[U]],[R[7]]]],[11,R[88],E,E,14,[[["self"]],[T]]],[11,R[87],E,E,14,[[["self"]],[R[89]]]],[11,R[85],E,E,14,[[["self"]],[T]]],[11,R[86],E,E,14,[[["self"]],[R[7]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[84],E,E,15,[[[U]],[R[7]]]],[11,R[88],E,E,15,[[["self"]],[T]]],[11,R[87],E,E,15,[[["self"]],[R[89]]]],[11,R[85],E,E,15,[[["self"]],[T]]],[11,R[86],E,E,15,[[["self"]],[R[7]]]],[11,"from",R[403],E,111,[[[T]],[T]]],[11,"into",E,E,111,[[["self"]],[U]]],[11,R[91],E,E,111,[[["self"]],[T]]],[11,R[92],E,E,111,N],[11,R[84],E,E,111,[[[U]],[R[7]]]],[11,R[88],E,E,111,[[["self"]],[T]]],[11,R[87],E,E,111,[[["self"]],[R[89]]]],[11,R[85],E,E,111,[[["self"]],[T]]],[11,R[86],E,E,111,[[["self"]],[R[7]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[["self"]],[U]]],[11,R[91],E,E,112,[[["self"]],[T]]],[11,R[92],E,E,112,N],[11,R[84],E,E,112,[[[U]],[R[7]]]],[11,R[88],E,E,112,[[["self"]],[T]]],[11,R[87],E,E,112,[[["self"]],[R[89]]]],[11,R[85],E,E,112,[[["self"]],[T]]],[11,R[86],E,E,112,[[["self"]],[R[7]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[91],E,E,16,[[["self"]],[T]]],[11,R[92],E,E,16,N],[11,R[84],E,E,16,[[[U]],[R[7]]]],[11,R[88],E,E,16,[[["self"]],[T]]],[11,R[87],E,E,16,[[["self"]],[R[89]]]],[11,R[85],E,E,16,[[["self"]],[T]]],[11,R[86],E,E,16,[[["self"]],[R[7]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[["self"]],[U]]],[11,R[91],E,E,113,[[["self"]],[T]]],[11,R[92],E,E,113,N],[11,R[84],E,E,113,[[[U]],[R[7]]]],[11,R[88],E,E,113,[[["self"]],[T]]],[11,R[87],E,E,113,[[["self"]],[R[89]]]],[11,R[85],E,E,113,[[["self"]],[T]]],[11,R[86],E,E,113,[[["self"]],[R[7]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[["self"]],[U]]],[11,R[91],E,E,114,[[["self"]],[T]]],[11,R[92],E,E,114,N],[11,R[84],E,E,114,[[[U]],[R[7]]]],[11,R[88],E,E,114,[[["self"]],[T]]],[11,R[87],E,E,114,[[["self"]],[R[89]]]],[11,R[85],E,E,114,[[["self"]],[T]]],[11,R[86],E,E,114,[[["self"]],[R[7]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[91],E,E,17,[[["self"]],[T]]],[11,R[92],E,E,17,N],[11,R[84],E,E,17,[[[U]],[R[7]]]],[11,R[88],E,E,17,[[["self"]],[T]]],[11,R[87],E,E,17,[[["self"]],[R[89]]]],[11,R[85],E,E,17,[[["self"]],[T]]],[11,R[86],E,E,17,[[["self"]],[R[7]]]],[11,"from",R[404],E,115,[[[T]],[T]]],[11,"into",E,E,115,[[["self"]],[U]]],[11,R[84],E,E,115,[[[U]],[R[7]]]],[11,R[88],E,E,115,[[["self"]],[T]]],[11,R[87],E,E,115,[[["self"]],[R[89]]]],[11,R[85],E,E,115,[[["self"]],[T]]],[11,R[86],E,E,115,[[["self"]],[R[7]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[84],E,E,21,[[[U]],[R[7]]]],[11,R[88],E,E,21,[[["self"]],[T]]],[11,R[87],E,E,21,[[["self"]],[R[89]]]],[11,R[85],E,E,21,[[["self"]],[T]]],[11,R[86],E,E,21,[[["self"]],[R[7]]]],[11,"zero",R[405],E,22,[[],[T]]],[11,R[804],E,E,22,[[["self"]],["string"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[91],E,E,22,[[["self"]],[T]]],[11,R[92],E,E,22,N],[11,R[84],E,E,22,[[[U]],[R[7]]]],[11,R[88],E,E,22,[[["self"]],[T]]],[11,R[87],E,E,22,[[["self"]],[R[89]]]],[11,R[85],E,E,22,[[["self"]],[T]]],[11,R[86],E,E,22,[[["self"]],[R[7]]]],[11,"from",E,E,22,[[[U]],["option",[R[4]]]]],[11,"sub",E,E,22,[[["self"],[T]],[R[4]]]],[11,"sub",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"sub",E,E,22,[[["self"],[T]],[R[4]]]],[11,"sub",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,R[192],E,R[193],22,[[["str"],["u32"]],[R[7],[R[4]]]]],[11,"neg",E,E,22,[[["self"]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"from_str",E,R[193],22,[[["str"]],[R[7],[R[4]]]]],[11,"inv",E,E,22,[[["self"]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"sum",E,E,22,[[["i"]],[R[4]]]],[11,"sum",E,E,22,[[["i"]],[R[4]]]],[11,R[806],E,E,22,[[],[R[4]]]],[11,"product",E,E,22,[[["i"]],[R[4]]]],[11,"product",E,E,22,[[["i"]],[R[4]]]],[11,R[810],E,E,22,[[["usize"]],["option",[R[4]]]]],[11,R[811],E,E,22,[[["isize"]],["option",[R[4]]]]],[11,"from_u8",E,E,22,[[["u8"]],["option",[R[4]]]]],[11,"from_u16",E,E,22,[[["u16"]],["option",[R[4]]]]],[11,"from_u32",E,E,22,[[["u32"]],["option",[R[4]]]]],[11,"from_u64",E,E,22,[[["u64"]],["option",[R[4]]]]],[11,"from_i8",E,E,22,[[["i8"]],["option",[R[4]]]]],[11,"from_i16",E,E,22,[[["i16"]],["option",[R[4]]]]],[11,"from_i32",E,E,22,[[["i32"]],["option",[R[4]]]]],[11,"from_i64",E,E,22,[[["i64"]],["option",[R[4]]]]],[11,R[812],E,E,22,[[["u128"]],["option",[R[4]]]]],[11,R[813],E,E,22,[[["i128"]],["option",[R[4]]]]],[11,"from_f32",E,E,22,[[["f32"]],["option",[R[4]]]]],[11,"from_f64",E,E,22,[[["f64"]],["option",[R[4]]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,R[194],E,E,22,N],[11,R[194],E,E,22,N],[11,R[194],E,E,22,N],[11,R[194],E,E,22,N],[11,"div",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"div",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"div",E,E,22,[[["self"],[T]],[R[4]]]],[11,"div",E,E,22,[[["self"],[T]],[R[4]]]],[11,R[195],E,E,22,N],[11,R[195],E,E,22,N],[11,R[195],E,E,22,N],[11,R[195],E,E,22,N],[11,"clone",E,E,22,[[["self"]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"eq",E,E,22,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[4]]],["bool"]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"from",E,E,22,[[[T]],[R[4]]]],[11,"from",E,E,22,[[[T]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"zero",E,E,22,[[],[R[4]]]],[11,"is_zero",E,E,22,[[["self"]],["bool"]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"add",E,E,22,[[["self"],[T]],[R[4]]]],[11,"add",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"add",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"add",E,E,22,[[["self"],[T]],[R[4]]]],[11,"one",E,E,22,[[],[R[4]]]],[11,"is_one",E,E,22,[[["self"]],["bool"]]],[11,R[196],E,E,22,N],[11,R[196],E,E,22,N],[11,R[196],E,E,22,N],[11,R[196],E,E,22,N],[11,R[197],E,E,22,N],[11,R[197],E,E,22,N],[11,R[197],E,E,22,N],[11,R[197],E,E,22,N],[11,"hash",E,E,22,N],[11,"as_",E,E,22,[[["self"]],[U]]],[11,"to_usize",E,E,22,[[["self"]],["option",["usize"]]]],[11,"to_isize",E,E,22,[[["self"]],["option",["isize"]]]],[11,"to_u8",E,E,22,[[["self"]],["option",["u8"]]]],[11,"to_u16",E,E,22,[[["self"]],["option",["u16"]]]],[11,"to_u32",E,E,22,[[["self"]],["option",["u32"]]]],[11,"to_u64",E,E,22,[[["self"]],["option",["u64"]]]],[11,"to_i8",E,E,22,[[["self"]],["option",["i8"]]]],[11,"to_i16",E,E,22,[[["self"]],["option",["i16"]]]],[11,"to_i32",E,E,22,[[["self"]],["option",["i32"]]]],[11,"to_i64",E,E,22,[[["self"]],["option",["i64"]]]],[11,"to_u128",E,E,22,[[["self"]],["option",["u128"]]]],[11,"to_i128",E,E,22,[[["self"]],["option",["i128"]]]],[11,"to_f32",E,E,22,[[["self"]],["option",["f32"]]]],[11,"to_f64",E,E,22,[[["self"]],["option",["f64"]]]],[11,"rem",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"rem",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"rem",E,E,22,[[["self"],[T]],[R[4]]]],[11,"rem",E,E,22,[[["self"],[T]],[R[4]]]],[11,R[198],E,E,22,N],[11,R[198],E,E,22,N],[11,R[198],E,E,22,N],[11,R[198],E,E,22,N],[11,"mul",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"mul",E,E,22,[[["self"],[T]],[R[4]]]],[11,"mul",E,E,22,[[["self"],[R[4]]],[R[4]]]],[11,"mul",E,E,22,[[["self"],[T]],[R[4]]]],[11,R[1],R[402],E,10,[[["self"]],["bool"]]],[11,"calc",E,E,10,[[["self"],["f32"]],["f32"]]],[11,R[1],E,E,10,[[["self"]],["bool"]]],[11,"calc",E,E,10,[[["self"],["f64"]],["f64"]]],[11,R[1],E,E,14,[[["self"]],["bool"]]],[11,"calc",E,E,14,[[["self"],[T]],[T]]],[11,R[1],E,E,15,[[["self"]],["bool"]]],[11,"calc",E,E,15,[[["self"],[T]],[T]]],[11,R[1],E,E,11,[[["self"]],["bool"]]],[11,"calc",E,E,11,[[["self"],["f32"]],["f32"]]],[11,R[1],E,E,11,[[["self"]],["bool"]]],[11,"calc",E,E,11,[[["self"],["f64"]],["f64"]]],[11,R[1],E,E,14,[[["self"]],["bool"]]],[11,"calc",E,E,14,[[["self"],[T]],[T]]],[11,R[1],E,E,15,[[["self"]],["bool"]]],[11,"calc",E,E,15,[[["self"],[T]],[T]]],[11,R[1],E,E,12,[[["self"]],["bool"]]],[11,"calc",E,E,12,[[["self"],["f32"]],[R[406]]]],[11,R[1],E,E,12,[[["self"]],["bool"]]],[11,"calc",E,E,12,[[["self"],["f64"]],[R[407]]]],[11,R[1],E,E,13,[[["self"]],["bool"]]],[11,"calc",E,E,13,[[["self"],["f32"]],[R[406]]]],[11,R[1],E,E,13,[[["self"]],["bool"]]],[11,"calc",E,E,13,[[["self"],["f64"]],[R[407]]]],[11,"get",R[396],E,2,N],[11,R[60],E,E,2,N],[11,R[4],E,E,2,[[["self"],["usize"]],[R[4]]]],[11,R[4],E,E,2,N],[11,R[4],E,E,2,N],[11,R[4],E,E,2,N],[11,R[4],E,E,2,N],[11,R[185],E,E,2,[[["self"],["usize"]],[R[4]]]],[11,R[185],E,E,2,N],[11,R[185],E,E,2,N],[11,R[185],E,E,2,N],[11,R[185],E,E,2,N],[11,"domain",E,E,2,[[["self"]],[R[16]]]],[11,R[62],E,E,2,[[["self"]],["bool"]]],[11,"domain",E,E,109,[[["self"]],[R[16]]]],[11,R[62],E,E,109,[[["self"]],["bool"]]],[11,"resize",E,E,2,[[["self"],["usize"]],[R[327]]]],[11,R[579],E,E,2,[[["self"],["b"],["usize"]],[R[327]]]],[11,"delta",E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"len",E,E,2,[[["self"]],["usize"]]],[11,R[69],E,E,2,[[["self"]],["bool"]]],[11,"points",E,E,2,[[["self"]],["usize"]]],[11,R[181],E,E,2,[[["self"]],[R[182]]]],[11,R[183],E,E,2,[[["self"],[R[182]]]]],[11,R[41],E,E,2,[[["self"]],["usize"]]],[11,R[123],E,E,2,[[["self"]],[R[26]]]],[11,R[120],E,E,2,N],[11,R[121],E,E,2,N],[11,R[122],E,E,2,N],[11,R[190],E,E,2,N],[11,"phase",E,E,2,N],[11,R[136],E,E,2,N],[11,R[137],E,E,2,N],[11,R[138],E,E,2,N],[11,R[139],E,E,2,N],[11,R[188],E,E,2,N],[11,R[96],E,E,2,[[["self"],["o"]]]],[11,R[97],E,E,2,[[["self"],["o"]]]],[11,R[98],E,E,2,[[["self"],["o"]]]],[11,R[99],E,E,2,[[["self"],["o"]]]],[11,R[100],E,E,2,[[["self"],["o"]]]],[11,R[101],E,E,2,[[["self"],["o"],["o"]]]],[11,R[102],E,E,2,[[["self"],["o"],["o"]]]],[11,R[153],E,E,2,[[["self"],["o"],["o"]],[R[327]]]],[11,R[154],E,E,2,[[["self"],["o"],["o"]],[R[327]]]],[11,R[133],E,E,2,[[["self"],[T],[T]]]],[11,"conj",E,E,2,[[["self"]]]],[11,R[18],E,E,2,[[["self"]],[R[325]]]],[11,R[135],E,E,2,N],[11,"abs",E,E,2,[[["self"]]]],[11,"wrap",E,E,2,[[["self"],[T]]]],[11,"unwrap",E,E,2,[[["self"],[T]]]],[11,R[107],E,E,2,[[["self"]]]],[11,R[108],E,E,2,[[["self"]]]],[11,R[109],E,E,2,[[["self"]]]],[11,R[110],E,E,2,[[["self"]]]],[11,R[111],E,E,2,[[["self"],[T]]]],[11,R[112],E,E,2,[[["self"],[T]]]],[11,R[113],E,E,2,[[["self"],[T]]]],[11,"mirror",E,E,2,[[["self"],["b"]]]],[11,R[159],E,E,2,[[["self"]]]],[11,R[160],E,E,2,[[["self"]]]],[11,R[144],E,E,2,[[["self"],[R[31]]]]],[11,R[145],E,E,2,[[["self"],[R[31]]]]],[11,R[146],E,E,2,N],[11,"fft",E,E,2,N],[11,R[147],E,E,2,N],[11,R[155],E,E,2,[[["self"],["b"]],[R[325]]]],[11,"sfft",E,E,2,[[["self"],["b"]],[R[325]]]],[11,R[156],E,E,2,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[104],E,E,2,N],[11,"ifft",E,E,2,N],[11,R[105],E,E,2,N],[11,R[131],E,E,2,[[["self"],["b"]],[R[325]]]],[11,"sifft",E,E,2,[[["self"],["b"]],[R[325]]]],[11,R[132],E,E,2,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[140],E,E,2,N],[11,R[141],E,E,2,N],[11,R[103],E,E,2,[[["self"],["b"],["o"]],[R[327]]]],[11,R[134],E,E,2,[[["self"],["b"],[R[203]],[T],["usize"]]]],[11,R[134],E,E,2,[[["self"],["b"],[R[212]],[T],["usize"]]]],[11,R[152],E,E,2,[[["self"],["b"],[R[9]]],[R[327]]]],[11,R[106],E,E,2,[[["self"],[R[215]],[T]]]],[11,R[106],E,E,2,[[["self"],[R[38]],[T]]]],[11,R[126],E,E,2,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[11,R[127],E,E,2,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[11,R[130],E,E,2,[[["self"],["b"],["usize"]]]],[11,R[128],E,E,2,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[11,R[129],E,E,2,[[["self"],["u32"],["u32"]]]],[11,R[158],E,E,2,[[["self"],["b"],[T],[T]]]],[11,R[157],E,E,2,[[["self"],["b"],[T],[T]]]],[11,R[189],E,E,2,[[["o"]],["self"]]],[11,R[161],E,E,116,[[[R[9]]],["self"]]],[11,R[162],E,E,116,[[[R[9]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,117,[[[R[9]]],["self"]]],[11,R[162],E,E,117,[[[R[9]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,118,[[[R[9]]],["self"]]],[11,R[162],E,E,118,[[[R[9]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,119,[[[R[9]]],["self"]]],[11,R[162],E,E,119,[[[R[9]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,120,[[[R[9]]],["self"]]],[11,R[162],E,E,120,[[[R[9]],["bool"],[R[16]]],["self"]]],[11,R[184],E,E,2,[[["self"]],["o"]]],[11,"scale",E,E,2,[[["self"],[T]]]],[11,"scale",E,E,2,[[["self"],[R[4]]]]],[11,"offset",E,E,2,[[["self"],[T]]]],[11,"offset",E,E,2,[[["self"],[R[4]]]]],[11,"add",E,E,2,[[["self"],["o"]],[R[327]]]],[11,"sub",E,E,2,[[["self"],["o"]],[R[327]]]],[11,"mul",E,E,2,[[["self"],["o"]],[R[327]]]],[11,"div",E,E,2,[[["self"],["o"]],[R[327]]]],[11,R[164],E,E,2,[[["self"],["o"]],[R[327]]]],[11,R[165],E,E,2,[[["self"],["o"]],[R[327]]]],[11,R[167],E,E,2,[[["self"],["o"]],[R[327]]]],[11,R[166],E,E,2,[[["self"],["o"]],[R[327]]]],[11,"sin",E,E,2,[[["self"]]]],[11,"cos",E,E,2,[[["self"]]]],[11,"tan",E,E,2,[[["self"]]]],[11,"asin",E,E,2,[[["self"]]]],[11,"acos",E,E,2,[[["self"]]]],[11,"atan",E,E,2,[[["self"]]]],[11,"sinh",E,E,2,[[["self"]]]],[11,"cosh",E,E,2,[[["self"]]]],[11,"tanh",E,E,2,[[["self"]]]],[11,"asinh",E,E,2,[[["self"]]]],[11,"acosh",E,E,2,[[["self"]]]],[11,"atanh",E,E,2,[[["self"]]]],[11,"sqrt",E,E,2,[[["self"]]]],[11,"square",E,E,2,[[["self"]]]],[11,"root",E,E,2,[[["self"],[T]]]],[11,"powf",E,E,2,[[["self"],[T]]]],[11,"ln",E,E,2,[[["self"]]]],[11,"exp",E,E,2,[[["self"]]]],[11,"log",E,E,2,[[["self"],[T]]]],[11,"expf",E,E,2,[[["self"],[T]]]],[11,R[179],E,E,2,[[["self"]]]],[11,R[114],E,E,2,[[["self"]]]],[11,R[665],E,E,2,[[["self"],["usize"],[R[34]]],[R[327]]]],[11,R[178],E,E,2,[[["self"],["u32"]],[R[327]]]],[11,R[176],E,E,2,[[["self"],["b"],["usize"],[R[34]]],[R[327]]]],[11,R[177],E,E,2,[[["self"],["b"],["u32"]]]],[11,R[175],E,E,2,N],[11,"merge",E,E,2,N],[11,"diff",E,E,2,[[["self"]]]],[11,R[124],E,E,2,[[["self"]]]],[11,R[191],E,E,2,[[["self"]]]],[11,R[151],E,E,2,[[["self"],["o"]],[R[326]]]],[11,R[151],E,E,2,[[["self"],["o"]],[R[326],[R[4]]]]],[11,R[125],E,E,2,[[["self"],["o"]],[R[326]]]],[11,R[125],E,E,2,[[["self"],["o"]],[R[326],[R[4]]]]],[11,R[115],E,E,2,[[["self"],["a"],["f"]]]],[11,R[115],E,E,2,[[["self"],["a"],["f"]]]],[11,R[170],E,E,2,[[["self"],["a"],["fmap"],["faggr"]],[R[326]]]],[11,R[170],E,E,2,[[["self"],["a"],["fmap"],["faggr"]],[R[326]]]],[11,R[150],E,E,2,[[["self"]],[R[150]]]],[11,R[150],E,E,2,[[["self"]],[R[150],[R[4]]]]],[11,R[163],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,R[163],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,"sum",E,E,2,[[["self"]],[T]]],[11,"sum_sq",E,E,2,[[["self"]],[T]]],[11,"sum",E,E,2,[[["self"]],[R[4]]]],[11,"sum_sq",E,E,2,[[["self"]],[R[4]]]],[11,"empty",E,E,1,[[],["self"]]],[11,R[805],E,E,1,[[],["self"]]],[11,"merge",E,E,1,N],[11,R[171],E,E,1,N],[11,R[172],E,E,1,[[["usize"]],[R[408]]]],[11,"add",E,E,1,[[["self"],[T],["usize"]]]],[11,"empty",E,E,1,[[],["self"]]],[11,R[805],E,E,1,[[],["self"]]],[11,"merge",E,E,1,N],[11,R[171],E,E,1,N],[11,R[172],E,E,1,[[["usize"]],[R[408]]]],[11,"add",E,E,1,[[["self"],[R[4]],["usize"]]]],[11,R[149],E,E,2,[[["self"]],[R[150],["f64"]]]],[11,R[149],E,E,2,[[["self"]],[R[150],["f64"]]]],[11,R[149],E,E,2,[[["self"]],[R[150],[R[4]]]]],[11,R[149],E,E,2,[[["self"]],[R[150],[R[4]]]]],[11,R[148],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,R[148],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,R[148],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,R[148],E,E,2,[[["self"],["usize"]],[R[326],[R[408]]]]],[11,R[143],E,E,2,[[["self"]],["f64"]]],[11,R[142],E,E,2,[[["self"]],["f64"]]],[11,R[143],E,E,2,[[["self"]],["f64"]]],[11,R[142],E,E,2,[[["self"]],["f64"]]],[11,R[143],E,E,2,[[["self"]],[R[4],["f64"]]]],[11,R[142],E,E,2,[[["self"]],[R[4],["f64"]]]],[11,R[143],E,E,2,[[["self"]],[R[4],["f64"]]]],[11,R[142],E,E,2,[[["self"]],[R[4],["f64"]]]],[11,R[187],E,E,1,[[["self"],[T],["usize"],[T],[T]]]],[11,R[187],E,E,1,[[["self"],[R[4]],["usize"],[R[4]],[R[4]]]]],[11,"trade",E,E,105,[[["self"],["s"]]]],[11,"trade",E,E,106,[[["self"],["vec"]]]],[11,"trade",E,E,108,[[["self"],["vec"]]]],[11,"trade",E,E,110,[[["self"],["s"]]]],[11,R[88],E,E,18,N],[11,R[41],E,E,18,[[["self"]],["usize"]]],[11,R[88],E,E,19,N],[11,R[41],E,E,19,[[["self"]],["usize"]]],[11,R[88],E,E,107,N],[11,R[41],E,E,107,[[["self"]],["usize"]]],[11,R[62],R[403],E,111,[[["self"]],["bool"]]],[11,R[18],E,E,111,[[["self"]]]],[11,R[122],E,E,111,[[["self"]]]],[11,R[62],E,E,112,[[["self"]],["bool"]]],[11,R[18],E,E,112,[[["self"]]]],[11,R[122],E,E,112,[[["self"]]]],[11,R[62],E,E,16,[[["self"]],["bool"]]],[11,R[18],E,E,16,[[["self"]]]],[11,R[122],E,E,16,[[["self"]]]],[11,"domain",E,E,113,[[["self"]],[R[16]]]],[11,R[807],E,E,113,[[["self"]]]],[11,R[808],E,E,113,[[["self"]]]],[11,"domain",E,E,114,[[["self"]],[R[16]]]],[11,R[808],E,E,114,[[["self"]]]],[11,R[807],E,E,114,[[["self"]]]],[11,"domain",E,E,17,[[["self"]],[R[16]]]],[11,R[807],E,E,17,[[["self"]]]],[11,R[808],E,E,17,[[["self"]]]],[11,R[1],R[404],E,115,[[["self"]],["bool"]]],[11,"window",E,E,115,[[["self"],["usize"],["usize"]],[T]]],[11,R[1],E,E,21,[[["self"]],["bool"]]],[11,"window",E,E,21,[[["self"],["usize"],["usize"]],[T]]],[11,"zero",R[405],E,22,[[],["self"]]],[11,"eq",R[403],E,111,[[["self"],["real"]],["bool"]]],[11,"eq",E,E,112,[[["self"],[R[4]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[47]]],["bool"]]],[11,"eq",E,E,113,[[["self"],["time"]],["bool"]]],[11,"eq",E,E,114,[[["self"],["freq"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[48]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[48]]],["bool"]]],[11,"eq",R[396],E,3,[[["self"],[R[8]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[34]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[150]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[150]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[16]]],["bool"]]],[11,R[806],R[402],E,15,[[],[R[217]]]],[11,R[806],R[396],E,19,[[],[R[222]]]],[11,"clone",R[403],E,111,[[["self"]],["real"]]],[11,"clone",E,E,112,[[["self"]],[R[4]]]],[11,"clone",E,E,16,[[["self"]],[R[47]]]],[11,"clone",E,E,113,[[["self"]],["time"]]],[11,"clone",E,E,114,[[["self"]],["freq"]]],[11,"clone",E,E,17,[[["self"]],[R[48]]]],[11,"clone",R[396],E,0,[[["self"]],[R[182]]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,R[809],E,E,2,[[["self"],["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[8]]]],[11,"clone",E,E,4,[[["self"]],[R[34]]]],[11,"clone",E,E,1,[[["self"]],[R[150]]]],[11,"clone",E,E,5,[[["self"]],[R[16]]]],[11,"clone",E,E,109,[[["self"]],[R[26]]]],[11,"from",E,E,116,[[["s"]],["self"]]],[11,"from",E,E,118,[[["s"]],["self"]]],[11,"from",E,E,117,[[["s"]],["self"]]],[11,"from",E,E,119,[[["s"]],["self"]]],[11,"deref",E,E,105,N],[11,"deref",E,E,106,N],[11,"deref",E,E,108,N],[11,"deref",E,E,110,N],[11,R[180],E,E,105,N],[11,R[180],E,E,106,N],[11,R[180],E,E,108,N],[11,R[180],E,E,110,N],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,2,N],[11,"index",E,E,2,N],[11,"index",E,E,2,N],[11,"index",E,E,2,N],[11,R[186],E,E,2,[[["self"],["usize"]],[T]]],[11,R[186],E,E,2,N],[11,R[186],E,E,2,N],[11,R[186],E,E,2,N],[11,R[186],E,E,2,N],[11,"fmt",R[403],E,111,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,112,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,16,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,113,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,114,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,17,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",R[396],E,0,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,3,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,4,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,1,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,5,[[["self"],[R[174]]],[R[7]]]],[11,"fmt",E,E,2,[[["self"],[R[174]]],[R[7]]]],[11,"new",R[405],R[818],22,[[[T],[T]],[R[4]]]],[11,"i",E,R[819],22,[[],[R[4]]]],[11,"norm_sqr",E,R[820],22,[[["self"]],[T]]],[11,"scale",E,R[821],22,[[["self"],[T]],[R[4]]]],[11,"unscale",E,R[822],22,[[["self"],[T]],[R[4]]]],[11,"conj",E,R[823],22,[[["self"]],[R[4]]]],[11,"inv",E,R[824],22,[[["self"]],[R[4]]]],[11,"norm",E,R[825],22,[[["self"]],[T]]],[11,"arg",E,R[826],22,[[["self"]],[T]]],[11,"to_polar",E,R[827],22,N],[11,R[828],E,R[829],22,[[[T],[T]],[R[4]]]],[11,"exp",E,R[830],22,[[["self"]],[R[4]]]],[11,"ln",E,R[831],22,[[["self"]],[R[4]]]],[11,"sqrt",E,R[832],22,[[["self"]],[R[4]]]],[11,"powf",E,R[833],22,[[["self"],[T]],[R[4]]]],[11,"log",E,R[834],22,[[["self"],[T]],[R[4]]]],[11,"powc",E,R[835],22,[[["self"],[R[4]]],[R[4]]]],[11,"expf",E,R[836],22,[[["self"],[T]],[R[4]]]],[11,"sin",E,R[837],22,[[["self"]],[R[4]]]],[11,"cos",E,R[838],22,[[["self"]],[R[4]]]],[11,"tan",E,R[839],22,[[["self"]],[R[4]]]],[11,"asin",E,R[840],22,[[["self"]],[R[4]]]],[11,"acos",E,R[841],22,[[["self"]],[R[4]]]],[11,"atan",E,R[842],22,[[["self"]],[R[4]]]],[11,"sinh",E,R[843],22,[[["self"]],[R[4]]]],[11,"cosh",E,R[844],22,[[["self"]],[R[4]]]],[11,"tanh",E,R[845],22,[[["self"]],[R[4]]]],[11,"asinh",E,R[846],22,[[["self"]],[R[4]]]],[11,"acosh",E,R[847],22,[[["self"]],[R[4]]]],[11,"atanh",E,R[848],22,[[["self"]],[R[4]]]],[11,"is_nan",E,R[849],22,[[["self"]],["bool"]]],[11,R[219],E,R[850],22,[[["self"]],["bool"]]],[11,R[220],E,R[851],22,[[["self"]],["bool"]]],[11,R[221],E,R[852],22,[[["self"]],["bool"]]]],"p":[[3,R[276]],[3,R[250]],[3,"DspVec"],[4,R[239]],[4,R[289]],[4,R[286]],[8,R[224]],[8,R[225]],[8,R[226]],[8,R[227]],[3,R[305]],[3,R[306]],[3,R[307]],[3,R[308]],[3,R[309]],[3,R[310]],[3,R[228]],[3,R[229]],[3,R[317]],[3,R[313]],[8,R[230]],[3,R[312]],[3,R[6]],[8,"Float"],[8,"Num"],[8,"One"],[8,"ToSimd"],[8,"Zero"],[8,"ToSlice"],[8,R[254]],[8,"Resize"],[8,R[246]],[8,R[296]],[8,R[253]],[8,R[287]],[8,R[240]],[8,R[282]],[8,R[293]],[8,R[233]],[8,R[270]],[8,R[292]],[8,R[763]],[8,R[273]],[8,R[242]],[8,"Vector"],[8,R[259]],[8,R[255]],[8,R[283]],[8,R[281]],[8,R[269]],[8,R[261]],[8,R[249]],[8,R[285]],[8,"RealOps"],[8,R[280]],[8,R[265]],[8,R[278]],[8,R[291]],[8,R[288]],[8,R[263]],[8,R[297]],[8,R[234]],[8,R[294]],[8,R[241]],[8,R[268]],[8,R[274]],[8,R[260]],[8,R[271]],[8,R[277]],[8,R[245]],[8,R[244]],[8,R[251]],[8,R[264]],[8,R[272]],[8,R[279]],[8,R[257]],[8,R[237]],[8,R[589]],[8,R[252]],[8,R[232]],[8,R[243]],[8,"TrigOps"],[8,R[627]],[8,R[284]],[8,R[266]],[8,R[247]],[8,R[778]],[8,R[666]],[8,R[267]],[8,R[275]],[8,R[258]],[8,R[262]],[8,R[256]],[8,R[298]],[8,R[295]],[8,"SumOps"],[8,"Stats"],[8,R[236]],[8,R[231]],[8,R[235]],[8,R[238]],[8,R[290]],[8,"Buffer"],[8,R[248]],[8,"Domain"],[3,R[319]],[3,R[315]],[3,R[542]],[3,R[316]],[3,R[318]],[3,R[314]],[3,"Real"],[3,R[6]],[3,"Time"],[3,"Freq"],[3,R[311]],[6,R[409]],[6,R[410]],[6,R[411]],[6,R[412]],[6,R[413]]]};
searchIndex[R[0]]={"doc":E,"i":[[0,R[414],R[0],R[415],N,N],[8,R[224],R[83],R[416],N,N],[10,R[1],E,R[2],0,[[["self"]],["bool"]]],[10,"calc",E,R[3],0,[[["self"],[T]],[T]]],[8,R[225],E,R[417],N,N],[10,R[1],E,R[2],1,[[["self"]],["bool"]]],[10,"calc",E,R[3],1,[[["self"],[T]],[T]]],[8,R[226],E,R[418],N,N],[10,R[1],E,R[2],2,[[["self"]],["bool"]]],[10,"calc",E,R[3],2,[[["self"],[T]],[R[4]]]],[8,R[227],E,R[419],N,N],[10,R[1],E,R[2],3,[[["self"]],["bool"]]],[10,"calc",E,R[3],3,[[["self"],[T]],[R[4]]]],[3,R[305],E,R[5],N,N],[3,R[306],E,R[5],N,N],[3,R[307],E,R[5],N,N],[3,R[308],E,R[5],N,N],[3,R[309],E,R[420],N,N],[3,R[310],E,R[421],N,N],[0,"meta",R[0],E,N,N],[3,"Real",R[90],R[422],N,N],[3,R[6],E,R[423],N,N],[3,R[228],E,R[424],N,N],[12,R[425],E,E,4,N],[3,"Time",E,R[426],N,N],[3,"Freq",E,R[427],N,N],[3,R[229],E,R[428],N,N],[12,R[429],E,E,5,N],[0,R[430],R[0],R[431],N,N],[8,R[230],R[93],R[432],N,N],[10,R[1],E,R[433],6,[[["self"]],["bool"]]],[10,"window",E,R[434],6,[[["self"],["usize"],["usize"]],[T]]],[3,R[311],E,R[435],N,N],[3,R[312],E,R[436],N,N],[0,"numbers",R[0],R[437],N,N],[8,R[438],R[94],R[439],N,N],[8,"ToSimd",E,R[440],N,N],[16,R[441],E,R[442],7,N],[16,"RegSse",E,E,7,N],[16,"RegAvx",E,E,7,N],[16,R[443],E,E,7,N],[16,"GpuReg",E,R[444],7,N],[8,R[445],E,R[446],N,N],[8,"Zero",E,R[447],N,N],[10,"zero",E,E,8,[[],["self"]]],[8,"Num",E,R[448],N,N],[16,R[449],E,E,9,N],[10,R[192],E,R[450],9,[[["str"],["u32"]],[R[7]]]],[8,"Float",E,R[451],N,N],[10,"nan",E,R[452],10,[[],["self"]]],[10,"infinity",E,R[453],10,[[],["self"]]],[10,R[454],E,R[455],10,[[],["self"]]],[10,"neg_zero",E,R[456],10,[[],["self"]]],[10,R[457],E,R[458],10,[[],["self"]]],[10,R[459],E,R[460],10,[[],["self"]]],[11,"epsilon",E,R[461],10,[[],["self"]]],[10,R[462],E,R[463],10,[[],["self"]]],[10,"is_nan",E,R[464],10,[[["self"]],["bool"]]],[10,R[219],E,R[465],10,[[["self"]],["bool"]]],[10,R[220],E,R[466],10,[[["self"]],["bool"]]],[10,R[221],E,R[467],10,[[["self"]],["bool"]]],[10,"classify",E,R[468],10,[[["self"]],[R[469]]]],[10,"floor",E,R[470],10,[[["self"]],["self"]]],[10,"ceil",E,R[471],10,[[["self"]],["self"]]],[10,"round",E,R[472],10,[[["self"]],["self"]]],[10,"trunc",E,R[473],10,[[["self"]],["self"]]],[10,"fract",E,R[474],10,[[["self"]],["self"]]],[10,"abs",E,R[475],10,[[["self"]],["self"]]],[10,"signum",E,R[476],10,[[["self"]],["self"]]],[10,R[477],E,R[478],10,[[["self"]],["bool"]]],[10,R[479],E,R[480],10,[[["self"]],["bool"]]],[10,"mul_add",E,R[481],10,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[482],10,[[["self"]],["self"]]],[10,"powi",E,R[483],10,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[484],10,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[485],10,[[["self"]],["self"]]],[10,"exp",E,R[486],10,[[["self"]],["self"]]],[10,"exp2",E,R[487],10,[[["self"]],["self"]]],[10,"ln",E,R[488],10,[[["self"]],["self"]]],[10,"log",E,R[489],10,[[["self"],["self"]],["self"]]],[10,"log2",E,R[490],10,[[["self"]],["self"]]],[10,"log10",E,R[491],10,[[["self"]],["self"]]],[11,R[492],E,R[493],10,[[["self"]],["self"]]],[11,R[494],E,R[495],10,[[["self"]],["self"]]],[10,"max",E,R[496],10,[[["self"],["self"]],["self"]]],[10,"min",E,R[497],10,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[498],10,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[499],10,[[["self"]],["self"]]],[10,"hypot",E,R[500],10,[[["self"],["self"]],["self"]]],[10,"sin",E,R[501],10,[[["self"]],["self"]]],[10,"cos",E,R[502],10,[[["self"]],["self"]]],[10,"tan",E,R[503],10,[[["self"]],["self"]]],[10,"asin",E,R[504],10,[[["self"]],["self"]]],[10,"acos",E,R[505],10,[[["self"]],["self"]]],[10,"atan",E,R[506],10,[[["self"]],["self"]]],[10,"atan2",E,R[507],10,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[508],10,N],[10,"exp_m1",E,R[509],10,[[["self"]],["self"]]],[10,"ln_1p",E,R[510],10,[[["self"]],["self"]]],[10,"sinh",E,R[511],10,[[["self"]],["self"]]],[10,"cosh",E,R[512],10,[[["self"]],["self"]]],[10,"tanh",E,R[513],10,[[["self"]],["self"]]],[10,"asinh",E,R[514],10,[[["self"]],["self"]]],[10,"acosh",E,R[515],10,[[["self"]],["self"]]],[10,"atanh",E,R[516],10,[[["self"]],["self"]]],[10,R[517],E,R[518],10,N],[3,R[6],E,R[519],N,N],[12,"re",E,R[520],11,N],[12,"im",E,R[521],11,N],[8,"One",E,R[522],N,N],[10,"one",E,R[523],12,[[],["self"]]],[11,"is_one",E,R[524],12,[[["self"]],["bool"]]],[8,R[231],R[0],R[12],N,N],[16,"Result",E,E,13,N],[10,R[148],E,R[13],13,[[["self"],["usize"]],[R[7],[R[8]]]]],[8,R[525],E,R[526],N,N],[6,R[527],E,R[14],N,N],[8,R[232],E,R[528],N,N],[10,"add",E,R[529],14,[[["self"],["a"]],[R[7],[R[8]]]]],[10,"sub",E,R[530],14,[[["self"],["a"]],[R[7],[R[8]]]]],[10,"mul",E,R[531],14,[[["self"],["a"]],[R[7],[R[8]]]]],[10,"div",E,R[532],14,[[["self"],["a"]],[R[7],[R[8]]]]],[8,R[233],E,R[20],N,N],[10,R[533],E,R[21],15,[[["self"]],[R[9],[R[4],"time"]]]],[10,R[534],E,R[22],15,[[["self"]],[R[9],[R[4],"freq"]]]],[8,R[234],E,R[29],N,N],[10,R[131],E,R[10],16,[[["self"],["b"]],[R[7]]]],[10,"sifft",E,R[10],16,[[["self"],["b"]],[R[7]]]],[10,R[132],E,R[10],16,[[["self"],["b"],[R[31]]],[R[7]]]],[8,R[235],E,R[535],N,N],[10,R[143],E,R[536],17,[[["self"]],[T]]],[10,R[142],E,R[65],17,[[["self"]],[T]]],[8,"Domain",E,R[537],N,N],[10,"domain",E,E,18,[[["self"]],[R[16]]]],[10,R[807],E,R[11],18,N],[10,R[808],E,R[11],18,N],[8,R[236],E,R[12],N,N],[16,"Result",E,E,19,N],[10,R[149],E,R[13],19,N],[6,R[411],E,R[14],N,N],[8,R[237],E,R[24],N,N],[16,R[538],E,E,20,N],[3,R[313],E,R[539],N,N],[8,R[238],E,R[540],N,N],[10,R[187],E,R[541],21,N],[3,R[542],E,R[543],N,N],[4,R[239],E,R[544],N,N],[13,R[545],E,R[546],22,N],[13,R[547],E,R[548],22,N],[13,R[549],E,R[550],22,N],[13,R[551],E,R[552],22,N],[13,R[553],E,R[554],22,N],[13,R[555],E,R[556],22,N],[13,R[557],E,R[558],22,N],[13,R[559],E,R[560],22,N],[13,R[561],E,R[562],22,N],[13,R[563],E,R[564],22,N],[13,R[565],E,R[566],22,N],[13,R[567],E,R[568],22,N],[13,R[569],E,R[570],22,N],[13,R[571],E,R[572],22,N],[6,R[573],E,R[17],N,N],[8,R[240],E,R[574],N,N],[10,R[575],E,R[66],23,[[["self"],["self"]],[R[7],[R[9],R[8]]]]],[10,R[576],E,R[67],23,[[["self"],["self"]],[R[7],[R[9],R[8]]]]],[8,R[241],E,R[577],N,N],[10,R[103],E,R[578],24,[[["self"],["b"],["a"]],[R[7],[R[8]]]]],[8,R[242],E,R[42],N,N],[10,R[579],E,R[43],25,[[["self"],["b"],["usize"]],[R[7],[R[8]]]]],[8,R[243],E,R[580],N,N],[10,R[164],E,R[581],26,[[["self"],["a"]],[R[7],[R[8]]]]],[10,R[165],E,R[582],26,[[["self"],["a"]],[R[7],[R[8]]]]],[10,R[167],E,R[583],26,[[["self"],["a"]],[R[7],[R[8]]]]],[10,R[166],E,R[584],26,[[["self"],["a"]],[R[7],[R[8]]]]],[8,R[244],E,R[585],N,N],[10,R[161],E,R[15],27,[[["other"]],["self"]]],[10,R[162],E,R[15],27,[[["other"],["bool"],[R[16]]],["self"]]],[6,R[586],E,R[28],N,N],[8,R[245],E,R[19],N,N],[10,R[189],E,R[587],28,[[["other"]],["self"]]],[6,R[409],E,R[23],N,N],[3,R[314],E,R[588],N,N],[8,R[589],E,R[25],N,N],[10,"scale",E,R[590],29,N],[6,R[412],E,R[17],N,N],[3,R[315],E,R[56],N,N],[8,R[246],E,R[45],N,N],[10,R[591],E,R[46],30,[[["self"],["bool"],[R[16]]],[R[9],[R[47],R[48]]]]],[10,R[592],E,R[49],30,[[["self"],[R[26]]],[R[9]]]],[8,R[247],E,R[32],N,N],[10,R[176],E,R[33],31,[[["self"],["b"],["usize"],[R[34]]],[R[7],[R[8]]]]],[10,R[177],E,R[35],31,N],[8,R[248],E,R[593],N,N],[10,R[62],E,E,32,[[["self"]],["bool"]]],[10,R[18],E,R[594],32,N],[10,R[122],E,R[595],32,N],[8,R[249],E,R[58],N,N],[10,R[18],E,R[596],33,[[["self"]],[R[7]]]],[3,R[250],E,R[597],N,N],[12,"sum",E,R[598],34,N],[12,"count",E,R[599],34,N],[12,"average",E,R[600],34,N],[12,"rms",E,R[601],34,N],[12,"min",E,R[602],34,N],[12,R[603],E,R[604],34,N],[12,"max",E,R[605],34,N],[12,R[606],E,R[607],34,N],[8,R[251],E,R[19],N,N],[10,R[184],E,R[608],35,[[["self"]],["other"]]],[8,"Buffer",E,R[609],N,N],[16,"Borrow",E,R[610],36,N],[10,R[88],E,R[611],36,N],[10,R[41],E,R[612],36,[[["self"]],["usize"]]],[8,R[252],E,R[613],N,N],[10,"offset",E,R[614],37,N],[6,R[615],E,R[14],N,N],[8,R[253],E,R[20],N,N],[10,R[616],E,R[21],38,[[["self"]],[R[9],[R[4],"time"]]]],[10,R[617],E,R[22],38,[[["self"]],[R[9],[R[4],"freq"]]]],[8,"Resize",E,R[618],N,N],[10,"resize",E,R[619],39,N],[8,R[254],E,R[620],N,N],[10,R[621],E,R[622],40,N],[3,R[316],E,R[623],N,N],[8,R[255],E,R[50],N,N],[10,R[120],E,R[51],41,N],[10,R[121],E,R[52],41,N],[10,R[122],E,R[53],41,N],[10,R[190],E,R[54],41,N],[10,"phase",E,R[55],41,N],[6,R[624],E,R[40],N,N],[8,R[256],E,R[27],N,N],[16,R[59],E,E,42,N],[10,R[170],E,R[625],42,N],[6,R[626],E,R[23],N,N],[8,R[627],E,R[628],N,N],[10,"sqrt",E,R[629],43,N],[10,"square",E,R[630],43,N],[10,"root",E,R[631],43,N],[10,"powf",E,R[632],43,N],[10,"ln",E,R[633],43,N],[10,"exp",E,R[634],43,N],[10,"log",E,R[635],43,N],[10,"expf",E,R[636],43,N],[8,R[257],E,R[24],N,N],[16,R[637],E,E,44,N],[8,R[258],E,R[25],N,N],[16,R[59],E,E,45,N],[10,R[125],E,R[638],45,N],[8,"PosEq",E,R[639],N,N],[8,R[259],E,R[640],N,N],[10,R[123],E,R[641],46,[[["self"]],[R[26]]]],[8,R[260],E,R[642],N,N],[10,R[106],E,R[643],47,N],[8,R[261],E,R[644],N,N],[10,R[133],E,R[645],48,N],[10,"conj",E,R[646],48,N],[8,R[262],E,R[27],N,N],[10,R[115],E,R[647],49,N],[6,R[413],E,R[28],N,N],[8,R[263],E,R[29],N,N],[10,R[155],E,R[30],50,[[["self"],["b"]],[R[7]]]],[10,"sfft",E,R[30],50,[[["self"],["b"]],[R[7]]]],[10,R[156],E,R[30],50,[[["self"],["b"],[R[31]]],[R[7]]]],[6,R[648],E,R[17],N,N],[8,R[264],E,R[24],N,N],[16,R[649],E,E,51,N],[8,"Stats",E,R[650],N,N],[10,"empty",E,R[651],52,[[],["self"]]],[10,R[172],E,R[652],52,[[["usize"]],[R[173]]]],[10,R[805],E,R[653],52,[[],["self"]]],[10,"merge",E,R[654],52,N],[10,R[171],E,R[655],52,N],[10,"add",E,R[656],52,N],[8,R[265],E,R[657],N,N],[10,R[107],E,R[658],53,N],[10,R[108],E,R[659],53,N],[10,R[109],E,R[660],53,N],[10,R[110],E,R[661],53,N],[10,R[111],E,R[662],53,N],[10,R[112],E,R[663],53,N],[10,R[113],E,R[664],53,N],[8,R[266],E,R[32],N,N],[10,R[665],E,R[33],54,[[["self"],["usize"],[R[34]]],[R[7],[R[8]]]]],[10,R[178],E,R[35],54,[[["self"],["u32"]],[R[7],[R[8]]]]],[8,R[666],E,R[667],N,N],[10,"merge",E,R[668],55,N],[6,R[669],E,R[28],N,N],[8,R[267],E,R[670],N,N],[10,"diff",E,R[36],56,N],[10,R[124],E,R[36],56,N],[10,R[191],E,R[671],56,N],[8,R[268],E,R[672],N,N],[10,R[134],E,R[44],57,N],[8,R[269],E,R[673],N,N],[10,R[153],E,R[674],58,[[["self"],["a"],["a"]],[R[7],[R[8]]]]],[10,R[154],E,R[675],58,[[["self"],["a"],["a"]],[R[7],[R[8]]]]],[8,R[270],E,R[676],N,N],[16,R[59],E,E,59,N],[10,R[4],E,R[64],59,N],[6,R[677],E,R[14],N,N],[8,R[271],E,R[678],N,N],[10,R[126],E,R[37],60,N],[10,R[127],E,R[37],60,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[10,R[128],E,R[39],60,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[10,R[130],E,R[39],60,N],[10,R[129],E,R[679],60,N],[6,R[680],E,R[23],N,N],[8,R[272],E,R[24],N,N],[16,R[681],E,E,61,N],[6,R[682],E,R[683],N,N],[6,R[684],E,R[40],N,N],[8,"ToSlice",E,R[685],N,N],[10,R[60],E,R[686],62,N],[10,"len",E,R[687],62,[[["self"]],["usize"]]],[10,R[69],E,R[688],62,[[["self"]],["bool"]]],[10,R[41],E,R[689],62,[[["self"]],["usize"]]],[10,R[690],E,R[691],62,[[["self"],["usize"]],[R[7],[R[8]]]]],[3,R[317],E,R[692],N,N],[8,R[273],E,R[42],N,N],[10,"resize",E,R[43],63,[[["self"],["usize"]],[R[7],[R[8]]]]],[3,R[318],E,R[693],N,N],[17,R[694],E,R[695],N,N],[8,R[274],E,R[696],N,N],[10,R[152],E,R[44],64,[[["self"],["b"],["a"]],[R[7],[R[8]]]]],[8,R[275],E,R[25],N,N],[16,R[59],E,E,65,N],[10,R[151],E,R[697],65,N],[6,"TransRes",E,R[698],N,N],[3,R[276],E,R[699],N,N],[12,R[700],E,R[701],66,N],[12,R[702],E,E,66,N],[12,R[703],E,E,66,N],[12,R[704],E,E,66,N],[12,R[705],E,E,66,N],[8,R[277],E,R[706],N,N],[10,R[157],E,R[707],67,N],[10,R[158],E,R[708],67,N],[5,R[709],E,R[710],N,[[],["string"]]],[8,R[278],E,R[29],N,N],[10,"mirror",E,R[711],68,N],[10,R[159],E,R[712],68,N],[10,R[160],E,R[713],68,N],[8,R[279],E,R[24],N,N],[16,R[714],E,R[24],69,N],[6,"StatsVec",E,R[715],N,N],[8,R[280],E,R[63],N,N],[10,"wrap",E,R[716],70,N],[10,"unwrap",E,R[717],70,N],[6,R[718],E,R[40],N,N],[6,R[719],E,R[23],N,N],[8,R[281],E,R[720],N,N],[10,R[96],E,R[721],71,N],[10,R[97],E,R[722],71,N],[10,R[98],E,R[723],71,N],[10,R[99],E,R[724],71,N],[10,R[100],E,R[725],71,N],[10,R[101],E,R[726],71,N],[10,R[102],E,R[727],71,N],[8,R[282],E,R[45],N,N],[10,R[728],E,R[46],72,[[["self"],["bool"],[R[16]]],[R[9],[R[47],R[48]]]]],[10,R[729],E,R[49],72,[[["self"],[R[26]]],[R[9]]]],[6,R[730],E,R[17],N,N],[8,R[283],E,R[50],N,N],[10,R[136],E,R[51],73,N],[10,R[137],E,R[52],73,N],[10,R[138],E,R[53],73,N],[10,R[139],E,R[54],73,N],[10,R[188],E,R[55],73,N],[3,R[319],E,R[56],N,N],[6,R[731],E,R[28],N,N],[8,R[732],E,R[733],N,N],[8,R[284],E,R[734],N,N],[10,R[179],E,R[735],74,N],[10,R[114],E,R[736],74,N],[8,"TrigOps",E,R[737],N,N],[10,"sin",E,R[738],75,N],[10,"cos",E,R[739],75,N],[10,"tan",E,R[740],75,N],[10,"asin",E,R[741],75,N],[10,"acos",E,R[742],75,N],[10,"atan",E,R[743],75,N],[10,"sinh",E,R[744],75,N],[10,"cosh",E,R[745],75,N],[10,"tanh",E,R[746],75,N],[10,"asinh",E,R[57],75,N],[10,"acosh",E,R[57],75,N],[10,"atanh",E,R[57],75,N],[8,R[285],E,R[58],N,N],[10,R[135],E,R[747],76,N],[4,R[286],E,R[748],N,N],[13,"Time",E,R[749],77,N],[13,R[750],E,R[751],77,N],[8,R[287],E,R[752],N,N],[16,R[59],E,R[753],78,N],[10,"get",E,R[754],78,N],[10,R[60],E,R[755],78,N],[6,R[756],E,R[14],N,N],[6,R[757],E,R[17],N,N],[8,R[288],E,R[29],N,N],[10,R[146],E,R[61],79,N],[10,"fft",E,R[61],79,N],[10,R[147],E,R[758],79,N],[4,R[289],E,R[759],N,N],[13,"End",E,R[760],80,N],[13,"Surround",E,R[761],80,N],[13,"Center",E,R[762],80,N],[8,R[763],E,R[764],N,N],[10,"domain",E,R[765],81,[[["self"]],[R[16]]]],[10,R[62],E,R[766],81,[[["self"]],["bool"]]],[8,"RealOps",E,R[63],N,N],[10,"abs",E,R[767],82,N],[6,R[768],E,R[769],N,N],[8,R[290],E,R[770],N,N],[10,"trade",E,R[771],83,N],[8,R[291],E,R[29],N,N],[10,R[144],E,R[772],84,N],[10,R[145],E,R[773],84,N],[8,R[774],E,R[775],N,N],[8,R[776],E,R[777],N,N],[8,R[778],E,R[779],N,N],[10,R[175],E,R[780],85,N],[6,R[410],E,R[40],N,N],[3,"DspVec",E,R[781],N,N],[12,"data",E,R[782],86,N],[6,R[783],E,R[28],N,N],[8,R[292],E,R[784],N,N],[10,R[185],E,R[64],87,N],[8,"SumOps",E,R[785],N,N],[10,"sum",E,R[786],88,[[["self"]],[T]]],[10,"sum_sq",E,R[65],88,[[["self"]],[T]]],[8,R[293],E,R[20],N,N],[10,R[787],E,R[66],89,[[["self"]],[R[9],["real","time"]]]],[10,R[788],E,R[67],89,[[["self"]],[R[9],["real","freq"]]]],[8,R[294],E,R[789],N,N],[10,R[140],E,R[790],90,N],[10,R[141],E,R[791],90,N],[6,R[792],E,R[23],N,N],[8,R[295],E,R[70],N,N],[16,"Result",E,E,91,N],[10,R[163],E,R[13],91,[[["self"],["usize"]],[R[7],[R[8]]]]],[8,R[296],E,R[20],N,N],[10,R[793],E,R[66],92,[[["self"]],[R[9],["real","time"]]]],[10,R[794],E,R[67],92,[[["self"]],[R[9],["real","freq"]]]],[8,R[297],E,R[29],N,N],[10,R[104],E,R[68],93,N],[10,"ifft",E,R[68],93,N],[10,R[105],E,R[68],93,N],[8,"Vector",E,R[795],N,N],[10,"delta",E,R[79],94,[[["self"]],[T]]],[10,R[80],E,R[81],94,N],[10,"len",E,R[796],94,[[["self"]],["usize"]]],[10,R[69],E,R[797],94,[[["self"]],["bool"]]],[10,"points",E,R[798],94,[[["self"]],["usize"]]],[10,R[181],E,R[799],94,[[["self"]],[R[182]]]],[10,R[183],E,R[800],94,N],[10,R[41],E,R[801],94,[[["self"]],["usize"]]],[8,R[298],E,R[70],N,N],[16,"Result",E,E,95,N],[10,R[150],E,R[802],95,N],[6,R[803],E,R[40],N,N],[0,"matrix",E,E,N,N],[3,R[320],R[95],R[328],N,N],[3,R[321],E,R[329],N,N],[3,R[322],E,R[330],N,N],[3,R[323],E,R[331],N,N],[6,R[332],E,R[71],N,N],[6,R[333],E,R[72],N,N],[6,R[334],E,R[71],N,N],[6,R[335],E,R[72],N,N],[6,R[336],E,R[71],N,N],[6,R[337],E,R[72],N,N],[6,R[338],E,R[71],N,N],[6,R[339],E,R[72],N,N],[6,R[340],E,R[71],N,N],[6,R[341],E,R[72],N,N],[6,R[342],E,R[73],N,N],[6,R[343],E,R[74],N,N],[6,R[344],E,R[73],N,N],[6,R[345],E,R[74],N,N],[6,R[346],E,R[73],N,N],[6,R[347],E,R[74],N,N],[6,R[348],E,R[73],N,N],[6,R[349],E,R[74],N,N],[6,R[350],E,R[73],N,N],[6,R[351],E,R[74],N,N],[6,R[352],E,R[75],N,N],[6,R[353],E,R[76],N,N],[6,R[354],E,R[75],N,N],[6,R[355],E,R[76],N,N],[6,R[356],E,R[75],N,N],[6,R[357],E,R[76],N,N],[6,R[358],E,R[75],N,N],[6,R[359],E,R[77],N,N],[6,R[360],E,R[78],N,N],[6,R[361],E,R[77],N,N],[6,R[362],E,R[78],N,N],[6,R[363],E,R[77],N,N],[6,R[364],E,R[78],N,N],[6,R[365],E,R[77],N,N],[6,R[366],E,R[78],N,N],[6,R[367],E,R[77],N,N],[6,R[368],E,R[78],N,N],[6,R[369],E,R[77],N,N],[6,R[370],E,R[78],N,N],[6,R[371],E,R[77],N,N],[8,R[299],E,R[82],N,N],[16,R[59],E,E,96,N],[10,R[372],E,R[67],96,N],[8,"Matrix",E,R[373],N,N],[10,"delta",E,R[79],97,[[["self"]],[T]]],[10,R[80],E,R[81],97,N],[10,R[374],E,R[375],97,[[["self"]],["usize"]]],[10,R[168],E,R[376],97,[[["self"]],["usize"]]],[10,R[377],E,R[378],97,[[["self"]],["usize"]]],[10,"rows",E,R[379],97,N],[10,R[169],E,R[380],97,N],[8,R[300],E,R[381],N,N],[16,R[59],E,R[382],98,N],[10,"get",E,R[383],98,N],[8,R[384],E,R[385],N,N],[16,R[59],E,E,99,N],[10,"to_mat",E,R[386],99,N],[8,R[301],E,R[20],N,N],[16,R[59],E,E,100,N],[10,R[387],E,R[388],100,N],[8,R[302],E,R[20],N,N],[16,R[59],E,E,101,N],[10,R[389],E,R[390],101,N],[8,R[303],E,R[391],N,N],[16,R[59],E,E,102,N],[10,R[392],E,R[393],102,N],[8,R[304],E,R[82],N,N],[16,R[59],E,E,103,N],[10,R[394],E,R[395],103,N],[11,"from",R[83],E,104,[[[T]],[T]]],[11,"into",E,E,104,[[["self"]],[U]]],[11,R[84],E,E,104,[[[U]],[R[7]]]],[11,R[88],E,E,104,[[["self"]],[T]]],[11,R[87],E,E,104,[[["self"]],[R[89]]]],[11,R[85],E,E,104,[[["self"]],[T]]],[11,R[86],E,E,104,[[["self"]],[R[7]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[["self"]],[U]]],[11,R[84],E,E,105,[[[U]],[R[7]]]],[11,R[88],E,E,105,[[["self"]],[T]]],[11,R[87],E,E,105,[[["self"]],[R[89]]]],[11,R[85],E,E,105,[[["self"]],[T]]],[11,R[86],E,E,105,[[["self"]],[R[7]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[["self"]],[U]]],[11,R[84],E,E,106,[[[U]],[R[7]]]],[11,R[88],E,E,106,[[["self"]],[T]]],[11,R[87],E,E,106,[[["self"]],[R[89]]]],[11,R[85],E,E,106,[[["self"]],[T]]],[11,R[86],E,E,106,[[["self"]],[R[7]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[["self"]],[U]]],[11,R[84],E,E,107,[[[U]],[R[7]]]],[11,R[88],E,E,107,[[["self"]],[T]]],[11,R[87],E,E,107,[[["self"]],[R[89]]]],[11,R[85],E,E,107,[[["self"]],[T]]],[11,R[86],E,E,107,[[["self"]],[R[7]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[["self"]],[U]]],[11,R[84],E,E,108,[[[U]],[R[7]]]],[11,R[88],E,E,108,[[["self"]],[T]]],[11,R[87],E,E,108,[[["self"]],[R[89]]]],[11,R[85],E,E,108,[[["self"]],[T]]],[11,R[86],E,E,108,[[["self"]],[R[7]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[["self"]],[U]]],[11,R[84],E,E,109,[[[U]],[R[7]]]],[11,R[88],E,E,109,[[["self"]],[T]]],[11,R[87],E,E,109,[[["self"]],[R[89]]]],[11,R[85],E,E,109,[[["self"]],[T]]],[11,R[86],E,E,109,[[["self"]],[R[7]]]],[11,"from",R[90],E,110,[[[T]],[T]]],[11,"into",E,E,110,[[["self"]],[U]]],[11,R[91],E,E,110,[[["self"]],[T]]],[11,R[92],E,E,110,N],[11,R[84],E,E,110,[[[U]],[R[7]]]],[11,R[88],E,E,110,[[["self"]],[T]]],[11,R[87],E,E,110,[[["self"]],[R[89]]]],[11,R[85],E,E,110,[[["self"]],[T]]],[11,R[86],E,E,110,[[["self"]],[R[7]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[["self"]],[U]]],[11,R[91],E,E,111,[[["self"]],[T]]],[11,R[92],E,E,111,N],[11,R[84],E,E,111,[[[U]],[R[7]]]],[11,R[88],E,E,111,[[["self"]],[T]]],[11,R[87],E,E,111,[[["self"]],[R[89]]]],[11,R[85],E,E,111,[[["self"]],[T]]],[11,R[86],E,E,111,[[["self"]],[R[7]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[91],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,N],[11,R[84],E,E,4,[[[U]],[R[7]]]],[11,R[88],E,E,4,[[["self"]],[T]]],[11,R[87],E,E,4,[[["self"]],[R[89]]]],[11,R[85],E,E,4,[[["self"]],[T]]],[11,R[86],E,E,4,[[["self"]],[R[7]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[["self"]],[U]]],[11,R[91],E,E,112,[[["self"]],[T]]],[11,R[92],E,E,112,N],[11,R[84],E,E,112,[[[U]],[R[7]]]],[11,R[88],E,E,112,[[["self"]],[T]]],[11,R[87],E,E,112,[[["self"]],[R[89]]]],[11,R[85],E,E,112,[[["self"]],[T]]],[11,R[86],E,E,112,[[["self"]],[R[7]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[["self"]],[U]]],[11,R[91],E,E,113,[[["self"]],[T]]],[11,R[92],E,E,113,N],[11,R[84],E,E,113,[[[U]],[R[7]]]],[11,R[88],E,E,113,[[["self"]],[T]]],[11,R[87],E,E,113,[[["self"]],[R[89]]]],[11,R[85],E,E,113,[[["self"]],[T]]],[11,R[86],E,E,113,[[["self"]],[R[7]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[91],E,E,5,[[["self"]],[T]]],[11,R[92],E,E,5,N],[11,R[84],E,E,5,[[[U]],[R[7]]]],[11,R[88],E,E,5,[[["self"]],[T]]],[11,R[87],E,E,5,[[["self"]],[R[89]]]],[11,R[85],E,E,5,[[["self"]],[T]]],[11,R[86],E,E,5,[[["self"]],[R[7]]]],[11,"from",R[93],E,114,[[[T]],[T]]],[11,"into",E,E,114,[[["self"]],[U]]],[11,R[84],E,E,114,[[[U]],[R[7]]]],[11,R[88],E,E,114,[[["self"]],[T]]],[11,R[87],E,E,114,[[["self"]],[R[89]]]],[11,R[85],E,E,114,[[["self"]],[T]]],[11,R[86],E,E,114,[[["self"]],[R[7]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[["self"]],[U]]],[11,R[84],E,E,115,[[[U]],[R[7]]]],[11,R[88],E,E,115,[[["self"]],[T]]],[11,R[87],E,E,115,[[["self"]],[R[89]]]],[11,R[85],E,E,115,[[["self"]],[T]]],[11,R[86],E,E,115,[[["self"]],[R[7]]]],[11,R[804],R[94],E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[91],E,E,11,[[["self"]],[T]]],[11,R[92],E,E,11,N],[11,R[84],E,E,11,[[[U]],[R[7]]]],[11,R[88],E,E,11,[[["self"]],[T]]],[11,R[87],E,E,11,[[["self"]],[R[89]]]],[11,R[85],E,E,11,[[["self"]],[T]]],[11,R[86],E,E,11,[[["self"]],[R[7]]]],[11,"zero",E,E,11,[[],[T]]],[11,"from",R[0],E,116,[[[T]],[T]]],[11,"into",E,E,116,[[["self"]],[U]]],[11,R[84],E,E,116,[[[U]],[R[7]]]],[11,R[88],E,E,116,[[["self"]],[T]]],[11,R[87],E,E,116,[[["self"]],[R[89]]]],[11,R[85],E,E,116,[[["self"]],[T]]],[11,R[86],E,E,116,[[["self"]],[R[7]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[["self"]],[U]]],[11,R[84],E,E,117,[[[U]],[R[7]]]],[11,R[88],E,E,117,[[["self"]],[T]]],[11,R[87],E,E,117,[[["self"]],[R[89]]]],[11,R[85],E,E,117,[[["self"]],[T]]],[11,R[86],E,E,117,[[["self"]],[R[7]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[91],E,E,22,[[["self"]],[T]]],[11,R[92],E,E,22,N],[11,R[84],E,E,22,[[[U]],[R[7]]]],[11,R[88],E,E,22,[[["self"]],[T]]],[11,R[87],E,E,22,[[["self"]],[R[89]]]],[11,R[85],E,E,22,[[["self"]],[T]]],[11,R[86],E,E,22,[[["self"]],[R[7]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[["self"]],[U]]],[11,R[84],E,E,118,[[[U]],[R[7]]]],[11,R[88],E,E,118,[[["self"]],[T]]],[11,R[87],E,E,118,[[["self"]],[R[89]]]],[11,R[85],E,E,118,[[["self"]],[T]]],[11,R[86],E,E,118,[[["self"]],[R[7]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[["self"]],[U]]],[11,R[84],E,E,119,[[[U]],[R[7]]]],[11,R[88],E,E,119,[[["self"]],[T]]],[11,R[87],E,E,119,[[["self"]],[R[89]]]],[11,R[85],E,E,119,[[["self"]],[T]]],[11,R[86],E,E,119,[[["self"]],[R[7]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[91],E,E,34,[[["self"]],[T]]],[11,R[92],E,E,34,N],[11,R[84],E,E,34,[[[U]],[R[7]]]],[11,R[88],E,E,34,[[["self"]],[T]]],[11,R[87],E,E,34,[[["self"]],[R[89]]]],[11,R[85],E,E,34,[[["self"]],[T]]],[11,R[86],E,E,34,[[["self"]],[R[7]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[["self"]],[U]]],[11,R[84],E,E,120,[[[U]],[R[7]]]],[11,R[88],E,E,120,[[["self"]],[T]]],[11,R[87],E,E,120,[[["self"]],[R[89]]]],[11,R[85],E,E,120,[[["self"]],[T]]],[11,R[86],E,E,120,[[["self"]],[R[7]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[["self"]],[U]]],[11,R[84],E,E,121,[[[U]],[R[7]]]],[11,R[88],E,E,121,[[["self"]],[T]]],[11,R[87],E,E,121,[[["self"]],[R[89]]]],[11,R[85],E,E,121,[[["self"]],[T]]],[11,R[86],E,E,121,[[["self"]],[R[7]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[["self"]],[U]]],[11,R[91],E,E,122,[[["self"]],[T]]],[11,R[92],E,E,122,N],[11,R[84],E,E,122,[[[U]],[R[7]]]],[11,R[88],E,E,122,[[["self"]],[T]]],[11,R[87],E,E,122,[[["self"]],[R[89]]]],[11,R[85],E,E,122,[[["self"]],[T]]],[11,R[86],E,E,122,[[["self"]],[R[7]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[91],E,E,66,[[["self"]],[T]]],[11,R[92],E,E,66,N],[11,R[84],E,E,66,[[[U]],[R[7]]]],[11,R[88],E,E,66,[[["self"]],[T]]],[11,R[87],E,E,66,[[["self"]],[R[89]]]],[11,R[85],E,E,66,[[["self"]],[T]]],[11,R[86],E,E,66,[[["self"]],[R[7]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[["self"]],[U]]],[11,R[84],E,E,123,[[[U]],[R[7]]]],[11,R[88],E,E,123,[[["self"]],[T]]],[11,R[87],E,E,123,[[["self"]],[R[89]]]],[11,R[85],E,E,123,[[["self"]],[T]]],[11,R[86],E,E,123,[[["self"]],[R[7]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[91],E,E,77,[[["self"]],[T]]],[11,R[92],E,E,77,N],[11,R[84],E,E,77,[[[U]],[R[7]]]],[11,R[88],E,E,77,[[["self"]],[T]]],[11,R[87],E,E,77,[[["self"]],[R[89]]]],[11,R[85],E,E,77,[[["self"]],[T]]],[11,R[86],E,E,77,[[["self"]],[R[7]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[91],E,E,80,[[["self"]],[T]]],[11,R[92],E,E,80,N],[11,R[84],E,E,80,[[[U]],[R[7]]]],[11,R[88],E,E,80,[[["self"]],[T]]],[11,R[87],E,E,80,[[["self"]],[R[89]]]],[11,R[85],E,E,80,[[["self"]],[T]]],[11,R[86],E,E,80,[[["self"]],[R[7]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[91],E,E,86,[[["self"]],[T]]],[11,R[92],E,E,86,N],[11,R[84],E,E,86,[[[U]],[R[7]]]],[11,R[88],E,E,86,[[["self"]],[T]]],[11,R[87],E,E,86,[[["self"]],[R[89]]]],[11,R[85],E,E,86,[[["self"]],[T]]],[11,R[86],E,E,86,[[["self"]],[R[7]]]],[11,"from",R[95],E,124,[[[T]],[T]]],[11,"into",E,E,124,[[["self"]],[U]]],[11,R[84],E,E,124,[[[U]],[R[7]]]],[11,R[88],E,E,124,[[["self"]],[T]]],[11,R[87],E,E,124,[[["self"]],[R[89]]]],[11,R[85],E,E,124,[[["self"]],[T]]],[11,R[86],E,E,124,[[["self"]],[R[7]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[["self"]],[U]]],[11,R[84],E,E,125,[[[U]],[R[7]]]],[11,R[88],E,E,125,[[["self"]],[T]]],[11,R[87],E,E,125,[[["self"]],[R[89]]]],[11,R[85],E,E,125,[[["self"]],[T]]],[11,R[86],E,E,125,[[["self"]],[R[7]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[["self"]],[U]]],[11,R[84],E,E,126,[[[U]],[R[7]]]],[11,R[88],E,E,126,[[["self"]],[T]]],[11,R[87],E,E,126,[[["self"]],[R[89]]]],[11,R[85],E,E,126,[[["self"]],[T]]],[11,R[86],E,E,126,[[["self"]],[R[7]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[["self"]],[U]]],[11,R[84],E,E,127,[[[U]],[R[7]]]],[11,R[88],E,E,127,[[["self"]],[T]]],[11,R[87],E,E,127,[[["self"]],[R[89]]]],[11,R[85],E,E,127,[[["self"]],[T]]],[11,R[86],E,E,127,[[["self"]],[R[7]]]],[11,"sin",E,E,124,N],[11,"cos",E,E,124,N],[11,"tan",E,E,124,N],[11,"asin",E,E,124,N],[11,"acos",E,E,124,N],[11,"atan",E,E,124,N],[11,"sinh",E,E,124,N],[11,"cosh",E,E,124,N],[11,"tanh",E,E,124,N],[11,"asinh",E,E,124,N],[11,"acosh",E,E,124,N],[11,"atanh",E,E,124,N],[11,"sin",E,E,127,N],[11,"cos",E,E,127,N],[11,"tan",E,E,127,N],[11,"asin",E,E,127,N],[11,"acos",E,E,127,N],[11,"atan",E,E,127,N],[11,"sinh",E,E,127,N],[11,"cosh",E,E,127,N],[11,"tanh",E,E,127,N],[11,"asinh",E,E,127,N],[11,"acosh",E,E,127,N],[11,"atanh",E,E,127,N],[11,"sin",E,E,125,N],[11,"cos",E,E,125,N],[11,"tan",E,E,125,N],[11,"asin",E,E,125,N],[11,"acos",E,E,125,N],[11,"atan",E,E,125,N],[11,"sinh",E,E,125,N],[11,"cosh",E,E,125,N],[11,"tanh",E,E,125,N],[11,"asinh",E,E,125,N],[11,"acosh",E,E,125,N],[11,"atanh",E,E,125,N],[11,"sin",E,E,126,N],[11,"cos",E,E,126,N],[11,"tan",E,E,126,N],[11,"asin",E,E,126,N],[11,"acos",E,E,126,N],[11,"atan",E,E,126,N],[11,"sinh",E,E,126,N],[11,"cosh",E,E,126,N],[11,"tanh",E,E,126,N],[11,"asinh",E,E,126,N],[11,"acosh",E,E,126,N],[11,"atanh",E,E,126,N],[11,R[96],E,E,127,N],[11,R[97],E,E,127,N],[11,R[98],E,E,127,N],[11,R[99],E,E,127,N],[11,R[100],E,E,127,N],[11,R[101],E,E,127,N],[11,R[102],E,E,127,N],[11,R[96],E,E,125,N],[11,R[97],E,E,125,N],[11,R[98],E,E,125,N],[11,R[99],E,E,125,N],[11,R[100],E,E,125,N],[11,R[101],E,E,125,N],[11,R[102],E,E,125,N],[11,R[96],E,E,126,N],[11,R[97],E,E,126,N],[11,R[98],E,E,126,N],[11,R[99],E,E,126,N],[11,R[100],E,E,126,N],[11,R[101],E,E,126,N],[11,R[102],E,E,126,N],[11,R[96],E,E,124,N],[11,R[97],E,E,124,N],[11,R[98],E,E,124,N],[11,R[99],E,E,124,N],[11,R[100],E,E,124,N],[11,R[101],E,E,124,N],[11,R[102],E,E,124,N],[11,R[103],E,E,125,[[["self"],["b"],["o"]],[R[7],[R[8]]]]],[11,R[103],E,E,127,[[["self"],["b"],["o"]],[R[7],[R[8]]]]],[11,R[103],E,E,124,[[["self"],["b"],["o"]],[R[7],[R[8]]]]],[11,R[103],E,E,126,[[["self"],["b"],["o"]],[R[7],[R[8]]]]],[11,R[104],E,E,125,N],[11,"ifft",E,E,125,N],[11,R[105],E,E,125,N],[11,R[104],E,E,126,N],[11,"ifft",E,E,126,N],[11,R[105],E,E,126,N],[11,R[104],E,E,124,N],[11,"ifft",E,E,124,N],[11,R[105],E,E,124,N],[11,R[104],E,E,127,N],[11,"ifft",E,E,127,N],[11,R[105],E,E,127,N],[11,R[106],E,E,124,N],[11,R[106],E,E,125,N],[11,R[106],E,E,124,N],[11,R[106],E,E,125,N],[11,R[106],E,E,126,N],[11,R[106],E,E,127,N],[11,R[106],E,E,126,N],[11,R[106],E,E,127,N],[11,R[107],E,E,126,N],[11,R[108],E,E,126,N],[11,R[109],E,E,126,N],[11,R[110],E,E,126,N],[11,R[111],E,E,126,N],[11,R[112],E,E,126,N],[11,R[113],E,E,126,N],[11,R[107],E,E,127,N],[11,R[108],E,E,127,N],[11,R[109],E,E,127,N],[11,R[110],E,E,127,N],[11,R[111],E,E,127,N],[11,R[112],E,E,127,N],[11,R[113],E,E,127,N],[11,R[107],E,E,124,N],[11,R[108],E,E,124,N],[11,R[109],E,E,124,N],[11,R[110],E,E,124,N],[11,R[111],E,E,124,N],[11,R[112],E,E,124,N],[11,R[113],E,E,124,N],[11,R[107],E,E,125,N],[11,R[108],E,E,125,N],[11,R[109],E,E,125,N],[11,R[110],E,E,125,N],[11,R[111],E,E,125,N],[11,R[112],E,E,125,N],[11,R[113],E,E,125,N],[11,R[179],E,E,126,N],[11,R[114],E,E,126,N],[11,R[179],E,E,127,N],[11,R[114],E,E,127,N],[11,R[179],E,E,125,N],[11,R[114],E,E,125,N],[11,R[179],E,E,124,N],[11,R[114],E,E,124,N],[11,R[115],E,E,127,N],[11,R[115],E,E,125,N],[11,R[115],E,E,125,N],[11,R[115],E,E,127,N],[11,R[115],E,E,124,N],[11,R[115],E,E,126,N],[11,R[115],E,E,126,N],[11,R[115],E,E,124,N],[11,"add",E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,"sub",E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,"div",E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,"mul",E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,"add",E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,"sub",E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,"div",E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,"mul",E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,"add",E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"sub",E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"div",E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"mul",E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"add",E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"sub",E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"div",E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"mul",E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"add",E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"sub",E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"div",E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"mul",E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"add",E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,"sub",E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,"div",E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,"mul",E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,"add",E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"sub",E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"div",E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"mul",E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,"add",E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,"sub",E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,"div",E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,"mul",E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,R[120],E,E,126,N],[11,R[121],E,E,126,N],[11,R[122],E,E,126,N],[11,R[190],E,E,126,N],[11,"phase",E,E,126,N],[11,R[120],E,E,124,N],[11,R[121],E,E,124,N],[11,R[122],E,E,124,N],[11,R[190],E,E,124,N],[11,"phase",E,E,124,N],[11,R[120],E,E,125,N],[11,R[121],E,E,125,N],[11,R[122],E,E,125,N],[11,R[190],E,E,125,N],[11,"phase",E,E,125,N],[11,R[120],E,E,127,N],[11,R[121],E,E,127,N],[11,R[122],E,E,127,N],[11,R[190],E,E,127,N],[11,"phase",E,E,127,N],[11,R[123],E,E,126,[[["self"]],[R[26]]]],[11,R[123],E,E,124,[[["self"]],[R[26]]]],[11,R[123],E,E,125,[[["self"]],[R[26]]]],[11,R[123],E,E,127,[[["self"]],[R[26]]]],[11,"diff",E,E,127,N],[11,R[124],E,E,127,N],[11,R[191],E,E,127,N],[11,"diff",E,E,126,N],[11,R[124],E,E,126,N],[11,R[191],E,E,126,N],[11,"diff",E,E,125,N],[11,R[124],E,E,125,N],[11,R[191],E,E,125,N],[11,"diff",E,E,124,N],[11,R[124],E,E,124,N],[11,R[191],E,E,124,N],[11,R[125],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[125],E,E,124,[[["self"],[R[116]]],[R[7],["vec",R[8]]]]],[11,R[125],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[125],E,E,126,[[["self"],[R[119]]],[R[7],["vec",R[8]]]]],[11,R[125],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[125],E,E,124,[[["self"],["v"]],[R[7],["vec",R[8]]]]],[11,R[125],E,E,125,[[["self"],[R[117]]],[R[7],["vec",R[8]]]]],[11,R[125],E,E,127,[[["self"],[R[118]]],[R[7],["vec",R[8]]]]],[11,R[126],E,E,127,N],[11,R[127],E,E,127,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[11,R[128],E,E,127,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[11,R[130],E,E,127,N],[11,R[129],E,E,127,N],[11,R[126],E,E,125,N],[11,R[127],E,E,125,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[11,R[128],E,E,125,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[11,R[130],E,E,125,N],[11,R[129],E,E,125,N],[11,R[126],E,E,126,N],[11,R[127],E,E,126,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[11,R[128],E,E,126,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[11,R[130],E,E,126,N],[11,R[129],E,E,126,N],[11,R[126],E,E,124,N],[11,R[127],E,E,124,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[11,R[128],E,E,124,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[11,R[130],E,E,124,N],[11,R[129],E,E,124,N],[11,R[18],E,E,127,[[["self"]],[R[7]]]],[11,R[18],E,E,124,[[["self"]],[R[7]]]],[11,R[18],E,E,125,[[["self"]],[R[7]]]],[11,R[18],E,E,126,[[["self"]],[R[7]]]],[11,R[131],E,E,127,[[["self"],["b"]],[R[7]]]],[11,"sifft",E,E,127,[[["self"],["b"]],[R[7]]]],[11,R[132],E,E,127,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[131],E,E,124,[[["self"],["b"]],[R[7]]]],[11,"sifft",E,E,124,[[["self"],["b"]],[R[7]]]],[11,R[132],E,E,124,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[131],E,E,126,[[["self"],["b"]],[R[7]]]],[11,"sifft",E,E,126,[[["self"],["b"]],[R[7]]]],[11,R[132],E,E,126,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[131],E,E,125,[[["self"],["b"]],[R[7]]]],[11,"sifft",E,E,125,[[["self"],["b"]],[R[7]]]],[11,R[132],E,E,125,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[133],E,E,126,N],[11,"conj",E,E,126,N],[11,R[133],E,E,125,N],[11,"conj",E,E,125,N],[11,R[133],E,E,124,N],[11,"conj",E,E,124,N],[11,R[133],E,E,127,N],[11,"conj",E,E,127,N],[11,"abs",E,E,125,N],[11,"abs",E,E,126,N],[11,"abs",E,E,124,N],[11,"abs",E,E,127,N],[11,R[134],E,E,126,N],[11,R[134],E,E,127,N],[11,R[134],E,E,124,N],[11,R[134],E,E,125,N],[11,R[134],E,E,125,N],[11,R[134],E,E,126,N],[11,R[134],E,E,127,N],[11,R[134],E,E,124,N],[11,"sqrt",E,E,127,N],[11,"square",E,E,127,N],[11,"root",E,E,127,N],[11,"powf",E,E,127,N],[11,"ln",E,E,127,N],[11,"exp",E,E,127,N],[11,"log",E,E,127,N],[11,"expf",E,E,127,N],[11,"sqrt",E,E,124,N],[11,"square",E,E,124,N],[11,"root",E,E,124,N],[11,"powf",E,E,124,N],[11,"ln",E,E,124,N],[11,"exp",E,E,124,N],[11,"log",E,E,124,N],[11,"expf",E,E,124,N],[11,"sqrt",E,E,126,N],[11,"square",E,E,126,N],[11,"root",E,E,126,N],[11,"powf",E,E,126,N],[11,"ln",E,E,126,N],[11,"exp",E,E,126,N],[11,"log",E,E,126,N],[11,"expf",E,E,126,N],[11,"sqrt",E,E,125,N],[11,"square",E,E,125,N],[11,"root",E,E,125,N],[11,"powf",E,E,125,N],[11,"ln",E,E,125,N],[11,"exp",E,E,125,N],[11,"log",E,E,125,N],[11,"expf",E,E,125,N],[11,"scale",E,E,124,N],[11,"scale",E,E,127,N],[11,"scale",E,E,127,N],[11,"scale",E,E,125,N],[11,"scale",E,E,125,N],[11,"scale",E,E,124,N],[11,"scale",E,E,126,N],[11,"scale",E,E,126,N],[11,R[135],E,E,126,N],[11,R[135],E,E,125,N],[11,R[135],E,E,124,N],[11,R[135],E,E,127,N],[11,R[136],E,E,126,N],[11,R[137],E,E,126,N],[11,R[138],E,E,126,N],[11,R[139],E,E,126,N],[11,R[188],E,E,126,N],[11,R[136],E,E,125,N],[11,R[137],E,E,125,N],[11,R[138],E,E,125,N],[11,R[139],E,E,125,N],[11,R[188],E,E,125,N],[11,R[136],E,E,127,N],[11,R[137],E,E,127,N],[11,R[138],E,E,127,N],[11,R[139],E,E,127,N],[11,R[188],E,E,127,N],[11,R[136],E,E,124,N],[11,R[137],E,E,124,N],[11,R[138],E,E,124,N],[11,R[139],E,E,124,N],[11,R[188],E,E,124,N],[11,R[140],E,E,127,N],[11,R[141],E,E,127,N],[11,R[140],E,E,126,N],[11,R[141],E,E,126,N],[11,R[140],E,E,124,N],[11,R[141],E,E,124,N],[11,R[140],E,E,125,N],[11,R[141],E,E,125,N],[11,R[143],E,E,125,N],[11,R[142],E,E,125,N],[11,R[143],E,E,127,N],[11,R[142],E,E,127,N],[11,R[143],E,E,124,[[["self"]],["vec"]]],[11,R[142],E,E,124,[[["self"]],["vec"]]],[11,R[143],E,E,126,N],[11,R[142],E,E,126,N],[11,"wrap",E,E,125,N],[11,"unwrap",E,E,125,N],[11,"wrap",E,E,126,N],[11,"unwrap",E,E,126,N],[11,"wrap",E,E,127,N],[11,"unwrap",E,E,127,N],[11,"wrap",E,E,124,N],[11,"unwrap",E,E,124,N],[11,R[144],E,E,124,N],[11,R[145],E,E,124,N],[11,R[144],E,E,127,N],[11,R[145],E,E,127,N],[11,R[144],E,E,126,N],[11,R[145],E,E,126,N],[11,R[144],E,E,125,N],[11,R[145],E,E,125,N],[11,"resize",E,E,124,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,"resize",E,E,125,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,"resize",E,E,126,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,"resize",E,E,127,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[146],E,E,126,N],[11,"fft",E,E,126,N],[11,R[147],E,E,126,N],[11,R[146],E,E,124,N],[11,"fft",E,E,124,N],[11,R[147],E,E,124,N],[11,R[146],E,E,127,N],[11,"fft",E,E,127,N],[11,R[147],E,E,127,N],[11,R[146],E,E,125,N],[11,"fft",E,E,125,N],[11,R[147],E,E,125,N],[11,R[148],E,E,127,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[148],E,E,124,[[["self"],["usize"]],[R[7],["vec",R[8]]]]],[11,R[148],E,E,126,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[148],E,E,125,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,"domain",E,E,125,[[["self"]],[R[16]]]],[11,R[62],E,E,125,[[["self"]],["bool"]]],[11,"domain",E,E,124,[[["self"]],[R[16]]]],[11,R[62],E,E,124,[[["self"]],["bool"]]],[11,"domain",E,E,126,[[["self"]],[R[16]]]],[11,R[62],E,E,126,[[["self"]],["bool"]]],[11,"domain",E,E,127,[[["self"]],[R[16]]]],[11,R[62],E,E,127,[[["self"]],["bool"]]],[11,R[149],E,E,127,N],[11,R[149],E,E,124,[[["self"]],["vec",[R[150]]]]],[11,R[149],E,E,126,N],[11,R[149],E,E,125,N],[11,R[151],E,E,124,[[["self"],[R[116]]],[R[7],["vec",R[8]]]]],[11,R[151],E,E,127,[[["self"],[R[118]]],[R[7],["vec",R[8]]]]],[11,R[151],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[151],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[151],E,E,125,[[["self"],[R[117]]],[R[7],["vec",R[8]]]]],[11,R[151],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[151],E,E,126,[[["self"],[R[119]]],[R[7],["vec",R[8]]]]],[11,R[151],E,E,124,[[["self"],["v"]],[R[7],["vec",R[8]]]]],[11,R[152],E,E,127,[[["self"],["b"],[R[9]]],[R[7],[R[8]]]]],[11,R[152],E,E,126,N],[11,R[152],E,E,126,[[["self"],["b"],[R[9]]],[R[7],[R[8]]]]],[11,R[152],E,E,124,[[["self"],["b"],[R[9]]],[R[7],[R[8]]]]],[11,R[152],E,E,127,N],[11,R[152],E,E,125,[[["self"],["b"],[R[9]]],[R[7],[R[8]]]]],[11,R[152],E,E,124,[[["self"],["b"],["vec"]],[R[7],[R[8]]]]],[11,R[152],E,E,125,N],[11,R[153],E,E,126,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[154],E,E,126,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[153],E,E,127,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[154],E,E,127,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[153],E,E,125,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[154],E,E,125,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[153],E,E,124,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[154],E,E,124,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[155],E,E,127,[[["self"],["b"]],[R[7]]]],[11,"sfft",E,E,127,[[["self"],["b"]],[R[7]]]],[11,R[156],E,E,127,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[155],E,E,126,[[["self"],["b"]],[R[7]]]],[11,"sfft",E,E,126,[[["self"],["b"]],[R[7]]]],[11,R[156],E,E,126,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[155],E,E,124,[[["self"],["b"]],[R[7]]]],[11,"sfft",E,E,124,[[["self"],["b"]],[R[7]]]],[11,R[156],E,E,124,[[["self"],["b"],[R[31]]],[R[7]]]],[11,R[155],E,E,125,[[["self"],["b"]],[R[7]]]],[11,"sfft",E,E,125,[[["self"],["b"]],[R[7]]]],[11,R[156],E,E,125,[[["self"],["b"],[R[31]]],[R[7]]]],[11,"offset",E,E,125,N],[11,"offset",E,E,124,N],[11,"offset",E,E,127,N],[11,"offset",E,E,124,N],[11,"offset",E,E,126,N],[11,"offset",E,E,126,N],[11,"offset",E,E,125,N],[11,"offset",E,E,127,N],[11,R[157],E,E,127,N],[11,R[158],E,E,127,N],[11,R[157],E,E,126,N],[11,R[158],E,E,126,N],[11,R[157],E,E,124,N],[11,R[158],E,E,124,N],[11,R[157],E,E,125,N],[11,R[158],E,E,125,N],[11,"mirror",E,E,126,N],[11,R[159],E,E,126,N],[11,R[160],E,E,126,N],[11,"mirror",E,E,124,N],[11,R[159],E,E,124,N],[11,R[160],E,E,124,N],[11,"mirror",E,E,125,N],[11,R[159],E,E,125,N],[11,R[160],E,E,125,N],[11,"mirror",E,E,127,N],[11,R[159],E,E,127,N],[11,R[160],E,E,127,N],[11,R[161],E,E,127,[[[R[118]]],[R[118]]]],[11,R[162],E,E,127,[[[R[118]],["bool"],[R[16]]],[R[118]]]],[11,R[161],E,E,124,[[[R[116]]],[R[116]]]],[11,R[162],E,E,124,[[[R[116]],["bool"],[R[16]]],[R[116]]]],[11,R[161],E,E,126,[[[R[119]]],[R[119]]]],[11,R[162],E,E,126,[[[R[119]],["bool"],[R[16]]],[R[119]]]],[11,R[161],E,E,125,[[[R[117]]],[R[117]]]],[11,R[162],E,E,125,[[[R[117]],["bool"],[R[16]]],[R[117]]]],[11,"sum",E,E,124,[[["self"]],["vec"]]],[11,"sum_sq",E,E,124,[[["self"]],["vec"]]],[11,"sum",E,E,125,N],[11,"sum_sq",E,E,125,N],[11,"sum",E,E,125,N],[11,"sum_sq",E,E,125,N],[11,"sum",E,E,125,N],[11,"sum_sq",E,E,125,N],[11,R[163],E,E,126,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[163],E,E,124,[[["self"],["usize"]],[R[7],["vec",R[8]]]]],[11,R[163],E,E,127,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[163],E,E,125,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[164],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[165],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[166],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[167],E,E,127,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[164],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[165],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[166],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[167],E,E,126,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[164],E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[165],E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[166],E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[167],E,E,124,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[164],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[165],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[166],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[167],E,E,125,[[["self"],["v"]],[R[7],[R[8]]]]],[11,R[164],E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,R[165],E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,R[166],E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,R[167],E,E,125,[[["self"],[R[117]]],[R[7],[R[8]]]]],[11,R[164],E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,R[165],E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,R[166],E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,R[167],E,E,127,[[["self"],[R[118]]],[R[7],[R[8]]]]],[11,R[164],E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,R[165],E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,R[166],E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,R[167],E,E,124,[[["self"],[R[116]]],[R[7],[R[8]]]]],[11,R[164],E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,R[165],E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,R[166],E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,R[167],E,E,126,[[["self"],[R[119]]],[R[7],[R[8]]]]],[11,R[150],E,E,126,N],[11,R[150],E,E,124,[[["self"]],["vec",[R[150]]]]],[11,R[150],E,E,127,N],[11,R[150],E,E,125,N],[11,"get",E,E,127,N],[11,"get",E,E,124,N],[11,"get",E,E,126,N],[11,"get",E,E,125,N],[11,"delta",E,E,125,[[["self"]],[T]]],[11,R[80],E,E,125,N],[11,R[374],E,E,125,[[["self"]],["usize"]]],[11,R[168],E,E,125,[[["self"]],["usize"]]],[11,R[377],E,E,125,[[["self"]],["usize"]]],[11,"rows",E,E,125,N],[11,R[169],E,E,125,N],[11,"delta",E,E,127,[[["self"]],[T]]],[11,R[80],E,E,127,N],[11,R[374],E,E,127,[[["self"]],["usize"]]],[11,R[168],E,E,127,[[["self"]],["usize"]]],[11,R[377],E,E,127,[[["self"]],["usize"]]],[11,"rows",E,E,127,N],[11,R[169],E,E,127,N],[11,"delta",E,E,126,[[["self"]],[T]]],[11,R[80],E,E,126,N],[11,R[374],E,E,126,[[["self"]],["usize"]]],[11,R[168],E,E,126,[[["self"]],["usize"]]],[11,R[377],E,E,126,[[["self"]],["usize"]]],[11,"rows",E,E,126,N],[11,R[169],E,E,126,N],[11,"delta",E,E,124,[[["self"]],[T]]],[11,R[80],E,E,124,N],[11,R[374],E,E,124,[[["self"]],["usize"]]],[11,R[168],E,E,124,[[["self"]],["usize"]]],[11,R[377],E,E,124,[[["self"]],["usize"]]],[11,"rows",E,E,124,N],[11,R[169],E,E,124,N],[11,R[170],E,E,125,[[["self"],["a"],["fmap"],["faggr"]],[R[7],[R[8]]]]],[11,R[170],E,E,127,[[["self"],["a"],["fmap"],["faggr"]],[R[7],[R[8]]]]],[11,R[170],E,E,124,[[["self"],["a"],["fmap"],["faggr"]],[R[7],["vec",R[8]]]]],[11,R[170],E,E,126,[[["self"],["a"],["fmap"],["faggr"]],[R[7],[R[8]]]]],[11,R[62],R[90],E,4,[[["self"]],["bool"]]],[11,R[18],E,E,4,N],[11,R[122],E,E,4,N],[11,R[62],E,E,110,[[["self"]],["bool"]]],[11,R[18],E,E,110,N],[11,R[122],E,E,110,N],[11,R[62],E,E,111,[[["self"]],["bool"]]],[11,R[18],E,E,111,N],[11,R[122],E,E,111,N],[11,"get",R[0],E,86,N],[11,R[60],E,E,86,N],[11,"abs",E,E,86,N],[11,R[88],E,E,116,N],[11,R[41],E,E,116,[[["self"]],["usize"]]],[11,R[88],E,E,121,N],[11,R[41],E,E,121,[[["self"]],["usize"]]],[11,R[88],E,E,117,N],[11,R[41],E,E,117,[[["self"]],["usize"]]],[11,"empty",E,E,34,[[],[R[150],[R[4]]]]],[11,R[805],E,E,34,[[],[R[150],[R[4]]]]],[11,"merge",E,E,34,N],[11,R[171],E,E,34,N],[11,R[172],E,E,34,[[["usize"]],[R[173]]]],[11,"add",E,E,34,N],[11,"empty",E,E,34,[[],[R[150]]]],[11,R[805],E,E,34,[[],[R[150]]]],[11,"merge",E,E,34,N],[11,R[171],E,E,34,N],[11,R[172],E,E,34,[[["usize"]],[R[173]]]],[11,"add",E,E,34,N],[11,"sum",E,E,86,[[["self"]],[T]]],[11,"sum_sq",E,E,86,[[["self"]],[T]]],[11,"sum",E,E,86,[[["self"]],[R[4]]]],[11,"sum_sq",E,E,86,[[["self"]],[R[4]]]],[11,R[164],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[165],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[167],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[166],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[163],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[163],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[150],E,E,86,[[["self"]],[R[150]]]],[11,R[150],E,E,86,[[["self"]],[R[150],[R[4]]]]],[11,"fmt",R[90],E,5,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,110,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",R[0],E,80,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,66,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",R[90],E,111,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,112,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,113,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",R[0],E,77,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,86,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,34,[[["self"],[R[174]]],[R[7],["error"]]]],[11,R[806],E,E,116,[[],[R[222]]]],[11,R[806],R[83],E,109,[[],[R[217]]]],[11,R[175],R[0],E,86,N],[11,"sqrt",E,E,86,N],[11,"square",E,E,86,N],[11,"root",E,E,86,N],[11,"powf",E,E,86,N],[11,"ln",E,E,86,N],[11,"exp",E,E,86,N],[11,"log",E,E,86,N],[11,"expf",E,E,86,N],[11,"scale",E,E,86,N],[11,"scale",E,E,86,N],[11,R[135],E,E,86,N],[11,R[176],E,E,86,[[["self"],["b"],["usize"],[R[34]]],[R[7],[R[8]]]]],[11,R[177],E,E,86,N],[11,R[106],E,E,86,N],[11,R[106],E,E,86,N],[11,R[665],E,E,86,[[["self"],["usize"],[R[34]]],[R[7],[R[8]]]]],[11,R[178],E,E,86,[[["self"],["u32"]],[R[7],[R[8]]]]],[11,R[179],E,E,86,N],[11,R[114],E,E,86,N],[11,"resize",E,E,86,[[["self"],["usize"]],[R[7],[R[8]]]]],[11,R[146],E,E,86,N],[11,"fft",E,E,86,N],[11,R[147],E,E,86,N],[11,"domain",E,E,86,[[["self"]],[R[16]]]],[11,R[62],E,E,86,[[["self"]],["bool"]]],[11,"domain",E,E,122,[[["self"]],[R[16]]]],[11,R[62],E,E,122,[[["self"]],["bool"]]],[11,R[133],E,E,86,N],[11,"conj",E,E,86,N],[11,R[158],E,E,86,N],[11,R[157],E,E,86,N],[11,"domain",R[90],E,112,[[["self"]],[R[16]]]],[11,R[807],E,E,112,N],[11,R[808],E,E,112,N],[11,"domain",E,E,5,[[["self"]],[R[16]]]],[11,R[807],E,E,5,N],[11,R[808],E,E,5,N],[11,"domain",E,E,113,[[["self"]],[R[16]]]],[11,R[808],E,E,113,N],[11,R[807],E,E,113,N],[11,R[103],R[0],E,86,[[["self"],["b"],["o"]],[R[7],[R[8]]]]],[11,"trade",E,E,123,N],[11,"trade",E,E,118,N],[11,"trade",E,E,120,N],[11,"trade",E,E,119,N],[11,R[140],E,E,86,N],[11,R[141],E,E,86,N],[11,"add",E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,"sub",E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,"mul",E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,"div",E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[123],E,E,86,[[["self"]],[R[26]]]],[11,R[126],E,E,86,N],[11,R[127],E,E,86,[[["self"],["b"],[R[38]],["u32"]],[R[7],[R[8]]]]],[11,R[130],E,E,86,N],[11,R[128],E,E,86,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[7],[R[8]]]]],[11,R[129],E,E,86,N],[11,"deref",E,E,118,N],[11,"deref",E,E,119,N],[11,"deref",E,E,120,N],[11,"deref",E,E,123,N],[11,R[18],E,E,86,[[["self"]],[R[7]]]],[11,R[125],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[125],E,E,86,[[["self"],["o"]],[R[7],[R[4],R[8]]]]],[11,R[151],E,E,86,[[["self"],["o"]],[R[7],[R[4],R[8]]]]],[11,R[151],E,E,86,[[["self"],["o"]],[R[7],[R[8]]]]],[11,R[180],E,E,123,N],[11,R[180],E,E,118,N],[11,R[180],E,E,120,N],[11,R[180],E,E,119,N],[11,R[153],E,E,86,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[154],E,E,86,[[["self"],["o"],["o"]],[R[7],[R[8]]]]],[11,R[152],E,E,86,[[["self"],["b"],[R[9]]],[R[7],[R[8]]]]],[11,"delta",E,E,86,[[["self"]],[T]]],[11,R[80],E,E,86,N],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[69],E,E,86,[[["self"]],["bool"]]],[11,"points",E,E,86,[[["self"]],["usize"]]],[11,R[181],E,E,86,[[["self"]],[R[182]]]],[11,R[183],E,E,86,N],[11,R[41],E,E,86,[[["self"]],["usize"]]],[11,R[155],E,E,86,[[["self"],["b"]],[R[7]]]],[11,"sfft",E,E,86,[[["self"],["b"]],[R[7]]]],[11,R[156],E,E,86,[[["self"],["b"],[R[31]]],[R[7]]]],[11,"clone",R[90],E,5,[[["self"]],[R[48]]]],[11,"clone",E,E,111,[[["self"]],[R[4]]]],[11,"clone",E,E,113,[[["self"]],["freq"]]],[11,"clone",E,E,4,[[["self"]],[R[47]]]],[11,"clone",R[0],E,34,[[["self"]],[R[150]]]],[11,"clone",R[90],E,110,[[["self"]],["real"]]],[11,"clone",R[0],E,22,[[["self"]],[R[8]]]],[11,"clone",E,E,77,[[["self"]],[R[16]]]],[11,"clone",E,E,86,[[["self"]],[R[9]]]],[11,R[809],E,E,86,N],[11,"clone",R[90],E,112,[[["self"]],["time"]]],[11,"clone",R[0],E,66,[[["self"]],[R[182]]]],[11,"clone",E,E,122,[[["self"]],[R[26]]]],[11,"clone",E,E,80,[[["self"]],[R[34]]]],[11,R[184],E,E,86,[[["self"]],["o"]]],[11,R[185],E,E,86,[[["self"],["usize"]],[R[4]]]],[11,R[185],E,E,86,N],[11,R[185],E,E,86,N],[11,R[185],E,E,86,N],[11,R[185],E,E,86,N],[11,R[161],E,E,86,[[[R[9]]],[R[9],[R[47],R[48]]]]],[11,R[162],E,E,86,[[[R[9]],["bool"],[R[16]]],[R[9],[R[47],R[48]]]]],[11,R[161],E,E,86,[[[R[9]]],[R[9],["real","freq"]]]],[11,R[162],E,E,86,[[[R[9]],["bool"],[R[16]]],[R[9],["real","freq"]]]],[11,R[161],E,E,86,[[[R[9]]],[R[9],["real","time"]]]],[11,R[162],E,E,86,[[[R[9]],["bool"],[R[16]]],[R[9],["real","time"]]]],[11,R[161],E,E,86,[[[R[9]]],[R[9],[R[4],"freq"]]]],[11,R[162],E,E,86,[[[R[9]],["bool"],[R[16]]],[R[9],[R[4],"freq"]]]],[11,R[161],E,E,86,[[[R[9]]],[R[9],[R[4],"time"]]]],[11,R[162],E,E,86,[[[R[9]],["bool"],[R[16]]],[R[9],[R[4],"time"]]]],[11,R[4],E,E,86,N],[11,R[4],E,E,86,N],[11,R[4],E,E,86,N],[11,R[4],E,E,86,[[["self"],["usize"]],[R[4]]]],[11,R[4],E,E,86,N],[11,R[186],E,E,86,[[["self"],["usize"]],[T]]],[11,R[186],E,E,86,N],[11,R[186],E,E,86,N],[11,R[186],E,E,86,N],[11,R[186],E,E,86,N],[11,R[170],E,E,86,[[["self"],["a"],["fmap"],["faggr"]],[R[7],[R[8]]]]],[11,R[170],E,E,86,[[["self"],["a"],["fmap"],["faggr"]],[R[7],[R[8]]]]],[11,"index",E,E,86,N],[11,"index",E,E,86,N],[11,"index",E,E,86,N],[11,"index",E,E,86,N],[11,"index",E,E,86,[[["self"],["usize"]],[T]]],[11,R[1],R[83],E,107,[[["self"]],["bool"]]],[11,"calc",E,E,107,[[["self"],["f64"]],[R[4],["f64"]]]],[11,R[1],E,E,107,[[["self"]],["bool"]]],[11,"calc",E,E,107,[[["self"],["f32"]],[R[4],["f32"]]]],[11,R[1],E,E,106,[[["self"]],["bool"]]],[11,"calc",E,E,106,[[["self"],["f32"]],[R[4],["f32"]]]],[11,R[1],E,E,106,[[["self"]],["bool"]]],[11,"calc",E,E,106,[[["self"],["f64"]],[R[4],["f64"]]]],[11,R[1],E,E,109,[[["self"]],["bool"]]],[11,"calc",E,E,109,[[["self"],[T]],[T]]],[11,R[1],E,E,108,[[["self"]],["bool"]]],[11,"calc",E,E,108,[[["self"],[T]],[T]]],[11,R[1],E,E,105,[[["self"]],["bool"]]],[11,"calc",E,E,105,[[["self"],["f32"]],["f32"]]],[11,R[1],E,E,105,[[["self"]],["bool"]]],[11,"calc",E,E,105,[[["self"],["f64"]],["f64"]]],[11,R[104],R[0],E,86,N],[11,"ifft",E,E,86,N],[11,R[105],E,E,86,N],[11,R[187],E,E,34,N],[11,R[187],E,E,34,N],[11,R[107],E,E,86,N],[11,R[108],E,E,86,N],[11,R[109],E,E,86,N],[11,R[110],E,E,86,N],[11,R[111],E,E,86,N],[11,R[112],E,E,86,N],[11,R[113],E,E,86,N],[11,R[1],R[83],E,104,[[["self"]],["bool"]]],[11,"calc",E,E,104,[[["self"],["f32"]],["f32"]]],[11,R[1],E,E,108,[[["self"]],["bool"]]],[11,"calc",E,E,108,[[["self"],[T]],[T]]],[11,R[1],E,E,104,[[["self"]],["bool"]]],[11,"calc",E,E,104,[[["self"],["f64"]],["f64"]]],[11,R[1],E,E,109,[[["self"]],["bool"]]],[11,"calc",E,E,109,[[["self"],[T]],[T]]],[11,R[143],R[0],E,86,[[["self"]],[R[4],["f64"]]]],[11,R[142],E,E,86,[[["self"]],[R[4],["f64"]]]],[11,R[143],E,E,86,[[["self"]],[R[4],["f64"]]]],[11,R[142],E,E,86,[[["self"]],[R[4],["f64"]]]],[11,R[143],E,E,86,[[["self"]],["f64"]]],[11,R[142],E,E,86,[[["self"]],["f64"]]],[11,R[143],E,E,86,[[["self"]],["f64"]]],[11,R[142],E,E,86,[[["self"]],["f64"]]],[11,"wrap",E,E,86,N],[11,"unwrap",E,E,86,N],[11,R[144],E,E,86,N],[11,R[145],E,E,86,N],[11,R[148],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[148],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[148],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[148],E,E,86,[[["self"],["usize"]],[R[7],[R[173],R[8]]]]],[11,R[149],E,E,86,[[["self"]],[R[150],[R[4]]]]],[11,R[149],E,E,86,[[["self"]],[R[150],["f64"]]]],[11,R[149],E,E,86,[[["self"]],[R[150],["f64"]]]],[11,R[149],E,E,86,[[["self"]],[R[150],[R[4]]]]],[11,R[1],R[93],E,115,[[["self"]],["bool"]]],[11,"window",E,E,115,[[["self"],["usize"],["usize"]],[T]]],[11,R[1],E,E,114,[[["self"]],["bool"]]],[11,"window",E,E,114,[[["self"],["usize"],["usize"]],[T]]],[11,"merge",R[0],E,86,N],[11,"offset",E,E,86,N],[11,"offset",E,E,86,N],[11,"mirror",E,E,86,N],[11,R[159],E,E,86,N],[11,R[160],E,E,86,N],[11,R[134],E,E,86,N],[11,R[134],E,E,86,N],[11,R[579],E,E,86,[[["self"],["b"],["usize"]],[R[7],[R[8]]]]],[11,"sin",E,E,86,N],[11,"cos",E,E,86,N],[11,"tan",E,E,86,N],[11,"asin",E,E,86,N],[11,"acos",E,E,86,N],[11,"atan",E,E,86,N],[11,"sinh",E,E,86,N],[11,"cosh",E,E,86,N],[11,"tanh",E,E,86,N],[11,"asinh",E,E,86,N],[11,"acosh",E,E,86,N],[11,"atanh",E,E,86,N],[11,R[96],E,E,86,N],[11,R[97],E,E,86,N],[11,R[98],E,E,86,N],[11,R[99],E,E,86,N],[11,R[100],E,E,86,N],[11,R[101],E,E,86,N],[11,R[102],E,E,86,N],[11,R[136],E,E,86,N],[11,R[137],E,E,86,N],[11,R[138],E,E,86,N],[11,R[139],E,E,86,N],[11,R[188],E,E,86,N],[11,R[189],E,E,86,[[["o"]],[R[9]]]],[11,R[120],E,E,86,N],[11,R[121],E,E,86,N],[11,R[122],E,E,86,N],[11,R[190],E,E,86,N],[11,"phase",E,E,86,N],[11,R[115],E,E,86,N],[11,R[115],E,E,86,N],[11,"from",E,E,86,[[["s"]],[R[9],[R[4],"time"]]]],[11,"from",E,E,86,[[["s"]],[R[9],["real","freq"]]]],[11,"from",E,E,86,[[["s"]],[R[9],[R[4],"freq"]]]],[11,"from",E,E,86,[[["s"]],[R[9],["real","time"]]]],[11,R[131],E,E,86,[[["self"],["b"]],[R[7]]]],[11,"sifft",E,E,86,[[["self"],["b"]],[R[7]]]],[11,R[132],E,E,86,[[["self"],["b"],[R[31]]],[R[7]]]],[11,"diff",E,E,86,N],[11,R[124],E,E,86,N],[11,R[191],E,E,86,N],[11,"eq",R[90],E,110,[[["self"],["real"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[48]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[48]]],["bool"]]],[11,"eq",R[0],E,80,[[["self"],[R[34]]],["bool"]]],[11,"eq",R[90],E,112,[[["self"],["time"]],["bool"]]],[11,"eq",R[0],E,34,[[["self"],[R[150]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[150]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[8]]],["bool"]]],[11,"eq",R[90],E,113,[[["self"],["freq"]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[4]]],["bool"]]],[11,"eq",R[0],E,77,[[["self"],[R[16]]],["bool"]]],[11,"eq",R[90],E,4,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[47]]],["bool"]]],[11,"zero",R[94],E,11,[[],[R[4]]]],[11,"from",E,E,11,[[[U]],["option",[R[4]]]]],[11,"sub",E,E,11,[[["self"],[T]],[R[4]]]],[11,"sub",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"sub",E,E,11,[[["self"],[T]],[R[4]]]],[11,"sub",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,R[192],E,R[193],11,[[["str"],["u32"]],[R[7],[R[4]]]]],[11,"neg",E,E,11,[[["self"]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"from_str",E,R[193],11,[[["str"]],[R[7],[R[4]]]]],[11,"inv",E,E,11,[[["self"]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"sum",E,E,11,[[["i"]],[R[4]]]],[11,"sum",E,E,11,[[["i"]],[R[4]]]],[11,R[806],E,E,11,[[],[R[4]]]],[11,"product",E,E,11,[[["i"]],[R[4]]]],[11,"product",E,E,11,[[["i"]],[R[4]]]],[11,R[810],E,E,11,[[["usize"]],["option",[R[4]]]]],[11,R[811],E,E,11,[[["isize"]],["option",[R[4]]]]],[11,"from_u8",E,E,11,[[["u8"]],["option",[R[4]]]]],[11,"from_u16",E,E,11,[[["u16"]],["option",[R[4]]]]],[11,"from_u32",E,E,11,[[["u32"]],["option",[R[4]]]]],[11,"from_u64",E,E,11,[[["u64"]],["option",[R[4]]]]],[11,"from_i8",E,E,11,[[["i8"]],["option",[R[4]]]]],[11,"from_i16",E,E,11,[[["i16"]],["option",[R[4]]]]],[11,"from_i32",E,E,11,[[["i32"]],["option",[R[4]]]]],[11,"from_i64",E,E,11,[[["i64"]],["option",[R[4]]]]],[11,R[812],E,E,11,[[["u128"]],["option",[R[4]]]]],[11,R[813],E,E,11,[[["i128"]],["option",[R[4]]]]],[11,"from_f32",E,E,11,[[["f32"]],["option",[R[4]]]]],[11,"from_f64",E,E,11,[[["f64"]],["option",[R[4]]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,R[194],E,E,11,N],[11,R[194],E,E,11,N],[11,R[194],E,E,11,N],[11,R[194],E,E,11,N],[11,"div",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"div",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"div",E,E,11,[[["self"],[T]],[R[4]]]],[11,"div",E,E,11,[[["self"],[T]],[R[4]]]],[11,R[195],E,E,11,N],[11,R[195],E,E,11,N],[11,R[195],E,E,11,N],[11,R[195],E,E,11,N],[11,"clone",E,E,11,[[["self"]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"eq",E,E,11,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[4]]],["bool"]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"from",E,E,11,[[[T]],[R[4]]]],[11,"from",E,E,11,[[[T]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"zero",E,E,11,[[],[R[4]]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,"fmt",E,E,11,[[["self"],[R[174]]],[R[7],["error"]]]],[11,"add",E,E,11,[[["self"],[T]],[R[4]]]],[11,"add",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"add",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"add",E,E,11,[[["self"],[T]],[R[4]]]],[11,"one",E,E,11,[[],[R[4]]]],[11,"is_one",E,E,11,[[["self"]],["bool"]]],[11,R[196],E,E,11,N],[11,R[196],E,E,11,N],[11,R[196],E,E,11,N],[11,R[196],E,E,11,N],[11,R[197],E,E,11,N],[11,R[197],E,E,11,N],[11,R[197],E,E,11,N],[11,R[197],E,E,11,N],[11,"hash",E,E,11,N],[11,"as_",E,E,11,[[["self"]],[U]]],[11,"to_usize",E,E,11,[[["self"]],["option",["usize"]]]],[11,"to_isize",E,E,11,[[["self"]],["option",["isize"]]]],[11,"to_u8",E,E,11,[[["self"]],["option",["u8"]]]],[11,"to_u16",E,E,11,[[["self"]],["option",["u16"]]]],[11,"to_u32",E,E,11,[[["self"]],["option",["u32"]]]],[11,"to_u64",E,E,11,[[["self"]],["option",["u64"]]]],[11,"to_i8",E,E,11,[[["self"]],["option",["i8"]]]],[11,"to_i16",E,E,11,[[["self"]],["option",["i16"]]]],[11,"to_i32",E,E,11,[[["self"]],["option",["i32"]]]],[11,"to_i64",E,E,11,[[["self"]],["option",["i64"]]]],[11,"to_u128",E,E,11,[[["self"]],["option",["u128"]]]],[11,"to_i128",E,E,11,[[["self"]],["option",["i128"]]]],[11,"to_f32",E,E,11,[[["self"]],["option",["f32"]]]],[11,"to_f64",E,E,11,[[["self"]],["option",["f64"]]]],[11,"rem",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"rem",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"rem",E,E,11,[[["self"],[T]],[R[4]]]],[11,"rem",E,E,11,[[["self"],[T]],[R[4]]]],[11,R[198],E,E,11,N],[11,R[198],E,E,11,N],[11,R[198],E,E,11,N],[11,R[198],E,E,11,N],[11,"mul",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"mul",E,E,11,[[["self"],[T]],[R[4]]]],[11,"mul",E,E,11,[[["self"],[R[4]]],[R[4]]]],[11,"mul",E,E,11,[[["self"],[T]],[R[4]]]],[11,"table",R[83],R[209],104,N],[11,"delta",E,R[210],104,[[["self"]],[T]]],[11,R[199],E,R[200],104,N],[11,R[201],E,R[202],104,[[[R[203]],["f32"],["usize"]],[R[204],["f32"]]]],[11,R[199],E,R[200],104,N],[11,R[201],E,R[202],104,[[[R[203]],["f64"],["usize"]],[R[204],["f64"]]]],[11,R[18],E,R[205],104,[[["self"]],[R[206],["f32"]]]],[11,R[18],E,R[205],104,[[["self"]],[R[206],["f64"]]]],[11,"fft",E,R[207],104,[[["self"]],[R[208],["f32"]]]],[11,"fft",E,R[207],104,[[["self"]],[R[208],["f64"]]]],[11,"table",E,R[209],105,N],[11,"delta",E,R[210],105,[[["self"]],[T]]],[11,R[199],E,R[200],105,N],[11,R[201],E,R[202],105,[[[R[38]],["f32"],["usize"]],[R[208],["f32"]]]],[11,R[199],E,R[200],105,N],[11,R[201],E,R[202],105,[[[R[38]],["f64"],["usize"]],[R[208],["f64"]]]],[11,R[18],E,R[205],105,[[["self"]],[R[211],["f32"]]]],[11,R[18],E,R[205],105,[[["self"]],[R[211],["f64"]]]],[11,"table",E,R[209],106,N],[11,"delta",E,R[210],106,[[["self"]],[T]]],[11,R[199],E,R[200],106,N],[11,R[201],E,R[202],106,[[[R[212]],["f32"],["usize"]],[R[206],["f32"]]]],[11,R[199],E,R[200],106,N],[11,R[201],E,R[202],106,[[[R[212]],["f64"],["usize"]],[R[206],["f64"]]]],[11,R[122],E,R[213],106,[[["self"]],[R[204],["f32"]]]],[11,R[122],E,R[213],106,[[["self"]],[R[204],["f64"]]]],[11,"fft",E,R[214],106,[[["self"]],[R[211],["f32"]]]],[11,"fft",E,R[214],106,[[["self"]],[R[211],["f64"]]]],[11,"table",E,R[209],107,N],[11,"delta",E,R[210],107,[[["self"]],[T]]],[11,R[199],E,R[200],107,N],[11,R[201],E,R[202],107,[[[R[215]],["f32"],["usize"]],[R[211],["f32"]]]],[11,R[199],E,R[200],107,N],[11,R[201],E,R[202],107,[[[R[215]],["f64"],["usize"]],[R[211],["f64"]]]],[11,R[122],E,R[213],107,[[["self"]],[R[208],["f32"]]]],[11,R[122],E,R[213],107,[[["self"]],[R[208],["f64"]]]],[11,"ifft",E,R[216],107,[[["self"]],[R[206],["f32"]]]],[11,"ifft",E,R[216],107,[[["self"]],[R[206],["f64"]]]],[11,"new",E,R[814],108,[[[T]],["raisedcosinefunction"]]],[11,"new",E,R[815],109,[[],[R[217]]]],[11,"new",R[93],R[816],115,[[[T]],[R[218]]]],[11,R[806],E,R[817],115,[[],[R[218]]]],[11,"new",R[94],R[818],11,[[[T],[T]],[R[4]]]],[11,"i",E,R[819],11,[[],[R[4]]]],[11,"norm_sqr",E,R[820],11,[[["self"]],[T]]],[11,"scale",E,R[821],11,[[["self"],[T]],[R[4]]]],[11,"unscale",E,R[822],11,[[["self"],[T]],[R[4]]]],[11,"conj",E,R[823],11,[[["self"]],[R[4]]]],[11,"inv",E,R[824],11,[[["self"]],[R[4]]]],[11,"norm",E,R[825],11,[[["self"]],[T]]],[11,"arg",E,R[826],11,[[["self"]],[T]]],[11,"to_polar",E,R[827],11,N],[11,R[828],E,R[829],11,[[[T],[T]],[R[4]]]],[11,"exp",E,R[830],11,[[["self"]],[R[4]]]],[11,"ln",E,R[831],11,[[["self"]],[R[4]]]],[11,"sqrt",E,R[832],11,[[["self"]],[R[4]]]],[11,"powf",E,R[833],11,[[["self"],[T]],[R[4]]]],[11,"log",E,R[834],11,[[["self"],[T]],[R[4]]]],[11,"powc",E,R[835],11,[[["self"],[R[4]]],[R[4]]]],[11,"expf",E,R[836],11,[[["self"],[T]],[R[4]]]],[11,"sin",E,R[837],11,[[["self"]],[R[4]]]],[11,"cos",E,R[838],11,[[["self"]],[R[4]]]],[11,"tan",E,R[839],11,[[["self"]],[R[4]]]],[11,"asin",E,R[840],11,[[["self"]],[R[4]]]],[11,"acos",E,R[841],11,[[["self"]],[R[4]]]],[11,"atan",E,R[842],11,[[["self"]],[R[4]]]],[11,"sinh",E,R[843],11,[[["self"]],[R[4]]]],[11,"cosh",E,R[844],11,[[["self"]],[R[4]]]],[11,"tanh",E,R[845],11,[[["self"]],[R[4]]]],[11,"asinh",E,R[846],11,[[["self"]],[R[4]]]],[11,"acosh",E,R[847],11,[[["self"]],[R[4]]]],[11,"atanh",E,R[848],11,[[["self"]],[R[4]]]],[11,"is_nan",E,R[849],11,[[["self"]],["bool"]]],[11,R[219],E,R[850],11,[[["self"]],["bool"]]],[11,R[220],E,R[851],11,[[["self"]],["bool"]]],[11,R[221],E,R[852],11,[[["self"]],["bool"]]],[11,"new",R[0],R[223],116,[[],[R[222]]]],[11,R[853],E,R[223],116,[[["usize"]],[R[222]]]],[11,"new",E,R[854],121,[[["s"]],[R[855]]]],[11,R[806],E,R[856],66,[[],[R[182]]]],[11,R[857],E,R[858],66,[[],[R[182]]]],[11,"parallel",E,R[859],66,[[],[R[182]]]],[11,"new",E,R[860],66,[[["usize"]],[R[182]]]],[11,R[861],E,R[862],66,[[["usize"],["usize"],["usize"],["usize"],["usize"]],[R[182]]]],[11,R[863],E,R[864],86,N],[11,R[865],E,R[866],86,[[["self"]],["bool"]]]],"p":[[8,R[224]],[8,R[225]],[8,R[226]],[8,R[227]],[3,R[228]],[3,R[229]],[8,R[230]],[8,"ToSimd"],[8,"Zero"],[8,"Num"],[8,"Float"],[3,R[6]],[8,"One"],[8,R[231]],[8,R[232]],[8,R[233]],[8,R[234]],[8,R[235]],[8,"Domain"],[8,R[236]],[8,R[237]],[8,R[238]],[4,R[239]],[8,R[240]],[8,R[241]],[8,R[242]],[8,R[243]],[8,R[244]],[8,R[245]],[8,R[589]],[8,R[246]],[8,R[247]],[8,R[248]],[8,R[249]],[3,R[250]],[8,R[251]],[8,"Buffer"],[8,R[252]],[8,R[253]],[8,"Resize"],[8,R[254]],[8,R[255]],[8,R[256]],[8,R[627]],[8,R[257]],[8,R[258]],[8,R[259]],[8,R[260]],[8,R[261]],[8,R[262]],[8,R[263]],[8,R[264]],[8,"Stats"],[8,R[265]],[8,R[266]],[8,R[666]],[8,R[267]],[8,R[268]],[8,R[269]],[8,R[270]],[8,R[271]],[8,R[272]],[8,"ToSlice"],[8,R[273]],[8,R[274]],[8,R[275]],[3,R[276]],[8,R[277]],[8,R[278]],[8,R[279]],[8,R[280]],[8,R[281]],[8,R[282]],[8,R[283]],[8,R[284]],[8,"TrigOps"],[8,R[285]],[4,R[286]],[8,R[287]],[8,R[288]],[4,R[289]],[8,R[763]],[8,"RealOps"],[8,R[290]],[8,R[291]],[8,R[778]],[3,"DspVec"],[8,R[292]],[8,"SumOps"],[8,R[293]],[8,R[294]],[8,R[295]],[8,R[296]],[8,R[297]],[8,"Vector"],[8,R[298]],[8,R[299]],[8,"Matrix"],[8,R[300]],[8,R[384]],[8,R[301]],[8,R[302]],[8,R[303]],[8,R[304]],[3,R[305]],[3,R[306]],[3,R[307]],[3,R[308]],[3,R[309]],[3,R[310]],[3,"Real"],[3,R[6]],[3,"Time"],[3,"Freq"],[3,R[311]],[3,R[312]],[3,R[313]],[3,R[542]],[3,R[314]],[3,R[315]],[3,R[316]],[3,R[317]],[3,R[318]],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[322]],[3,R[323]]]};
searchIndex[R[324]]={"doc":"In this lib a matrix is simply a collection of vectors.…","i":[[3,R[320],R[324],R[328],N,N],[3,R[321],E,R[329],N,N],[3,R[322],E,R[330],N,N],[3,R[323],E,R[331],N,N],[6,R[332],E,R[71],N,N],[6,R[333],E,R[72],N,N],[6,R[334],E,R[71],N,N],[6,R[335],E,R[72],N,N],[6,R[336],E,R[71],N,N],[6,R[337],E,R[72],N,N],[6,R[338],E,R[71],N,N],[6,R[339],E,R[72],N,N],[6,R[340],E,R[71],N,N],[6,R[341],E,R[72],N,N],[6,R[342],E,R[73],N,N],[6,R[343],E,R[74],N,N],[6,R[344],E,R[73],N,N],[6,R[345],E,R[74],N,N],[6,R[346],E,R[73],N,N],[6,R[347],E,R[74],N,N],[6,R[348],E,R[73],N,N],[6,R[349],E,R[74],N,N],[6,R[350],E,R[73],N,N],[6,R[351],E,R[74],N,N],[6,R[352],E,R[75],N,N],[6,R[353],E,R[76],N,N],[6,R[354],E,R[75],N,N],[6,R[355],E,R[76],N,N],[6,R[356],E,R[75],N,N],[6,R[357],E,R[76],N,N],[6,R[358],E,R[75],N,N],[6,R[359],E,R[77],N,N],[6,R[360],E,R[78],N,N],[6,R[361],E,R[77],N,N],[6,R[362],E,R[78],N,N],[6,R[363],E,R[77],N,N],[6,R[364],E,R[78],N,N],[6,R[365],E,R[77],N,N],[6,R[366],E,R[78],N,N],[6,R[367],E,R[77],N,N],[6,R[368],E,R[78],N,N],[6,R[369],E,R[77],N,N],[6,R[370],E,R[78],N,N],[6,R[371],E,R[77],N,N],[8,"Matrix",E,R[373],N,N],[10,"delta",E,R[79],0,[[["self"]],[T]]],[10,R[80],E,R[81],0,[[["self"],[T]]]],[10,R[374],E,R[375],0,[[["self"]],["usize"]]],[10,R[168],E,R[376],0,[[["self"]],["usize"]]],[10,R[377],E,R[378],0,[[["self"]],["usize"]]],[10,"rows",E,R[379],0,N],[10,R[169],E,R[380],0,N],[8,R[384],E,R[385],N,N],[16,R[59],E,E,1,N],[10,"to_mat",E,R[386],1,N],[8,R[303],E,R[391],N,N],[16,R[59],E,E,2,N],[10,R[392],E,R[393],2,N],[8,R[304],E,R[82],N,N],[16,R[59],E,E,3,N],[10,R[394],E,R[395],3,N],[8,R[299],E,R[82],N,N],[16,R[59],E,E,4,N],[10,R[372],E,R[67],4,N],[8,R[301],E,R[20],N,N],[16,R[59],E,E,5,N],[10,R[387],E,R[388],5,N],[8,R[302],E,R[20],N,N],[16,R[59],E,E,6,N],[10,R[389],E,R[390],6,N],[8,R[300],E,R[381],N,N],[16,R[59],E,R[382],7,N],[10,"get",E,R[383],7,N],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[84],E,E,8,[[[U]],[R[7]]]],[11,R[88],E,E,8,[[["self"]],[T]]],[11,R[87],E,E,8,[[["self"]],[R[89]]]],[11,R[85],E,E,8,[[["self"]],[T]]],[11,R[86],E,E,8,[[["self"]],[R[7]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[84],E,E,9,[[[U]],[R[7]]]],[11,R[88],E,E,9,[[["self"]],[T]]],[11,R[87],E,E,9,[[["self"]],[R[89]]]],[11,R[85],E,E,9,[[["self"]],[T]]],[11,R[86],E,E,9,[[["self"]],[R[7]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[84],E,E,10,[[[U]],[R[7]]]],[11,R[88],E,E,10,[[["self"]],[T]]],[11,R[87],E,E,10,[[["self"]],[R[89]]]],[11,R[85],E,E,10,[[["self"]],[T]]],[11,R[86],E,E,10,[[["self"]],[R[7]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[84],E,E,11,[[[U]],[R[7]]]],[11,R[88],E,E,11,[[["self"]],[T]]],[11,R[87],E,E,11,[[["self"]],[R[89]]]],[11,R[85],E,E,11,[[["self"]],[T]]],[11,R[86],E,E,11,[[["self"]],[R[7]]]],[11,"delta",E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"],[T]]]],[11,R[374],E,E,8,[[["self"]],["usize"]]],[11,R[168],E,E,8,[[["self"]],["usize"]]],[11,R[377],E,E,8,[[["self"]],["usize"]]],[11,"rows",E,E,8,N],[11,R[169],E,E,8,N],[11,"delta",E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"],[T]]]],[11,R[374],E,E,9,[[["self"]],["usize"]]],[11,R[168],E,E,9,[[["self"]],["usize"]]],[11,R[377],E,E,9,[[["self"]],["usize"]]],[11,"rows",E,E,9,N],[11,R[169],E,E,9,N],[11,"delta",E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"],[T]]]],[11,R[374],E,E,10,[[["self"]],["usize"]]],[11,R[168],E,E,10,[[["self"]],["usize"]]],[11,R[377],E,E,10,[[["self"]],["usize"]]],[11,"rows",E,E,10,N],[11,R[169],E,E,10,N],[11,"delta",E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"],[T]]]],[11,R[374],E,E,11,[[["self"]],["usize"]]],[11,R[168],E,E,11,[[["self"]],["usize"]]],[11,R[377],E,E,11,[[["self"]],["usize"]]],[11,"rows",E,E,11,N],[11,R[169],E,E,11,N],[11,"get",E,E,8,N],[11,"get",E,E,9,N],[11,"get",E,E,10,N],[11,"get",E,E,11,N],[11,R[131],E,E,8,[[["self"],["b"]],[R[325]]]],[11,"sifft",E,E,8,[[["self"],["b"]],[R[325]]]],[11,R[132],E,E,8,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[131],E,E,9,[[["self"],["b"]],[R[325]]]],[11,"sifft",E,E,9,[[["self"],["b"]],[R[325]]]],[11,R[132],E,E,9,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[131],E,E,10,[[["self"],["b"]],[R[325]]]],[11,"sifft",E,E,10,[[["self"],["b"]],[R[325]]]],[11,R[132],E,E,10,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[131],E,E,11,[[["self"],["b"]],[R[325]]]],[11,"sifft",E,E,11,[[["self"],["b"]],[R[325]]]],[11,R[132],E,E,11,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[149],E,E,8,[[["self"]],["vec",[R[150]]]]],[11,R[149],E,E,9,N],[11,R[149],E,E,10,N],[11,R[149],E,E,11,N],[11,R[161],E,E,8,[[[R[116]]],["self"]]],[11,R[162],E,E,8,[[[R[116]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,9,[[[R[117]]],["self"]]],[11,R[162],E,E,9,[[[R[117]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,10,[[[R[119]]],["self"]]],[11,R[162],E,E,10,[[[R[119]],["bool"],[R[16]]],["self"]]],[11,R[161],E,E,11,[[[R[118]]],["self"]]],[11,R[162],E,E,11,[[[R[118]],["bool"],[R[16]]],["self"]]],[11,"scale",E,E,8,[[["self"],[T]]]],[11,"scale",E,E,8,[[["self"],[R[4]]]]],[11,"scale",E,E,9,[[["self"],[T]]]],[11,"scale",E,E,9,[[["self"],[R[4]]]]],[11,"scale",E,E,10,[[["self"],[T]]]],[11,"scale",E,E,10,[[["self"],[R[4]]]]],[11,"scale",E,E,11,[[["self"],[T]]]],[11,"scale",E,E,11,[[["self"],[R[4]]]]],[11,"offset",E,E,8,[[["self"],[T]]]],[11,"offset",E,E,8,[[["self"],[R[4]]]]],[11,"offset",E,E,9,[[["self"],[T]]]],[11,"offset",E,E,9,[[["self"],[R[4]]]]],[11,"offset",E,E,10,[[["self"],[T]]]],[11,"offset",E,E,10,[[["self"],[R[4]]]]],[11,"offset",E,E,11,[[["self"],[T]]]],[11,"offset",E,E,11,[[["self"],[R[4]]]]],[11,R[120],E,E,8,N],[11,R[121],E,E,8,N],[11,R[122],E,E,8,N],[11,R[190],E,E,8,N],[11,"phase",E,E,8,N],[11,R[120],E,E,9,N],[11,R[121],E,E,9,N],[11,R[122],E,E,9,N],[11,R[190],E,E,9,N],[11,"phase",E,E,9,N],[11,R[120],E,E,10,N],[11,R[121],E,E,10,N],[11,R[122],E,E,10,N],[11,R[190],E,E,10,N],[11,"phase",E,E,10,N],[11,R[120],E,E,11,N],[11,R[121],E,E,11,N],[11,R[122],E,E,11,N],[11,R[190],E,E,11,N],[11,"phase",E,E,11,N],[11,R[125],E,E,8,[[["self"],[R[116]]],[R[326],["vec"]]]],[11,R[125],E,E,9,[[["self"],[R[117]]],[R[326],["vec"]]]],[11,R[125],E,E,10,[[["self"],[R[119]]],[R[326],["vec"]]]],[11,R[125],E,E,11,[[["self"],[R[118]]],[R[326],["vec"]]]],[11,R[125],E,E,8,[[["self"],["v"]],[R[326],["vec"]]]],[11,R[125],E,E,9,[[["self"],["v"]],[R[326]]]],[11,R[125],E,E,10,[[["self"],["v"]],[R[326]]]],[11,R[125],E,E,11,[[["self"],["v"]],[R[326]]]],[11,"resize",E,E,8,[[["self"],["usize"]],[R[327]]]],[11,"resize",E,E,9,[[["self"],["usize"]],[R[327]]]],[11,"resize",E,E,10,[[["self"],["usize"]],[R[327]]]],[11,"resize",E,E,11,[[["self"],["usize"]],[R[327]]]],[11,R[152],E,E,8,[[["self"],["b"],[R[9]]],[R[327]]]],[11,R[152],E,E,9,[[["self"],["b"],[R[9]]],[R[327]]]],[11,R[152],E,E,10,[[["self"],["b"],[R[9]]],[R[327]]]],[11,R[152],E,E,11,[[["self"],["b"],[R[9]]],[R[327]]]],[11,R[152],E,E,8,[[["self"],["b"],["vec"]],[R[327]]]],[11,R[152],E,E,9,N],[11,R[152],E,E,10,N],[11,R[152],E,E,11,N],[11,R[151],E,E,8,[[["self"],[R[116]]],[R[326],["vec"]]]],[11,R[151],E,E,9,[[["self"],[R[117]]],[R[326],["vec"]]]],[11,R[151],E,E,10,[[["self"],[R[119]]],[R[326],["vec"]]]],[11,R[151],E,E,11,[[["self"],[R[118]]],[R[326],["vec"]]]],[11,R[151],E,E,8,[[["self"],["v"]],[R[326],["vec"]]]],[11,R[151],E,E,9,[[["self"],["v"]],[R[326]]]],[11,R[151],E,E,10,[[["self"],["v"]],[R[326]]]],[11,R[151],E,E,11,[[["self"],["v"]],[R[326]]]],[11,"mirror",E,E,8,[[["self"],["b"]]]],[11,R[159],E,E,8,[[["self"]]]],[11,R[160],E,E,8,[[["self"]]]],[11,"mirror",E,E,9,[[["self"],["b"]]]],[11,R[159],E,E,9,[[["self"]]]],[11,R[160],E,E,9,[[["self"]]]],[11,"mirror",E,E,10,[[["self"],["b"]]]],[11,R[159],E,E,10,[[["self"]]]],[11,R[160],E,E,10,[[["self"]]]],[11,"mirror",E,E,11,[[["self"],["b"]]]],[11,R[159],E,E,11,[[["self"]]]],[11,R[160],E,E,11,[[["self"]]]],[11,"wrap",E,E,8,[[["self"],[T]]]],[11,"unwrap",E,E,8,[[["self"],[T]]]],[11,"wrap",E,E,9,[[["self"],[T]]]],[11,"unwrap",E,E,9,[[["self"],[T]]]],[11,"wrap",E,E,10,[[["self"],[T]]]],[11,"unwrap",E,E,10,[[["self"],[T]]]],[11,"wrap",E,E,11,[[["self"],[T]]]],[11,"unwrap",E,E,11,[[["self"],[T]]]],[11,R[96],E,E,8,[[["self"],["o"]]]],[11,R[97],E,E,8,[[["self"],["o"]]]],[11,R[98],E,E,8,[[["self"],["o"]]]],[11,R[99],E,E,8,[[["self"],["o"]]]],[11,R[100],E,E,8,[[["self"],["o"]]]],[11,R[101],E,E,8,[[["self"],["o"],["o"]]]],[11,R[102],E,E,8,[[["self"],["o"],["o"]]]],[11,R[96],E,E,9,[[["self"],["o"]]]],[11,R[97],E,E,9,[[["self"],["o"]]]],[11,R[98],E,E,9,[[["self"],["o"]]]],[11,R[99],E,E,9,[[["self"],["o"]]]],[11,R[100],E,E,9,[[["self"],["o"]]]],[11,R[101],E,E,9,[[["self"],["o"],["o"]]]],[11,R[102],E,E,9,[[["self"],["o"],["o"]]]],[11,R[96],E,E,10,[[["self"],["o"]]]],[11,R[97],E,E,10,[[["self"],["o"]]]],[11,R[98],E,E,10,[[["self"],["o"]]]],[11,R[99],E,E,10,[[["self"],["o"]]]],[11,R[100],E,E,10,[[["self"],["o"]]]],[11,R[101],E,E,10,[[["self"],["o"],["o"]]]],[11,R[102],E,E,10,[[["self"],["o"],["o"]]]],[11,R[96],E,E,11,[[["self"],["o"]]]],[11,R[97],E,E,11,[[["self"],["o"]]]],[11,R[98],E,E,11,[[["self"],["o"]]]],[11,R[99],E,E,11,[[["self"],["o"]]]],[11,R[100],E,E,11,[[["self"],["o"]]]],[11,R[101],E,E,11,[[["self"],["o"],["o"]]]],[11,R[102],E,E,11,[[["self"],["o"],["o"]]]],[11,"sin",E,E,8,[[["self"]]]],[11,"cos",E,E,8,[[["self"]]]],[11,"tan",E,E,8,[[["self"]]]],[11,"asin",E,E,8,[[["self"]]]],[11,"acos",E,E,8,[[["self"]]]],[11,"atan",E,E,8,[[["self"]]]],[11,"sinh",E,E,8,[[["self"]]]],[11,"cosh",E,E,8,[[["self"]]]],[11,"tanh",E,E,8,[[["self"]]]],[11,"asinh",E,E,8,[[["self"]]]],[11,"acosh",E,E,8,[[["self"]]]],[11,"atanh",E,E,8,[[["self"]]]],[11,"sin",E,E,9,[[["self"]]]],[11,"cos",E,E,9,[[["self"]]]],[11,"tan",E,E,9,[[["self"]]]],[11,"asin",E,E,9,[[["self"]]]],[11,"acos",E,E,9,[[["self"]]]],[11,"atan",E,E,9,[[["self"]]]],[11,"sinh",E,E,9,[[["self"]]]],[11,"cosh",E,E,9,[[["self"]]]],[11,"tanh",E,E,9,[[["self"]]]],[11,"asinh",E,E,9,[[["self"]]]],[11,"acosh",E,E,9,[[["self"]]]],[11,"atanh",E,E,9,[[["self"]]]],[11,"sin",E,E,10,[[["self"]]]],[11,"cos",E,E,10,[[["self"]]]],[11,"tan",E,E,10,[[["self"]]]],[11,"asin",E,E,10,[[["self"]]]],[11,"acos",E,E,10,[[["self"]]]],[11,"atan",E,E,10,[[["self"]]]],[11,"sinh",E,E,10,[[["self"]]]],[11,"cosh",E,E,10,[[["self"]]]],[11,"tanh",E,E,10,[[["self"]]]],[11,"asinh",E,E,10,[[["self"]]]],[11,"acosh",E,E,10,[[["self"]]]],[11,"atanh",E,E,10,[[["self"]]]],[11,"sin",E,E,11,[[["self"]]]],[11,"cos",E,E,11,[[["self"]]]],[11,"tan",E,E,11,[[["self"]]]],[11,"asin",E,E,11,[[["self"]]]],[11,"acos",E,E,11,[[["self"]]]],[11,"atan",E,E,11,[[["self"]]]],[11,"sinh",E,E,11,[[["self"]]]],[11,"cosh",E,E,11,[[["self"]]]],[11,"tanh",E,E,11,[[["self"]]]],[11,"asinh",E,E,11,[[["self"]]]],[11,"acosh",E,E,11,[[["self"]]]],[11,"atanh",E,E,11,[[["self"]]]],[11,R[135],E,E,8,N],[11,R[135],E,E,9,N],[11,R[135],E,E,10,N],[11,R[135],E,E,11,N],[11,"domain",E,E,8,[[["self"]],[R[16]]]],[11,R[62],E,E,8,[[["self"]],["bool"]]],[11,"domain",E,E,9,[[["self"]],[R[16]]]],[11,R[62],E,E,9,[[["self"]],["bool"]]],[11,"domain",E,E,10,[[["self"]],[R[16]]]],[11,R[62],E,E,10,[[["self"]],["bool"]]],[11,"domain",E,E,11,[[["self"]],[R[16]]]],[11,R[62],E,E,11,[[["self"]],["bool"]]],[11,R[104],E,E,8,N],[11,"ifft",E,E,8,N],[11,R[105],E,E,8,N],[11,R[104],E,E,9,N],[11,"ifft",E,E,9,N],[11,R[105],E,E,9,N],[11,R[104],E,E,10,N],[11,"ifft",E,E,10,N],[11,R[105],E,E,10,N],[11,R[104],E,E,11,N],[11,"ifft",E,E,11,N],[11,R[105],E,E,11,N],[11,R[150],E,E,8,[[["self"]],["vec",[R[150]]]]],[11,R[150],E,E,9,N],[11,R[150],E,E,10,N],[11,R[150],E,E,11,N],[11,"add",E,E,8,[[["self"],["self"]],[R[327]]]],[11,"sub",E,E,8,[[["self"],["self"]],[R[327]]]],[11,"div",E,E,8,[[["self"],["self"]],[R[327]]]],[11,"mul",E,E,8,[[["self"],["self"]],[R[327]]]],[11,"add",E,E,8,[[["self"],["v"]],[R[327]]]],[11,"sub",E,E,8,[[["self"],["v"]],[R[327]]]],[11,"div",E,E,8,[[["self"],["v"]],[R[327]]]],[11,"mul",E,E,8,[[["self"],["v"]],[R[327]]]],[11,"add",E,E,9,[[["self"],["self"]],[R[327]]]],[11,"sub",E,E,9,[[["self"],["self"]],[R[327]]]],[11,"div",E,E,9,[[["self"],["self"]],[R[327]]]],[11,"mul",E,E,9,[[["self"],["self"]],[R[327]]]],[11,"add",E,E,9,[[["self"],["v"]],[R[327]]]],[11,"sub",E,E,9,[[["self"],["v"]],[R[327]]]],[11,"div",E,E,9,[[["self"],["v"]],[R[327]]]],[11,"mul",E,E,9,[[["self"],["v"]],[R[327]]]],[11,"add",E,E,10,[[["self"],["self"]],[R[327]]]],[11,"sub",E,E,10,[[["self"],["self"]],[R[327]]]],[11,"div",E,E,10,[[["self"],["self"]],[R[327]]]],[11,"mul",E,E,10,[[["self"],["self"]],[R[327]]]],[11,"add",E,E,10,[[["self"],["v"]],[R[327]]]],[11,"sub",E,E,10,[[["self"],["v"]],[R[327]]]],[11,"div",E,E,10,[[["self"],["v"]],[R[327]]]],[11,"mul",E,E,10,[[["self"],["v"]],[R[327]]]],[11,"add",E,E,11,[[["self"],["self"]],[R[327]]]],[11,"sub",E,E,11,[[["self"],["self"]],[R[327]]]],[11,"div",E,E,11,[[["self"],["self"]],[R[327]]]],[11,"mul",E,E,11,[[["self"],["self"]],[R[327]]]],[11,"add",E,E,11,[[["self"],["v"]],[R[327]]]],[11,"sub",E,E,11,[[["self"],["v"]],[R[327]]]],[11,"div",E,E,11,[[["self"],["v"]],[R[327]]]],[11,"mul",E,E,11,[[["self"],["v"]],[R[327]]]],[11,R[143],E,E,8,[[["self"]],["vec"]]],[11,R[142],E,E,8,[[["self"]],["vec"]]],[11,R[143],E,E,9,N],[11,R[142],E,E,9,N],[11,R[143],E,E,10,N],[11,R[142],E,E,10,N],[11,R[143],E,E,11,N],[11,R[142],E,E,11,N],[11,R[103],E,E,8,[[["self"],["b"],["o"]],[R[327]]]],[11,R[103],E,E,9,[[["self"],["b"],["o"]],[R[327]]]],[11,R[103],E,E,10,[[["self"],["b"],["o"]],[R[327]]]],[11,R[103],E,E,11,[[["self"],["b"],["o"]],[R[327]]]],[11,R[164],E,E,8,[[["self"],["self"]],[R[327]]]],[11,R[165],E,E,8,[[["self"],["self"]],[R[327]]]],[11,R[166],E,E,8,[[["self"],["self"]],[R[327]]]],[11,R[167],E,E,8,[[["self"],["self"]],[R[327]]]],[11,R[164],E,E,8,[[["self"],["v"]],[R[327]]]],[11,R[165],E,E,8,[[["self"],["v"]],[R[327]]]],[11,R[166],E,E,8,[[["self"],["v"]],[R[327]]]],[11,R[167],E,E,8,[[["self"],["v"]],[R[327]]]],[11,R[164],E,E,9,[[["self"],["self"]],[R[327]]]],[11,R[165],E,E,9,[[["self"],["self"]],[R[327]]]],[11,R[166],E,E,9,[[["self"],["self"]],[R[327]]]],[11,R[167],E,E,9,[[["self"],["self"]],[R[327]]]],[11,R[164],E,E,9,[[["self"],["v"]],[R[327]]]],[11,R[165],E,E,9,[[["self"],["v"]],[R[327]]]],[11,R[166],E,E,9,[[["self"],["v"]],[R[327]]]],[11,R[167],E,E,9,[[["self"],["v"]],[R[327]]]],[11,R[164],E,E,10,[[["self"],["self"]],[R[327]]]],[11,R[165],E,E,10,[[["self"],["self"]],[R[327]]]],[11,R[166],E,E,10,[[["self"],["self"]],[R[327]]]],[11,R[167],E,E,10,[[["self"],["self"]],[R[327]]]],[11,R[164],E,E,10,[[["self"],["v"]],[R[327]]]],[11,R[165],E,E,10,[[["self"],["v"]],[R[327]]]],[11,R[166],E,E,10,[[["self"],["v"]],[R[327]]]],[11,R[167],E,E,10,[[["self"],["v"]],[R[327]]]],[11,R[164],E,E,11,[[["self"],["self"]],[R[327]]]],[11,R[165],E,E,11,[[["self"],["self"]],[R[327]]]],[11,R[166],E,E,11,[[["self"],["self"]],[R[327]]]],[11,R[167],E,E,11,[[["self"],["self"]],[R[327]]]],[11,R[164],E,E,11,[[["self"],["v"]],[R[327]]]],[11,R[165],E,E,11,[[["self"],["v"]],[R[327]]]],[11,R[166],E,E,11,[[["self"],["v"]],[R[327]]]],[11,R[167],E,E,11,[[["self"],["v"]],[R[327]]]],[11,R[18],E,E,8,[[["self"]],[R[325]]]],[11,R[18],E,E,9,[[["self"]],[R[325]]]],[11,R[18],E,E,10,[[["self"]],[R[325]]]],[11,R[18],E,E,11,[[["self"]],[R[325]]]],[11,R[170],E,E,8,[[["self"],["a"],["fmap"],["faggr"]],[R[326],["vec"]]]],[11,R[170],E,E,9,[[["self"],["a"],["fmap"],["faggr"]],[R[326]]]],[11,R[170],E,E,10,[[["self"],["a"],["fmap"],["faggr"]],[R[326]]]],[11,R[170],E,E,11,[[["self"],["a"],["fmap"],["faggr"]],[R[326]]]],[11,"sqrt",E,E,8,[[["self"]]]],[11,"square",E,E,8,[[["self"]]]],[11,"root",E,E,8,[[["self"],[T]]]],[11,"powf",E,E,8,[[["self"],[T]]]],[11,"ln",E,E,8,[[["self"]]]],[11,"exp",E,E,8,[[["self"]]]],[11,"log",E,E,8,[[["self"],[T]]]],[11,"expf",E,E,8,[[["self"],[T]]]],[11,"sqrt",E,E,9,[[["self"]]]],[11,"square",E,E,9,[[["self"]]]],[11,"root",E,E,9,[[["self"],[T]]]],[11,"powf",E,E,9,[[["self"],[T]]]],[11,"ln",E,E,9,[[["self"]]]],[11,"exp",E,E,9,[[["self"]]]],[11,"log",E,E,9,[[["self"],[T]]]],[11,"expf",E,E,9,[[["self"],[T]]]],[11,"sqrt",E,E,10,[[["self"]]]],[11,"square",E,E,10,[[["self"]]]],[11,"root",E,E,10,[[["self"],[T]]]],[11,"powf",E,E,10,[[["self"],[T]]]],[11,"ln",E,E,10,[[["self"]]]],[11,"exp",E,E,10,[[["self"]]]],[11,"log",E,E,10,[[["self"],[T]]]],[11,"expf",E,E,10,[[["self"],[T]]]],[11,"sqrt",E,E,11,[[["self"]]]],[11,"square",E,E,11,[[["self"]]]],[11,"root",E,E,11,[[["self"],[T]]]],[11,"powf",E,E,11,[[["self"],[T]]]],[11,"ln",E,E,11,[[["self"]]]],[11,"exp",E,E,11,[[["self"]]]],[11,"log",E,E,11,[[["self"],[T]]]],[11,"expf",E,E,11,[[["self"],[T]]]],[11,R[123],E,E,8,[[["self"]],[R[26]]]],[11,R[123],E,E,9,[[["self"]],[R[26]]]],[11,R[123],E,E,10,[[["self"]],[R[26]]]],[11,R[123],E,E,11,[[["self"]],[R[26]]]],[11,R[106],E,E,8,[[["self"],[R[38]],[T]]]],[11,R[106],E,E,8,[[["self"],[R[215]],[T]]]],[11,R[106],E,E,9,[[["self"],[R[38]],[T]]]],[11,R[106],E,E,9,[[["self"],[R[215]],[T]]]],[11,R[106],E,E,10,[[["self"],[R[38]],[T]]]],[11,R[106],E,E,10,[[["self"],[R[215]],[T]]]],[11,R[106],E,E,11,[[["self"],[R[38]],[T]]]],[11,R[106],E,E,11,[[["self"],[R[215]],[T]]]],[11,R[133],E,E,8,[[["self"],[T],[T]]]],[11,"conj",E,E,8,[[["self"]]]],[11,R[133],E,E,9,[[["self"],[T],[T]]]],[11,"conj",E,E,9,[[["self"]]]],[11,R[133],E,E,10,[[["self"],[T],[T]]]],[11,"conj",E,E,10,[[["self"]]]],[11,R[133],E,E,11,[[["self"],[T],[T]]]],[11,"conj",E,E,11,[[["self"]]]],[11,R[115],E,E,8,[[["self"],["a"],["f"]]]],[11,R[115],E,E,8,[[["self"],["a"],["f"]]]],[11,R[115],E,E,9,[[["self"],["a"],["f"]]]],[11,R[115],E,E,9,[[["self"],["a"],["f"]]]],[11,R[115],E,E,10,[[["self"],["a"],["f"]]]],[11,R[115],E,E,10,[[["self"],["a"],["f"]]]],[11,R[115],E,E,11,[[["self"],["a"],["f"]]]],[11,R[115],E,E,11,[[["self"],["a"],["f"]]]],[11,R[155],E,E,8,[[["self"],["b"]],[R[325]]]],[11,"sfft",E,E,8,[[["self"],["b"]],[R[325]]]],[11,R[156],E,E,8,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[155],E,E,9,[[["self"],["b"]],[R[325]]]],[11,"sfft",E,E,9,[[["self"],["b"]],[R[325]]]],[11,R[156],E,E,9,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[155],E,E,10,[[["self"],["b"]],[R[325]]]],[11,"sfft",E,E,10,[[["self"],["b"]],[R[325]]]],[11,R[156],E,E,10,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[155],E,E,11,[[["self"],["b"]],[R[325]]]],[11,"sfft",E,E,11,[[["self"],["b"]],[R[325]]]],[11,R[156],E,E,11,[[["self"],["b"],[R[31]]],[R[325]]]],[11,R[107],E,E,8,[[["self"]]]],[11,R[108],E,E,8,[[["self"]]]],[11,R[109],E,E,8,[[["self"]]]],[11,R[110],E,E,8,[[["self"]]]],[11,R[111],E,E,8,[[["self"],[T]]]],[11,R[112],E,E,8,[[["self"],[T]]]],[11,R[113],E,E,8,[[["self"],[T]]]],[11,R[107],E,E,9,[[["self"]]]],[11,R[108],E,E,9,[[["self"]]]],[11,R[109],E,E,9,[[["self"]]]],[11,R[110],E,E,9,[[["self"]]]],[11,R[111],E,E,9,[[["self"],[T]]]],[11,R[112],E,E,9,[[["self"],[T]]]],[11,R[113],E,E,9,[[["self"],[T]]]],[11,R[107],E,E,10,[[["self"]]]],[11,R[108],E,E,10,[[["self"]]]],[11,R[109],E,E,10,[[["self"]]]],[11,R[110],E,E,10,[[["self"]]]],[11,R[111],E,E,10,[[["self"],[T]]]],[11,R[112],E,E,10,[[["self"],[T]]]],[11,R[113],E,E,10,[[["self"],[T]]]],[11,R[107],E,E,11,[[["self"]]]],[11,R[108],E,E,11,[[["self"]]]],[11,R[109],E,E,11,[[["self"]]]],[11,R[110],E,E,11,[[["self"]]]],[11,R[111],E,E,11,[[["self"],[T]]]],[11,R[112],E,E,11,[[["self"],[T]]]],[11,R[113],E,E,11,[[["self"],[T]]]],[11,"diff",E,E,8,[[["self"]]]],[11,R[124],E,E,8,[[["self"]]]],[11,R[191],E,E,8,[[["self"]]]],[11,"diff",E,E,9,[[["self"]]]],[11,R[124],E,E,9,[[["self"]]]],[11,R[191],E,E,9,[[["self"]]]],[11,"diff",E,E,10,[[["self"]]]],[11,R[124],E,E,10,[[["self"]]]],[11,R[191],E,E,10,[[["self"]]]],[11,"diff",E,E,11,[[["self"]]]],[11,R[124],E,E,11,[[["self"]]]],[11,R[191],E,E,11,[[["self"]]]],[11,R[134],E,E,8,[[["self"],["b"],[R[203]],[T],["usize"]]]],[11,R[134],E,E,8,[[["self"],["b"],[R[212]],[T],["usize"]]]],[11,R[134],E,E,9,[[["self"],["b"],[R[203]],[T],["usize"]]]],[11,R[134],E,E,9,[[["self"],["b"],[R[212]],[T],["usize"]]]],[11,R[134],E,E,10,[[["self"],["b"],[R[203]],[T],["usize"]]]],[11,R[134],E,E,10,[[["self"],["b"],[R[212]],[T],["usize"]]]],[11,R[134],E,E,11,[[["self"],["b"],[R[203]],[T],["usize"]]]],[11,R[134],E,E,11,[[["self"],["b"],[R[212]],[T],["usize"]]]],[11,R[153],E,E,8,[[["self"],["o"],["o"]],[R[327]]]],[11,R[154],E,E,8,[[["self"],["o"],["o"]],[R[327]]]],[11,R[153],E,E,9,[[["self"],["o"],["o"]],[R[327]]]],[11,R[154],E,E,9,[[["self"],["o"],["o"]],[R[327]]]],[11,R[153],E,E,10,[[["self"],["o"],["o"]],[R[327]]]],[11,R[154],E,E,10,[[["self"],["o"],["o"]],[R[327]]]],[11,R[153],E,E,11,[[["self"],["o"],["o"]],[R[327]]]],[11,R[154],E,E,11,[[["self"],["o"],["o"]],[R[327]]]],[11,R[126],E,E,8,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[11,R[127],E,E,8,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[11,R[128],E,E,8,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[11,R[130],E,E,8,[[["self"],["b"],["usize"]]]],[11,R[129],E,E,8,[[["self"],["u32"],["u32"]]]],[11,R[126],E,E,9,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[11,R[127],E,E,9,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[11,R[128],E,E,9,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[11,R[130],E,E,9,[[["self"],["b"],["usize"]]]],[11,R[129],E,E,9,[[["self"],["u32"],["u32"]]]],[11,R[126],E,E,10,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[11,R[127],E,E,10,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[11,R[128],E,E,10,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[11,R[130],E,E,10,[[["self"],["b"],["usize"]]]],[11,R[129],E,E,10,[[["self"],["u32"],["u32"]]]],[11,R[126],E,E,11,[[["self"],["b"],[R[203]],[T],[T],["usize"]]]],[11,R[127],E,E,11,[[["self"],["b"],[R[38]],["u32"]],[R[327]]]],[11,R[128],E,E,11,[[["self"],["b"],["option",[R[38]]],["usize"],[T]],[R[327]]]],[11,R[130],E,E,11,[[["self"],["b"],["usize"]]]],[11,R[129],E,E,11,[[["self"],["u32"],["u32"]]]],[11,R[157],E,E,8,[[["self"],["b"],[T],[T]]]],[11,R[158],E,E,8,[[["self"],["b"],[T],[T]]]],[11,R[157],E,E,9,[[["self"],["b"],[T],[T]]]],[11,R[158],E,E,9,[[["self"],["b"],[T],[T]]]],[11,R[157],E,E,10,[[["self"],["b"],[T],[T]]]],[11,R[158],E,E,10,[[["self"],["b"],[T],[T]]]],[11,R[157],E,E,11,[[["self"],["b"],[T],[T]]]],[11,R[158],E,E,11,[[["self"],["b"],[T],[T]]]],[11,R[136],E,E,8,N],[11,R[137],E,E,8,N],[11,R[138],E,E,8,N],[11,R[139],E,E,8,N],[11,R[188],E,E,8,N],[11,R[136],E,E,9,N],[11,R[137],E,E,9,N],[11,R[138],E,E,9,N],[11,R[139],E,E,9,N],[11,R[188],E,E,9,N],[11,R[136],E,E,10,N],[11,R[137],E,E,10,N],[11,R[138],E,E,10,N],[11,R[139],E,E,10,N],[11,R[188],E,E,10,N],[11,R[136],E,E,11,N],[11,R[137],E,E,11,N],[11,R[138],E,E,11,N],[11,R[139],E,E,11,N],[11,R[188],E,E,11,N],[11,R[179],E,E,8,[[["self"]]]],[11,R[114],E,E,8,[[["self"]]]],[11,R[179],E,E,9,[[["self"]]]],[11,R[114],E,E,9,[[["self"]]]],[11,R[179],E,E,10,[[["self"]]]],[11,R[114],E,E,10,[[["self"]]]],[11,R[179],E,E,11,[[["self"]]]],[11,R[114],E,E,11,[[["self"]]]],[11,R[146],E,E,8,N],[11,"fft",E,E,8,N],[11,R[147],E,E,8,N],[11,R[146],E,E,9,N],[11,"fft",E,E,9,N],[11,R[147],E,E,9,N],[11,R[146],E,E,10,N],[11,"fft",E,E,10,N],[11,R[147],E,E,10,N],[11,R[146],E,E,11,N],[11,"fft",E,E,11,N],[11,R[147],E,E,11,N],[11,"abs",E,E,8,[[["self"]]]],[11,"abs",E,E,9,[[["self"]]]],[11,"abs",E,E,10,[[["self"]]]],[11,"abs",E,E,11,[[["self"]]]],[11,R[144],E,E,8,[[["self"],[R[31]]]]],[11,R[145],E,E,8,[[["self"],[R[31]]]]],[11,R[144],E,E,9,[[["self"],[R[31]]]]],[11,R[145],E,E,9,[[["self"],[R[31]]]]],[11,R[144],E,E,10,[[["self"],[R[31]]]]],[11,R[145],E,E,10,[[["self"],[R[31]]]]],[11,R[144],E,E,11,[[["self"],[R[31]]]]],[11,R[145],E,E,11,[[["self"],[R[31]]]]],[11,"sum",E,E,8,[[["self"]],["vec"]]],[11,"sum_sq",E,E,8,[[["self"]],["vec"]]],[11,"sum",E,E,9,N],[11,"sum_sq",E,E,9,N],[11,"sum",E,E,9,N],[11,"sum_sq",E,E,9,N],[11,"sum",E,E,9,N],[11,"sum_sq",E,E,9,N],[11,R[140],E,E,8,N],[11,R[141],E,E,8,N],[11,R[140],E,E,9,N],[11,R[141],E,E,9,N],[11,R[140],E,E,10,N],[11,R[141],E,E,10,N],[11,R[140],E,E,11,N],[11,R[141],E,E,11,N],[11,R[163],E,E,8,[[["self"],["usize"]],[R[326],["vec"]]]],[11,R[163],E,E,9,[[["self"],["usize"]],[R[326]]]],[11,R[163],E,E,10,[[["self"],["usize"]],[R[326]]]],[11,R[163],E,E,11,[[["self"],["usize"]],[R[326]]]],[11,R[148],E,E,8,[[["self"],["usize"]],[R[326],["vec"]]]],[11,R[148],E,E,9,[[["self"],["usize"]],[R[326]]]],[11,R[148],E,E,10,[[["self"],["usize"]],[R[326]]]],[11,R[148],E,E,11,[[["self"],["usize"]],[R[326]]]]],"p":[[8,"Matrix"],[8,R[384]],[8,R[303]],[8,R[304]],[8,R[299]],[8,R[301]],[8,R[302]],[8,R[300]],[3,R[320]],[3,R[321]],[3,R[322]],[3,R[323]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);