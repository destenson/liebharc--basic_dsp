var N=null,E="",T="t",U="u",searchIndex={};
var R=["Buffer borrow type for `SingleBuffer`.","Allows to create a lookup table with linear interpolation…","is_symmetric","Indicates whether this function is symmetric around 0 or…","Calculates the convolution for a data point","complex","Allows to inspect the generated lookup table","Gets the delta value which determines the resolution","table","delta","from_raw_parts","Creates a lookup table by putting the pieces together.","from_conv_function","Creates a lookup table from another convolution function.…","realimpulseresponse","realfrequencyresponse","compleximpulseresponse","complexfrequencyresponse","to_complex","Convert the lookup table into complex number space","complextimelineartablelookup","complexfrequencylineartablelookup","Convert the lookup table into real number space","realtimelineartablelookup","to_real","realfrequencylineartablelookup","Convert the lookup table into frequency domain","Convert the lookup table into a magnitude spectrum","Convert the lookup table into time domain","basic_dsp_vector","multicoresettings","Creates a new buffer which is ready to be passed around.","singlebuffer","A vector with real numbers in time domain.","A vector with real numbers in frequency domain.","A vector with complex numbers in time domain.","A vector with complex numbers in frequency domain.","A vector with no information about number space or domain…","voidresult","Conversion from a generic data type into a dsp vector with…","Type of the underlying storage of a vector.","Gets the underlying storage and the number of elements…","Create a new vector in real number space and time domain.…","complextimevec","errorreason","Create a new vector in real number space and frequency…","complexfreqvec","Conversion from a generic data type into a dsp vector…","Create a new generic vector. `delta` can be changed after…","datadomain","gendspvec","Create a new vector from the given meta data. The meta…","typemetadata","realtimevec","realfreqvec","Create a new vector in complex number space and time…","Create a new vector in complex number space and frequency…","Like `std::ops::Index` but with a different method name so…","Like `std::ops::IndexMut` but with a different method name…","The method for complex indexing","Operations to resize a data type.","Changes `self.len()`. If `self.is_complex()` is true then…","is_empty","alloc_len","Defines transformations from complex to real number space.","Gets the absolute value, magnitude or norm of all vector…","Gets the square root of the absolute value of all vector…","Gets all real elements. # Example","Gets all imag elements. # Example","Gets the phase of all elements in [rad]. # Example","Defines transformations from real to complex number space.","Operations on real types.","Defines all operations which are valid on `DataVecs`…","windowfunction","Performs a Fast Fourier Transformation transforming a time…","transres","Performs a Symmetric Fast Fourier Transformation under the…","Performs an Inverse Fast Fourier Transformation…","Performs a Symmetric Inverse Fast Fourier Transformation…","Convolves `self` with the convolution function…","Interpolates `self` with the convolution function…","Interpolates the signal in frequency domain by padding it…","Make `Other` a `Self` without performing any checks.","This trait allows to change a data type. The operations…","Specifies what the the result is if a type is transformed…","Calculates the principal value of the inverse hyperbolic…","A trait to insert zeros into the data at some specified…","Appends zeros add the end of the vector until the vector…","paddingoption","Interleaves zeros `factor - 1`times after every vector…","Calculates the delta of each elements to its previous…","An operation which multiplies each vector element with a…","Output","Operations which allow to iterate over the vector and to…","This trait offers operations to calculate statistics about…","statsvec","Calculates the statistics of the data contained in the…","Offers the same functionality as the `StatisticsOps` trait…","scalarresult","Calculates the sum of the squared data contained in the…","is_complex","See `to_complex` for some details.","borrow_mut","try_from","try_into","type_id","clone_into","to_owned","basic_dsp_vector::conv_types","basic_dsp_vector::meta","basic_dsp_vector::window_functions","basic_dsp_vector::numbers","sub_assign","formatter","from_str_radix","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","mul_assign","div_assign","add_assign","rem_assign","complex32","complex64","data_mut","rangefull","rangefrom","datac_mut","set_delta","get_multicore_settings","set_multicore_settings","get_meta_data","magnitude","magnitude_squared","magnitude_b","magnitude_squared_b","to_real_b","to_imag_b","get_magnitude","get_magnitude_squared","get_phase","get_real_imag","get_mag_phase","set_real_imag","set_mag_phase","multiply_complex_exponential","to_complex_b","ln_approx","exp_approx","sin_approx","cos_approx","log_approx","expf_approx","powf_approx","fft_shift","ifft_shift","apply_window","unapply_window","plain_fft","windowed_fft","plain_sfft","windowed_sfft","plain_ifft","windowed_ifft","plain_sifft","windowed_sifft","prepare_argument","prepare_argument_padded","correlate","convolve","convolve_signal","multiply_frequency_response","interpolatef","interpolatei","interpolate","decimatei","interpolate_lin","interpolate_hermite","rededicate_from","rededicate_from_force","rededicate_with_runtime_data","rededicate","add_smaller","sub_smaller","mul_smaller","div_smaller","swap_halves","zero_interleave","zero_pad_b","zero_interleave_b","split_into","diff_with_start","dot_product","dot_product_prec","map_inplace","map_aggregate","statistics","statistics_split","merge_cols","empty_vec","statistics_prec","statistics_split_prec","sum_sq_prec","sum_prec","add_prec","realorcomplex","timeorfreq","deref_mut","rangeto","index_mut","is_infinite","is_finite","is_normal","MultiCoreSettings","Statistics","ErrorReason","PaddingOption","DataDomain","RealImpulseResponse","RealFrequencyResponse","ComplexImpulseResponse","ComplexFrequencyResponse","RealTimeLinearTableLookup","RealFrequencyLinearTableLookup","ComplexTimeLinearTableLookup","ComplexFrequencyLinearTableLookup","RaisedCosineFunction","SincFunction","RealOrComplex","TimeOrFreq","FixedLenBuffer","SingleBuffer","WindowFunction","HammingWindow","ToSliceMut","ToDspVector","ToRealVector","ToComplexVector","FromVectorFloat","FromVector","InterleaveToVector","ToDspVectorPar","ToRealVectorPar","ToComplexVectorPar","FloatIndex","FloatIndexMut","ComplexIndex","ComplexIndexMut","ResizeOps","ResizeBufferedOps","GetMetaData","ComplexToRealTransformsOps","ComplexToRealTransformsOpsBuffered","ComplexToRealGetterOps","ComplexToRealSetterOps","ComplexOps","RealToComplexTransformsOps","RealToComplexTransformsOpsBuffered","ModuloOps","ApproximatedOps","FrequencyDomainOperations","TimeDomainOperations","TimeToFrequencyDomainOperations","SymmetricTimeToFrequencyDomainOperations","FrequencyToTimeDomainOperations","SymmetricFrequencyToTimeDomainOperations","CrossCorrelationArgumentOps","CrossCorrelationOps","Convolution","ConvolutionOps","FrequencyMultiplication","InterpolationOps","RealInterpolationOps","RededicateOps","RededicateForceOps","RededicateToOps","ToRealResult","ToComplexResult","ToTimeResult","ToFreqResult","ToRealTimeResult","OffsetOps","ElementaryOps","ElementaryWrapAroundOps","ReorganizeDataOps","InsertZerosOps","InsertZerosOpsBuffered","DiffSumOps","DotProductOps","PreciseDotProductOps","MapInplaceOps","MapAggregateOps","StatisticsOps","StatisticsSplitOps","PreciseStatisticsOps","PreciseStatisticsSplitOps","PreciseSumOps","PreciseStats","BufferBorrow","NumberSpace","FixedLenBufferBurrow","SingleBufferBurrow","NoBufferBurrow","TypeMetaData","NoTradeBufferBurrow","TriangularWindow","BlackmanHarrisWindow","RectangularWindow","RealTimeVec","RealFreqVec","ComplexTimeVec","ComplexFreqVec","GenDspVec","A matrix which can hold 1 to N vectors of 32 bit floating…","A matrix which can hold 1 to N vectors of 64 bit floating…","A matrix which can hold exactly 2 vectors of 32 bit…","A matrix which can hold exactly 2 vectors of 64 bit…","A matrix which can hold exactly 3 vectors of 32 bit…","A matrix which can hold exactly 3 vectors of 64 bit…","A matrix which can hold exactly 4 vectors of 64 bit…","A matrix which can hold exactly 4 vectors of 32 bit…","Conversion from a generic data type into a dsp matrix with…","row_points","rows_mut","interpft","matrixmxn","matrix2xn","matrix3xn","matrix4xn","get_real","get_imag","ToDspMatrix","ToRealTimeMatrix","ToRealFreqMatrix","ToComplexTimeMatrix","ToComplexFreqMatrix","FromMatrix","MatrixMxN","Matrix2xN","Matrix3xN","Matrix4xN","The x-axis delta. If `domain` is time domain then `delta`…","Sets the x-axis delta. If `domain` is time domain then…","to_imag","phase_b","reverse","cum_sum","basic_dsp","basic_dsp::conv_types","basic_dsp::meta","basic_dsp::window_functions","basic_dsp::numbers","basic_dsp::matrix","arrayvec","sincfunction","hammingwindow","A matrix which can hold 1 to N vectors.","A matrix which can hold exactly 2 vectors.","A matrix which can hold exactly 3 vectors.","A matrix which can hold exactly 4 vectors.","Matrix32xN","Matrix64xN","RealTimeMatrix32xN","RealTimeMatrix64xN","ComplexTimeMatrix32xN","ComplexTimeMatrix64xN","RealFreqMatrix32xN","RealFreqMatrix64xN","ComplexFreqMatrix32xN","ComplexFreqMatrix64xN","Matrix32x2","Matrix64x2","RealTimeMatrix32x2","RealTimeMatrix64x2","ComplexTimeMatrix32x2","ComplexTimeMatrix64x2","RealFreqMatrix32x2","RealFreqMatrix64x2","ComplexFreqMatrix32x2","ComplexFreqMatrix64x2","Matrix32x3","Matrix64x3","RealTimeMatrix32x3","RealTimeMatrix64x3","ComplexTimeMatrix32x3","ComplexTimeMatrix64x3","RealFreqMatrix32x3","RealFreqMatrix64x3","ComplexFreqMatrix32x3","ComplexFreqMatrix64x3","Matrix32x4","Matrix64x4","RealTimeMatrix32x4","RealTimeMatrix64x4","ComplexTimeMatrix32x4","ComplexTimeMatrix64x4","RealFreqMatrix32x4","RealFreqMatrix64x4","ComplexFreqMatrix32x4","ComplexFreqMatrix64x4","A trait for matrix types. In this lib a matrix is simply a…","row_len","The number of valid elements in each row of the matrix.…","The number of valid points in a row. If the matrix is…","col_len","The number of columns in the matrix.","Gets the rows as vectors.","Gets the rows as mutable vectors.","ToMatrix","Conversion from a collection of vectors to a matrix.","Create a new matrix from a collection of vectors.","Conversion from a generic data type into a dsp matrix…","to_gen_dsp_mat","Create a new generic matrix. `delta` can be changed after…","to_real_time_mat","Create a new matrix in real number space and time domain.…","to_real_freq_mat","to_complex_time_mat","Create a new matrix in complex number space and time…","to_complex_freq_mat","Create a new matrix in complex number space and frequency…","Retrieves the underlying storage from a matrix.","Type of the underlying storage of a matrix.","Gets the underlying matrix and the number of elements…","Holds parameters which specify how multiple cores are used…","core_limit","All operations will be limited to not create more threads…","med_dual_core_threshold","med_multi_core_threshold","large_dual_core_threshold","large_multi_core_threshold","A buffer which gets initalized with a data storage type…","A buffer which stores a single vector and never shrinks.","NoBuffer","This type can be used everytime the API asks for a buffer…","Buffer borrow type for `NoBuffer`.","Statistics about numeric data","Sum of all values","How many numbers have been considered for the stats","Average value","Root-mean-square or rms over all values.","The smallest value.","min_index","The index of the smallest value.","The largest value.","max_index","The index of the largest value.","A 1xN (one times N elements) or Nx1 data vector as used…","The underlying storage. `self.len()` should be called to…","Holds meta data about a type.","Buffer borrow type for `NoTradeBufferBurrow`.","Enumeration of all error reasons","InputMustHaveTheSameSize","The operations requires all inputs to have the same size,…","InputMetaDataMustAgree","The operations requires all inputs to have the same meta…","InputMustBeComplex","The operation requires the input to be complex.","InputMustBeReal","The operation requires the input to be real.","InputMustBeInTimeDomain","The operation requires the input to be in time domain.","InputMustBeInFrequencyDomain","The operation requires the input to be in frequency domain.","InvalidArgumentLength","The arguments have an invalid length to perform the…","InputMustBeConjSymmetric","The operations is only valid if the data input contains…","InputMustHaveAnOddLength","`self.points()` must be an odd number.","ArgumentFunctionMustBeSymmetric","The function passed as argument must be symmetric","InvalidNumberOfArgumentsForCombinedOp","The number of arguments passed into a combined operation…","InputMustNotBeEmpty","The operation isn't specified for an empty vector.","InputMustHaveAnEvenLength","Given input must have an even length.","TypeCanNotResize","The arguments would require that the type allocates larger…","An option which defines how a vector should be padded","Appends zeros to the end of the vector.","Surrounds the vector with zeros at the beginning and at…","Inserts zeros in the center of the vector","The domain of a data vector","Time domain, the x-axis is in [s].","Frequency","Frequency domain, the x-axis is in [Hz].","print_calibration","Prints debug information about the calibration. The…","conv_types","Types around a convolution, see also…","Raised cosine function according to…","Sinc function according to…","A convolution function in time domain and real number space","A convolution function in frequency domain and real number…","A convolution function in time domain and complex number…","A convolution function in frequency domain and complex…","Creates a raised cosine function.","Creates a sinc function.","Marker for types containing real data.","Marker for types containing complex data.","Marker for types containing real or complex data.","is_complex_current","Marker for types containing time data.","Marker for types containing frequency data.","Marker for types containing time or frequency data.","domain_current","default","Creates multi core settings with default values","single_threaded","Creates multi core settings so that no thread will be…","Creates multi core so that threads will be spawned if this…","Creates multi core settings with the given values.","with_thresholds","Creates multi core settings with explicit thresholds.","Creates a new buffer from a storage type. The buffer will…","fixedlenbuffer","with_capacity","convolve_mat","Convolves a vector of vectors (in this lib also considered…","is_erroneous","Indicates whether or not the operations on this vector…","window_functions","This mod contains a definition for window functions and…","A triangular window:…","A generalized Hamming window:…","A Blackman-Harris Window:…","A rectangular window:…","A window function for FFT windows. See…","Indicates whether this function is symmetric around the y…","Calculates a point of the window function. Callers will…","Creates a new Hamming window","Creates the default Hamming window as defined in GNU Octave.","Traits from the `num` crate which are used inside…","Complex","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","neg_infinity","Returns the negative infinite value.","Returns `-0.0`.","min_value","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","max_value","Returns the largest finite value that this type can…","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","Returns `true` if `self` is positive, including `+0.0`,…","is_sign_negative","Returns `true` if `self` is negative, including `-0.0`,…","Fused multiply-add. Computes `(self * a) + b` with only…","Take the reciprocal (inverse) of a number, `1/x`.","Raise a number to an integer power.","Raise a number to a floating point power.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","to_degrees","Converts radians to degrees.","to_radians","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Returns `true` if `self` is equal to the multiplicative…","DspNumber","A trait for a numeric value which at least supports a…","Associates a number type with a SIMD register type.","RegFallback","Type for the SIMD register on the CPU.","RegAvx512","Type for the SIMD register on the GPU. Defaults to an…","RealNumber","A real floating pointer number intended to abstract over…","This trait is necessary so that we can define zero for…","RealTimeVecSlice32","RealFreqVecSlice32","ComplexTimeVecSlice32","ComplexFreqVecSlice32","GenDspVecSlice32","RealTimeVecSlice64","RealFreqVecSlice64","ComplexTimeVecSlice64","ComplexFreqVecSlice64","GenDspVecSlice64","RealTimeVec32","RealFreqVec32","ComplexTimeVec32","ComplexFreqVec32","GenDspVec32","RealTimeVec64","RealFreqVec64","ComplexTimeVec64","ComplexFreqVec64","GenDspVec64","Alias for a vector of any statistical information.","Result for operations which transform a type (most…","VoidResult","Void/nothing in case of success or a reason in case of an…","ScalarResult","Scalar result or a reason in case of an error.","STATS_VEC_CAPACTIY","The maximum `len` for any of the `*split` methods.","A trait to convert a type into a slice.","Convert to a slice.","Length of a slice.","Indicates whether or not this storage type is empty.","Gets the allocated length of a storage. It's expected that…","try_resize","Resizes the storage to support at least `len` elements or…","A trait to convert a type into a mutable slice.","to_slice_mut","Convert to a mutable slice.","A trait for storage types which are known to have the…","Resize a storage type. Must work for any value of `len`,…","to_gen_dsp_vec","to_dsp_vec","to_real_time_vec","to_real_freq_vec","to_complex_time_vec","to_complex_freq_vec","Retrieves the underlying storage from a vector. Returned…","Retrieves the underlying storage from a vector.","Conversion from two instances of a generic data type into…","interleave_to_complex_time_vec","interleave_to_complex_freq_vec","to_gen_dsp_vec_par","to_dsp_vec_par","to_real_time_vec_par","to_real_freq_vec_par","to_complex_time_vec_par","to_complex_freq_vec_par","The method for float indexing. If the vector is real…","The method for real indexing","MetaData","A trait which provides information about number space and…","The domain in which the data vector resides. Basically…","Indicates whether the vector contains complex data. This…","resize_b","A trait for vector types.","The number of valid elements in the vector. This can be…","Indicates whether or not the vector is empty.","The number of valid points. If the vector is complex then…","Gets the multi core settings which determine how the work…","Sets the multi core settings which determine how the work…","Gets the number of allocated elements in the underlying…","Gets the meta data of a type. This can be used to create a…","Gets a copy of the vector meta data. This can be used to…","Defines getters to get real data from complex types.","Copies all real elements into the given vector. # Example","Copies all imag elements into the given vector. # Example","Copies the absolute value or magnitude of all vector…","Copies the absolute value squared or magnitude squared of…","Copies the phase of all elements in [rad] into the given…","Gets the real and imaginary parts and stores them in the…","Gets the magnitude and phase and stores them in the given…","Defines setters to create complex data from real data.","Overrides the `self` vectors data with the real and…","Overrides the `self` vectors data with the magnitude and…","Operations on complex types.","Multiplies each vector element with…","Calculates the complex conjugate of the vector. # Example","Converts the real vector into a complex vector.","Converts the real vector into a complex vector. The buffer…","Gets the absolute value of all vector elements. # Example","Each value in the vector is dividable by the divisor and…","This function corrects the jumps in the given vector which…","Recommended to be only used with the CPU feature flags…","Computes the principal value approximation of natural…","Calculates the natural exponential approximation for every…","Calculates the sine approximation of each element in…","Calculates the cosine approximation of each element in…","Calculates the approximated logarithm to the given base…","Calculates the approximated exponential to the given base…","Raises every vector element to approximately a floating…","This function mirrors the spectrum vector to transform a…","Swaps vector halves after a Fourier Transformation.","Swaps vector halves before an Inverse Fourier…","Applies a window to the data vector.","Removes a window from the data vector.","Applies a FFT window and performs a Fast Fourier…","This trait allows to transform an argument so that it can…","Prepares an argument to be used for convolution. Preparing…","Prepares an argument to be used for convolution. The…","Cross-correlation of data vectors. See also…","Calculates the correlation between `self` and `other`.…","Provides a convolution operations.","Provides a convolution operation for types which at some…","Provides a frequency response multiplication operations.","Multiplies `self` with the frequency response function…","Provides interpolation operations for real and complex…","Decimates or downsamples `self`. `decimatei` is the…","Provides interpolation operations which are only…","Piecewise cubic hermite interpolation between samples.","Linear interpolation between samples.","Make `Other` a `Self`. # Example","This trait allows to change a data type and performs the…","Converts `Self` inot `Other`.","RealResult","ComplexResult","TimeResult","FreqResult","RealTimeResult","ScaleOps","Multiplies the vector element with a scalar.","An operation which adds a constant to each vector element","Adds a scalar to each vector element.","Elementary algebra on types: addition, subtraction,…","Calculates the sum of `self + summand`. It consumes self…","Calculates the difference of `self - subtrahend`. It…","Calculates the product of `self * factor`. It consumes…","Calculates the quotient of `self / summand`. It consumes…","Elementary algebra on types where the argument might…","Calculates the sum of `self + summand`. `summand` may be…","Calculates the sum of `self - subtrahend`. `subtrahend`…","Calculates the sum of `self - factor`. `factor` may be…","Calculates the sum of `self - divisor`. `divisor` may be…","Trigonometry methods.","Calculates the sine of each element in radians.","Calculates the cosine of each element in radians.","Calculates the tangent of each element in radians.","Calculates the principal value of the inverse sine of each…","Calculates the principal value of the inverse cosine of…","Calculates the principal value of the inverse tangent of…","Calculates the hyperbolic sine each element in radians.","Calculates the hyperbolic cosine each element in radians.","Calculates the hyperbolic tangent each element in radians.","PowerOps","Roots, powers, exponentials and logarithms.","Gets the square root of all vector elements.","Squares all vector elements.","Calculates the n-th root of every vector element.","Raises every vector element to a floating point power.","Computes the principal value of natural logarithm of every…","Calculates the natural exponential for every vector element.","Calculates the logarithm to the given base for every…","Calculates the exponential to the given base for every…","This trait allows to reorganize the data by changing…","Reverses the data inside the vector.","This function swaps both halves of the vector. This…","zero_pad","SplitOps","Splits the data into several smaller pieces of equal size.","Splits the vector into several smaller vectors.…","MergeOps","Merges several pieces of equal size into one data chunk.","Merges several vectors into `self`. All vectors must have…","A trait to calculate the diff (1st derivative in a…","Calculates the cumulative sum of all elements. This…","Calculates the dot product of self and factor. Self and…","Calculates the dot product of self and factor using a more…","Transforms all vector elements using the function `map`.","Transforms all vector elements using the function `map`…","Calculates the statistics of the data.","Offers operations to calculate the sum or the sum of…","Calculates the sum of the data contained in the vector. #…","Operations on statistics.","Creates an empty statistics struct.","Creates a vector of empty statistics structs.","Creates a statistics struct which resembles an invalid…","Merges several statistics into one.","Merges several vectors of statistics into one vector.","Adds a new value to the statistics, all statistic fields…","Offers the same functionality as the `SumOps` trait but…","Calculates the sum of the data contained in the vector…","A trait for statistics which allows to add new values in a…","Adds a new values to the statistics using the Kahan…","A \"slice-like\" type which also allows to","Moves the content of this slice into `storage`. This…","A buffer which can be used by other types. Types will call…","The type of the burrow which is returned.","Asks the buffer for new storage of exactly size `len`. The…","Returns the allocated length of all storage within this…","Number space (real or complex) information.","For implementations which track meta data at runtime this…","See `to_complex` for more details.","Domain (time or frequency) information.","RealNumberSpace","Trait for types containing real data.","ComplexNumberSpace","Trait for types containing complex data.","TimeDomain","Trait for types containing time domain data.","FrequencyDomain","Trait for types containing frequency domain data.","Expresses at compile time that two classes could…","to_string","from_usize","from_isize","from_u128","from_i128","invalid","to_freq","to_time","clone_from","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","from_polar","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal"];
searchIndex["basic_dsp"]={"doc":E,"i":[[0,R[488],R[345],R[489],N,N],[8,R[216],R[346],R[492],N,N],[10,R[2],E,R[3],0,[[["self"]],["bool"]]],[10,"calc",E,R[4],0,[[["self"],[T]],[T]]],[8,R[217],E,R[493],N,N],[10,R[2],E,R[3],1,[[["self"]],["bool"]]],[10,"calc",E,R[4],1,[[["self"],[T]],[T]]],[8,R[218],E,R[494],N,N],[10,R[2],E,R[3],2,[[["self"]],["bool"]]],[10,"calc",E,R[4],2,[[["self"],[T]],[R[5]]]],[8,R[219],E,R[495],N,N],[10,R[2],E,R[3],3,[[["self"]],["bool"]]],[10,"calc",E,R[4],3,[[["self"],[T]],[R[5]]]],[3,R[220],E,R[1],N,N],[3,R[221],E,R[1],N,N],[3,R[222],E,R[1],N,N],[3,R[223],E,R[1],N,N],[3,R[224],E,R[490],N,N],[3,R[225],E,R[491],N,N],[0,"meta",R[345],E,N,N],[3,"Real",R[347],R[498],N,N],[3,R[533],E,R[499],N,N],[3,R[226],E,R[500],N,N],[12,R[501],E,E,4,N],[3,"Time",E,R[502],N,N],[3,"Freq",E,R[503],N,N],[3,R[227],E,R[504],N,N],[12,R[505],E,E,5,N],[0,R[521],R[345],R[522],N,N],[8,R[230],R[348],R[527],N,N],[10,R[2],E,R[528],6,[[["self"]],["bool"]]],[10,"window",E,R[529],6,[[["self"],["usize"]],[T]]],[3,R[303],E,R[523],N,N],[3,R[231],E,R[524],N,N],[3,R[304],E,R[525],N,N],[3,R[305],E,R[526],N,N],[0,"numbers",R[345],R[532],N,N],[8,R[611],R[349],R[612],N,N],[8,"ToSimd",E,R[613],N,N],[16,R[614],E,R[615],7,N],[16,"RegSse",E,E,7,N],[16,"RegAvx",E,E,7,N],[16,R[616],E,E,7,N],[16,"GpuReg",E,R[617],7,N],[8,R[618],E,R[619],N,N],[8,"Zero",E,R[620],N,N],[10,"zero",E,E,8,[[],["self"]]],[8,"One",E,R[608],N,N],[10,"one",E,R[609],9,[[],["self"]]],[11,"is_one",E,R[610],9,[[["self"]],["bool"]]],[8,"Float",E,R[537],N,N],[10,"nan",E,R[538],10,[[],["self"]]],[10,"infinity",E,R[539],10,[[],["self"]]],[10,R[540],E,R[541],10,[[],["self"]]],[10,"neg_zero",E,R[542],10,[[],["self"]]],[10,R[543],E,R[544],10,[[],["self"]]],[10,R[545],E,R[546],10,[[],["self"]]],[11,"epsilon",E,R[547],10,[[],["self"]]],[10,R[548],E,R[549],10,[[],["self"]]],[10,"is_nan",E,R[550],10,[[],["bool"]]],[10,R[208],E,R[551],10,[[],["bool"]]],[10,R[209],E,R[552],10,[[],["bool"]]],[10,R[210],E,R[553],10,[[],["bool"]]],[10,"classify",E,R[554],10,[[],[R[555]]]],[10,"floor",E,R[556],10,[[],["self"]]],[10,"ceil",E,R[557],10,[[],["self"]]],[10,"round",E,R[558],10,[[],["self"]]],[10,"trunc",E,R[559],10,[[],["self"]]],[10,"fract",E,R[560],10,[[],["self"]]],[10,"abs",E,R[561],10,[[],["self"]]],[10,"signum",E,R[562],10,[[],["self"]]],[10,R[563],E,R[564],10,[[],["bool"]]],[10,R[565],E,R[566],10,[[],["bool"]]],[10,"mul_add",E,R[567],10,[[],["self"]]],[10,"recip",E,R[568],10,[[],["self"]]],[10,"powi",E,R[569],10,[[["i32"]],["self"]]],[10,"powf",E,R[570],10,[[],["self"]]],[10,"sqrt",E,R[571],10,[[],["self"]]],[10,"exp",E,R[572],10,[[],["self"]]],[10,"exp2",E,R[573],10,[[],["self"]]],[10,"ln",E,R[574],10,[[],["self"]]],[10,"log",E,R[575],10,[[],["self"]]],[10,"log2",E,R[576],10,[[],["self"]]],[10,"log10",E,R[577],10,[[],["self"]]],[11,R[578],E,R[579],10,[[],["self"]]],[11,R[580],E,R[581],10,[[],["self"]]],[10,"max",E,R[582],10,[[],["self"]]],[10,"min",E,R[583],10,[[],["self"]]],[10,"abs_sub",E,R[584],10,[[],["self"]]],[10,"cbrt",E,R[585],10,[[],["self"]]],[10,"hypot",E,R[586],10,[[],["self"]]],[10,"sin",E,R[587],10,[[],["self"]]],[10,"cos",E,R[588],10,[[],["self"]]],[10,"tan",E,R[589],10,[[],["self"]]],[10,"asin",E,R[590],10,[[],["self"]]],[10,"acos",E,R[591],10,[[],["self"]]],[10,"atan",E,R[592],10,[[],["self"]]],[10,"atan2",E,R[593],10,[[],["self"]]],[10,"sin_cos",E,R[594],10,[[]]],[10,"exp_m1",E,R[595],10,[[],["self"]]],[10,"ln_1p",E,R[596],10,[[],["self"]]],[10,"sinh",E,R[597],10,[[],["self"]]],[10,"cosh",E,R[598],10,[[],["self"]]],[10,"tanh",E,R[599],10,[[],["self"]]],[10,"asinh",E,R[600],10,[[],["self"]]],[10,"acosh",E,R[601],10,[[],["self"]]],[10,"atanh",E,R[602],10,[[],["self"]]],[10,R[603],E,R[604],10,[[]]],[3,R[533],E,R[534],N,N],[12,"re",E,R[535],11,N],[12,"im",E,R[536],11,N],[8,"Num",E,R[605],N,N],[16,R[606],E,E,12,N],[10,R[114],E,R[607],12,[[["str"],["u32"]],["result"]]],[8,R[270],R[345],R[738],N,N],[10,R[175],E,R[739],13,[[["self"],["b"],[T]]]],[10,R[174],E,R[740],13,[[["self"],["b"],[T]]]],[8,R[234],E,R[39],N,N],[10,R[663],E,R[42],14,[[],[["time"],["real"],["dspvec",["real","time"]]]]],[10,R[664],E,R[45],14,[[],[["dspvec",["real","freq"]],["real"],["freq"]]]],[8,R[272],E,R[742],N,N],[10,R[177],E,R[82],15,[[["other"]],["self"]]],[10,R[178],E,R[82],15,[[[R[49]],["other"],["bool"]],["self"]]],[8,"PosEq",E,R[831],N,N],[3,R[229],E,R[430],N,N],[6,R[636],E,R[33],N,N],[8,"Domain",E,R[822],N,N],[10,"domain",E,E,16,[[["self"]],[R[49]]]],[10,R[838],E,R[101],16,[[["self"]]]],[10,R[839],E,R[101],16,[[["self"]]]],[3,"DspVec",E,R[445],N,N],[12,"data",E,R[446],17,N],[6,R[640],E,R[37],N,N],[8,R[289],E,R[93],N,N],[16,R[92],E,E,18,N],[10,R[193],E,R[798],18,[[["a"],["fmap"],["faggr"],["self"]]]],[6,R[631],E,R[33],N,N],[6,R[627],E,R[34],N,N],[8,R[282],E,R[783],N,N],[10,R[343],E,R[784],19,[[["self"]]]],[10,R[184],E,R[785],19,[[["self"]]]],[8,R[239],E,R[47],N,N],[10,R[672],E,R[48],20,[[[R[49]],["bool"]],[[R[204]],["dspvec",[R[203],R[204]]],[R[203]]]]],[10,R[673],E,R[51],20,[[[R[52]]],["dspvec"]]],[8,"SumOps",E,R[800],N,N],[10,"sum",E,R[801],21,[[["self"]],[T]]],[10,"sum_sq",E,R[99],21,[[["self"]],[T]]],[8,R[259],E,R[72],N,N],[10,R[154],E,R[724],22,[[[R[73]],["self"]]]],[10,R[155],E,R[725],22,[[[R[73]],["self"]]]],[6,R[639],E,R[36],N,N],[8,R[238],E,R[669],N,N],[10,R[670],E,R[42],23,[[["self"]],[[R[44]],["dspvec",["vec",R[5],"time"]],["result",["dspvec",R[44]]]]]],[10,R[671],E,R[45],23,[[["self"]],[["result",["dspvec",R[44]]],["dspvec",["vec",R[5],"freq"]],[R[44]]]]],[6,R[623],E,R[35],N,N],[6,R[630],E,R[37],N,N],[8,R[237],E,R[668],N,N],[16,R[92],E,R[40],24,N],[10,"get",E,R[41],24,[[]]],[6,R[634],E,R[36],N,N],[8,R[252],E,R[702],N,N],[10,R[141],E,R[703],25,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,R[142],E,R[704],25,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[8,R[255],E,R[70],N,N],[10,R[144],E,R[709],26,[[["b"]]]],[8,R[787],E,R[788],N,N],[10,R[188],E,R[789],27,[[["self"]],[["result",[R[44]]],[R[44]]]]],[8,R[291],E,R[94],N,N],[16,"Result",E,E,28,N],[10,R[195],E,R[96],28,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[8,R[294],E,R[809],N,N],[10,R[201],E,R[810],29,[[["self"]],[T]]],[10,R[200],E,R[99],29,[[["self"]],[T]]],[6,R[622],E,R[34],N,N],[8,R[290],E,R[94],N,N],[16,"Result",E,E,30,N],[10,R[194],E,R[799],30,[[["self"]]]],[3,R[300],E,R[433],N,N],[8,R[293],E,R[97],N,N],[16,"Result",E,E,31,N],[10,R[199],E,R[96],31,[[["self"],["usize"]],[[R[44]],["result",[R[44]]]]]],[3,R[299],E,R[0],N,N],[6,R[626],E,R[33],N,N],[8,R[249],E,R[64],N,N],[10,R[130],E,R[65],32,[[]]],[10,R[131],E,R[66],32,[[]]],[10,R[24],E,R[67],32,[[]]],[10,R[341],E,R[68],32,[[]]],[10,"phase",E,R[69],32,[[]]],[4,R[213],E,R[449],N,N],[13,R[450],E,R[451],33,N],[13,R[452],E,R[453],33,N],[13,R[454],E,R[455],33,N],[13,R[456],E,R[457],33,N],[13,R[458],E,R[459],33,N],[13,R[460],E,R[461],33,N],[13,R[462],E,R[463],33,N],[13,R[464],E,R[465],33,N],[13,R[466],E,R[467],33,N],[13,R[468],E,R[469],33,N],[13,R[470],E,R[471],33,N],[13,R[472],E,R[473],33,N],[13,R[474],E,R[475],33,N],[13,R[476],E,R[477],33,N],[4,R[214],E,R[478],N,N],[13,"End",E,R[479],34,N],[13,"Surround",E,R[480],34,N],[13,"Center",E,R[481],34,N],[3,R[298],E,R[0],N,N],[8,R[261],E,R[72],N,N],[10,R[158],E,R[76],35,[[["b"]],["result"]]],[10,"sfft",E,R[76],35,[[["b"]],["result"]]],[10,R[159],E,R[76],35,[[[R[73]],["b"]],["result"]]],[8,R[242],E,R[57],N,N],[16,R[92],E,E,36,N],[10,"data",E,R[678],36,[[["idx"],["self"]]]],[8,R[269],E,R[736],N,N],[10,R[170],E,R[80],37,[[[R[14]],["b"],["usize"],["self"],[T]]]],[10,R[171],E,R[80],37,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[10,R[172],E,R[81],37,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[10,R[322],E,R[81],37,[[["self"],["b"],["usize"]]]],[10,R[173],E,R[737],37,[[["self"],["u32"]]]],[8,R[262],E,R[72],N,N],[10,R[160],E,R[77],38,[[["b"]]]],[10,"ifft",E,R[77],38,[[["b"]]]],[10,R[161],E,R[77],38,[[[R[73]],["b"]]]],[6,R[625],E,R[37],N,N],[8,R[292],E,R[97],N,N],[16,"Result",E,E,39,N],[10,R[198],E,R[96],39,[[["self"]]]],[3,R[302],E,R[448],N,N],[8,R[263],E,R[72],N,N],[10,R[162],E,R[78],40,[[["b"]],["result"]]],[10,"sifft",E,R[78],40,[[["b"]],["result"]]],[10,R[163],E,R[78],40,[[[R[73]],["b"]],["result"]]],[6,R[633],E,R[35],N,N],[8,R[283],E,R[86],N,N],[10,R[786],E,R[87],41,[[[R[88]],["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[10,R[185],E,R[89],41,[[["self"],["u32"]],[["result",[R[44]]],[R[44]]]]],[8,R[265],E,R[730],N,N],[10,R[166],E,R[731],42,[[["self"],["b"],["a"]],[["result",[R[44]]],[R[44]]]]],[8,R[281],E,R[758],N,N],[10,R[180],E,R[759],43,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,R[181],E,R[760],43,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,R[182],E,R[761],43,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,R[183],E,R[762],43,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[8,R[251],E,R[694],N,N],[10,R[327],E,R[695],44,[[["a"],["self"]]]],[10,R[328],E,R[696],44,[[["a"],["self"]]]],[10,R[136],E,R[697],44,[[["a"],["self"]]]],[10,R[137],E,R[698],44,[[["a"],["self"]]]],[10,R[138],E,R[699],44,[[["a"],["self"]]]],[10,R[139],E,R[700],44,[[["a"],["self"]]]],[10,R[140],E,R[701],44,[[["a"],["self"]]]],[8,R[256],E,R[71],N,N],[10,"wrap",E,R[711],45,[[["self"],[T]]]],[10,"unwrap",E,R[712],45,[[["self"],[T]]]],[8,"Resize",E,R[659],N,N],[10,"resize",E,R[660],46,[[["self"],["usize"]]]],[8,R[280],E,R[753],N,N],[10,"add",E,R[754],47,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,"sub",E,R[755],47,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,"mul",E,R[756],47,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[10,"div",E,R[757],47,[[["self"],["a"]],[["result",[R[44]]],[R[44]]]]],[8,R[823],E,R[824],N,N],[8,"Vector",E,R[685],N,N],[10,R[9],E,R[339],48,[[["self"]],[T]]],[10,R[126],E,R[340],48,[[["self"],[T]]]],[10,"len",E,R[686],48,[[["self"]],["usize"]]],[10,R[62],E,R[687],48,[[["self"]],["bool"]]],[10,"points",E,R[688],48,[[["self"]],["usize"]]],[10,R[127],E,R[689],48,[[["self"]],[R[30]]]],[10,R[128],E,R[690],48,[[[R[30]],["self"]]]],[10,R[63],E,R[691],48,[[["self"]],["usize"]]],[6,R[629],E,R[36],N,N],[8,R[829],E,R[830],N,N],[8,R[827],E,R[828],N,N],[8,R[285],E,R[793],N,N],[10,"diff",E,R[90],49,[[["self"]]]],[10,R[189],E,R[90],49,[[["self"]]]],[10,R[344],E,R[794],49,[[["self"]]]],[8,R[233],E,R[47],N,N],[10,R[661],E,R[48],50,[[[R[49]],["bool"]],[[R[204]],["dspvec",[R[203],R[204]]],[R[203]]]]],[10,R[662],E,R[51],50,[[[R[52]]],["dspvec"]]],[6,R[308],E,R[35],N,N],[8,R[253],E,R[705],N,N],[10,R[143],E,R[706],51,[[["self"],[T]]]],[10,"conj",E,R[707],51,[[["self"]]]],[8,R[236],E,R[667],N,N],[16,R[92],E,R[40],52,N],[10,"getf",E,R[41],52,[[]]],[6,R[632],E,R[34],N,N],[8,R[286],E,R[91],N,N],[16,R[92],E,E,53,N],[10,R[190],E,R[795],53,[[["self"],["a"]]]],[8,R[241],E,R[39],N,N],[10,R[676],E,R[55],54,[[],[["time"],["dspvec",[R[5],"time"]],[R[5]]]]],[10,R[677],E,R[56],54,[[],[["freq"],[R[5]],["dspvec",[R[5],"freq"]]]]],[8,R[250],E,R[64],N,N],[10,R[132],E,R[65],55,[[["b"]]]],[10,R[133],E,R[66],55,[[["b"]]]],[10,R[134],E,R[67],55,[[["b"]]]],[10,R[135],E,R[68],55,[[["b"]]]],[10,R[342],E,R[69],55,[[["b"]]]],[8,"TrigOps",E,R[763],N,N],[10,"sin",E,R[764],56,[[["self"]]]],[10,"cos",E,R[765],56,[[["self"]]]],[10,"tan",E,R[766],56,[[["self"]]]],[10,"asin",E,R[767],56,[[["self"]]]],[10,"acos",E,R[768],56,[[["self"]]]],[10,"atan",E,R[769],56,[[["self"]]]],[10,"sinh",E,R[770],56,[[["self"]]]],[10,"cosh",E,R[771],56,[[["self"]]]],[10,"tanh",E,R[772],56,[[["self"]]]],[10,"asinh",E,R[85],56,[[["self"]]]],[10,"acosh",E,R[85],56,[[["self"]]]],[10,"atanh",E,R[85],56,[[["self"]]]],[8,R[278],E,R[84],N,N],[16,R[748],E,E,57,N],[8,R[258],E,R[72],N,N],[10,"mirror",E,R[721],58,[[["self"],["b"]]]],[10,R[152],E,R[722],58,[[["self"]]]],[10,R[153],E,R[723],58,[[["self"]]]],[3,R[211],E,R[422],N,N],[12,R[423],E,R[424],59,N],[12,R[425],E,E,59,N],[12,R[426],E,E,59,N],[12,R[427],E,E,59,N],[12,R[428],E,E,59,N],[8,"Buffer",E,R[815],N,N],[16,"Borrow",E,R[816],60,N],[10,"borrow",E,R[817],60,[[["self"],["usize"]]]],[10,R[63],E,R[818],60,[[["self"]],["usize"]]],[6,R[628],E,R[35],N,N],[8,R[260],E,R[72],N,N],[10,R[156],E,R[74],61,[[["b"]]]],[10,"fft",E,R[74],61,[[["b"]]]],[10,R[157],E,R[726],61,[[[R[73]],["b"]]]],[8,R[273],E,R[83],N,N],[10,R[179],E,R[743],62,[[],["other"]]],[8,R[288],E,R[93],N,N],[10,R[192],E,R[797],63,[[["a"],["self"],["f"]]]],[8,R[279],E,R[751],N,N],[10,"offset",E,R[752],64,[[["self"],[T]]]],[8,R[245],E,R[58],N,N],[10,R[125],E,R[59],65,[[["self"],["idx"]]]],[3,R[212],E,R[434],N,N],[12,"sum",E,R[435],66,N],[12,"count",E,R[436],66,N],[12,"average",E,R[437],66,N],[12,"rms",E,R[438],66,N],[12,"min",E,R[439],66,N],[12,R[440],E,R[441],66,N],[12,"max",E,R[442],66,N],[12,R[443],E,R[444],66,N],[8,R[749],E,R[91],N,N],[10,"scale",E,R[750],67,[[["self"],[T]]]],[5,R[486],E,R[487],N,[[],["string"]]],[6,R[306],E,R[33],N,N],[8,R[244],E,R[57],N,N],[16,R[92],E,E,68,N],[10,"datac",E,R[59],68,[[["idx"],["self"]]]],[6,R[309],E,R[36],N,N],[8,R[276],E,R[84],N,N],[16,R[746],E,R[84],69,N],[3,R[301],E,R[447],N,N],[6,R[635],E,R[37],N,N],[8,R[275],E,R[84],N,N],[16,R[745],E,E,70,N],[8,R[287],E,R[91],N,N],[16,R[92],E,E,71,N],[10,R[191],E,R[796],71,[[["self"],["a"]]]],[8,R[773],E,R[774],N,N],[10,"sqrt",E,R[775],72,[[["self"]]]],[10,"square",E,R[776],72,[[["self"]]]],[10,"root",E,R[777],72,[[["self"],[T]]]],[10,"powf",E,R[778],72,[[["self"],[T]]]],[10,"ln",E,R[779],72,[[["self"]]]],[10,"exp",E,R[780],72,[[["self"]]]],[10,"log",E,R[781],72,[[["self"],[T]]]],[10,"expf",E,R[782],72,[[["self"],[T]]]],[8,R[248],E,R[692],N,N],[10,R[129],E,R[693],73,[[["self"]],[R[52]]]],[6,R[645],E,R[646],N,N],[8,R[243],E,R[58],N,N],[10,R[122],E,R[679],74,[[["self"],["idx"]]]],[8,R[268],E,R[734],N,N],[10,R[169],E,R[735],75,[[["c"],["self"],[T]]]],[8,"ToSlice",E,R[649],N,N],[10,"to_slice",E,R[650],76,[[["self"]]]],[10,"len",E,R[651],76,[[["self"]],["usize"]]],[10,R[62],E,R[652],76,[[["self"]],["bool"]]],[10,R[63],E,R[653],76,[[["self"]],["usize"]]],[10,R[654],E,R[655],76,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[8,"Stats",E,R[802],N,N],[10,"empty",E,R[803],77,[[],["self"]]],[10,R[197],E,R[804],77,[[["usize"]],[R[351]]]],[10,R[837],E,R[805],77,[[],["self"]]],[10,"merge",E,R[806],77,[[],["self"]]],[10,R[196],E,R[807],77,[[],[R[351]]]],[10,"add",E,R[808],77,[[["self"],[T],["usize"]]]],[6,R[638],E,R[35],N,N],[8,R[246],E,R[60],N,N],[10,"resize",E,R[61],78,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[8,R[825],E,R[826],N,N],[6,R[307],E,R[34],N,N],[8,R[284],E,R[86],N,N],[10,R[186],E,R[87],79,[[["b"],["usize"],[R[88]],["self"]],[["result",[R[44]]],[R[44]]]]],[10,R[187],E,R[89],79,[[["self"],["b"],["u32"]]]],[8,R[247],E,R[60],N,N],[10,R[684],E,R[61],80,[[["self"],["b"],["usize"]],[["result",[R[44]]],[R[44]]]]],[8,R[240],E,R[39],N,N],[10,R[674],E,R[42],81,[[],[["time"],["real"],["dspvec",["real","time"]]]]],[10,R[675],E,R[45],81,[[],[["dspvec",["real","freq"]],["real"],["freq"]]]],[8,R[254],E,R[70],N,N],[10,R[18],E,R[708],82,[[],["result"]]],[4,R[215],E,R[482],N,N],[13,"Time",E,R[483],83,N],[13,R[484],E,R[485],83,N],[8,R[266],E,R[732],N,N],[10,R[167],E,R[79],84,[[["b"],["usize"],["c"],["self"],[T]]]],[17,R[647],E,R[648],N,N],[8,R[257],E,R[713],N,N],[10,R[145],E,R[714],85,[[["self"]]]],[10,R[146],E,R[715],85,[[["self"]]]],[10,R[147],E,R[716],85,[[["self"]]]],[10,R[148],E,R[717],85,[[["self"]]]],[10,R[149],E,R[718],85,[[["self"],[T]]]],[10,R[150],E,R[719],85,[[["self"],[T]]]],[10,R[151],E,R[720],85,[[["self"],[T]]]],[8,R[264],E,R[727],N,N],[10,R[164],E,R[728],86,[[["b"]]]],[10,R[165],E,R[729],86,[[["b"]]]],[6,R[621],E,R[33],N,N],[3,R[228],E,R[429],N,N],[8,R[295],E,R[811],N,N],[10,R[202],E,R[812],87,[[["usize"],[T],["self"],[T]]]],[6,R[310],E,R[37],N,N],[6,"TransRes",E,R[642],N,N],[8,R[297],E,R[819],N,N],[10,R[100],E,E,88,[[["self"]],["bool"]]],[10,R[18],E,R[820],88,[[["self"]]]],[10,R[24],E,R[821],88,[[["self"]]]],[8,R[296],E,R[813],N,N],[10,"trade",E,R[814],89,[[["s"]]]],[8,R[274],E,R[84],N,N],[16,R[744],E,E,90,N],[8,R[790],E,R[791],N,N],[10,"merge",E,R[792],91,[[["self"]],[["result",[R[44]]],[R[44]]]]],[8,R[680],E,R[681],N,N],[10,"domain",E,R[682],92,[[["self"]],[R[49]]]],[10,R[100],E,R[683],92,[[["self"]],["bool"]]],[6,R[637],E,R[34],N,N],[8,R[232],E,R[656],N,N],[10,R[657],E,R[658],93,[[["self"]]]],[6,R[643],E,R[644],N,N],[8,R[235],E,R[39],N,N],[10,R[665],E,R[55],94,[[],[["time"],["dspvec",[R[5],"time"]],[R[5]]]]],[10,R[666],E,R[56],94,[[],[["freq"],[R[5]],["dspvec",[R[5],"freq"]]]]],[3,R[431],E,R[432],N,N],[6,"StatsVec",E,R[641],N,N],[8,R[271],E,R[83],N,N],[10,R[176],E,R[741],95,[[["other"]],["self"]]],[6,R[624],E,R[36],N,N],[8,"RealOps",E,R[71],N,N],[10,"abs",E,R[710],96,[[["self"]]]],[8,R[267],E,R[733],N,N],[10,R[168],E,R[79],97,[[["self"],["b"],["a"]],[["result",[R[44]]],[R[44]]]]],[8,R[277],E,R[84],N,N],[16,R[747],E,E,98,N],[0,"matrix",E,E,N,N],[3,R[335],R[350],R[354],N,N],[3,R[336],E,R[355],N,N],[3,R[337],E,R[356],N,N],[3,R[338],E,R[357],N,N],[6,R[358],E,R[311],N,N],[6,R[359],E,R[312],N,N],[6,R[360],E,R[311],N,N],[6,R[361],E,R[312],N,N],[6,R[362],E,R[311],N,N],[6,R[363],E,R[312],N,N],[6,R[364],E,R[311],N,N],[6,R[365],E,R[312],N,N],[6,R[366],E,R[311],N,N],[6,R[367],E,R[312],N,N],[6,R[368],E,R[313],N,N],[6,R[369],E,R[314],N,N],[6,R[370],E,R[313],N,N],[6,R[371],E,R[314],N,N],[6,R[372],E,R[313],N,N],[6,R[373],E,R[314],N,N],[6,R[374],E,R[313],N,N],[6,R[375],E,R[314],N,N],[6,R[376],E,R[313],N,N],[6,R[377],E,R[314],N,N],[6,R[378],E,R[315],N,N],[6,R[379],E,R[316],N,N],[6,R[380],E,R[315],N,N],[6,R[381],E,R[316],N,N],[6,R[382],E,R[315],N,N],[6,R[383],E,R[316],N,N],[6,R[384],E,R[315],N,N],[6,R[385],E,R[317],N,N],[6,R[386],E,R[318],N,N],[6,R[387],E,R[317],N,N],[6,R[388],E,R[318],N,N],[6,R[389],E,R[317],N,N],[6,R[390],E,R[318],N,N],[6,R[391],E,R[317],N,N],[6,R[392],E,R[318],N,N],[6,R[393],E,R[317],N,N],[6,R[394],E,R[318],N,N],[6,R[395],E,R[317],N,N],[6,R[396],E,R[318],N,N],[6,R[397],E,R[317],N,N],[8,"Matrix",E,R[398],N,N],[10,R[9],E,R[339],99,[[["self"]],[T]]],[10,R[126],E,R[340],99,[[["self"],[T]]]],[10,R[399],E,R[400],99,[[["self"]],["usize"]]],[10,R[320],E,R[401],99,[[["self"]],["usize"]]],[10,R[402],E,R[403],99,[[["self"]],["usize"]]],[10,"rows",E,R[404],99,[[["self"]]]],[10,R[321],E,R[405],99,[[["self"]]]],[8,R[332],E,R[39],N,N],[16,R[92],E,E,100,N],[10,R[415],E,R[416],100,[[]]],[8,R[333],E,R[39],N,N],[16,R[92],E,E,101,N],[10,R[417],E,R[418],101,[[]]],[8,R[334],E,R[419],N,N],[16,R[92],E,R[420],102,N],[10,"get",E,R[421],102,[[]]],[8,R[406],E,R[407],N,N],[16,R[92],E,E,103,N],[10,"to_mat",E,R[408],103,[[]]],[8,R[329],E,R[409],N,N],[16,R[92],E,E,104,N],[10,R[410],E,R[411],104,[[[R[49]],["bool"]]]],[8,R[330],E,R[319],N,N],[16,R[92],E,E,105,N],[10,R[412],E,R[413],105,[[]]],[8,R[331],E,R[319],N,N],[16,R[92],E,E,106,N],[10,R[414],E,R[45],106,[[]]],[11,"into",R[346],E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[103],E,E,107,[[[U]],["result"]]],[11,R[104],E,E,107,[[],["result"]]],[11,"borrow",E,E,107,[[["self"]],[T]]],[11,R[102],E,E,107,[[["self"]],[T]]],[11,R[105],E,E,107,[[["self"]],["typeid"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[103],E,E,108,[[[U]],["result"]]],[11,R[104],E,E,108,[[],["result"]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[102],E,E,108,[[["self"]],[T]]],[11,R[105],E,E,108,[[["self"]],["typeid"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[103],E,E,109,[[[U]],["result"]]],[11,R[104],E,E,109,[[],["result"]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[102],E,E,109,[[["self"]],[T]]],[11,R[105],E,E,109,[[["self"]],["typeid"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[103],E,E,110,[[[U]],["result"]]],[11,R[104],E,E,110,[[],["result"]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[102],E,E,110,[[["self"]],[T]]],[11,R[105],E,E,110,[[["self"]],["typeid"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[103],E,E,111,[[[U]],["result"]]],[11,R[104],E,E,111,[[],["result"]]],[11,"borrow",E,E,111,[[["self"]],[T]]],[11,R[102],E,E,111,[[["self"]],[T]]],[11,R[105],E,E,111,[[["self"]],["typeid"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[103],E,E,112,[[[U]],["result"]]],[11,R[104],E,E,112,[[],["result"]]],[11,"borrow",E,E,112,[[["self"]],[T]]],[11,R[102],E,E,112,[[["self"]],[T]]],[11,R[105],E,E,112,[[["self"]],["typeid"]]],[11,"into",R[347],E,113,[[],[U]]],[11,R[107],E,E,113,[[["self"]],[T]]],[11,R[106],E,E,113,[[["self"],[T]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[103],E,E,113,[[[U]],["result"]]],[11,R[104],E,E,113,[[],["result"]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,R[102],E,E,113,[[["self"]],[T]]],[11,R[105],E,E,113,[[["self"]],["typeid"]]],[11,"into",E,E,114,[[],[U]]],[11,R[107],E,E,114,[[["self"]],[T]]],[11,R[106],E,E,114,[[["self"],[T]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[103],E,E,114,[[[U]],["result"]]],[11,R[104],E,E,114,[[],["result"]]],[11,"borrow",E,E,114,[[["self"]],[T]]],[11,R[102],E,E,114,[[["self"]],[T]]],[11,R[105],E,E,114,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,R[107],E,E,4,[[["self"]],[T]]],[11,R[106],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[103],E,E,4,[[[U]],["result"]]],[11,R[104],E,E,4,[[],["result"]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[102],E,E,4,[[["self"]],[T]]],[11,R[105],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,115,[[],[U]]],[11,R[107],E,E,115,[[["self"]],[T]]],[11,R[106],E,E,115,[[["self"],[T]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[103],E,E,115,[[[U]],["result"]]],[11,R[104],E,E,115,[[],["result"]]],[11,"borrow",E,E,115,[[["self"]],[T]]],[11,R[102],E,E,115,[[["self"]],[T]]],[11,R[105],E,E,115,[[["self"]],["typeid"]]],[11,"into",E,E,116,[[],[U]]],[11,R[107],E,E,116,[[["self"]],[T]]],[11,R[106],E,E,116,[[["self"],[T]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[103],E,E,116,[[[U]],["result"]]],[11,R[104],E,E,116,[[],["result"]]],[11,"borrow",E,E,116,[[["self"]],[T]]],[11,R[102],E,E,116,[[["self"]],[T]]],[11,R[105],E,E,116,[[["self"]],["typeid"]]],[11,"into",E,E,5,[[],[U]]],[11,R[107],E,E,5,[[["self"]],[T]]],[11,R[106],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[103],E,E,5,[[[U]],["result"]]],[11,R[104],E,E,5,[[],["result"]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[102],E,E,5,[[["self"]],[T]]],[11,R[105],E,E,5,[[["self"]],["typeid"]]],[11,"into",R[348],E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[103],E,E,117,[[[U]],["result"]]],[11,R[104],E,E,117,[[],["result"]]],[11,"borrow",E,E,117,[[["self"]],[T]]],[11,R[102],E,E,117,[[["self"]],[T]]],[11,R[105],E,E,117,[[["self"]],["typeid"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[103],E,E,118,[[[U]],["result"]]],[11,R[104],E,E,118,[[],["result"]]],[11,"borrow",E,E,118,[[["self"]],[T]]],[11,R[102],E,E,118,[[["self"]],[T]]],[11,R[105],E,E,118,[[["self"]],["typeid"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[103],E,E,119,[[[U]],["result"]]],[11,R[104],E,E,119,[[],["result"]]],[11,"borrow",E,E,119,[[["self"]],[T]]],[11,R[102],E,E,119,[[["self"]],[T]]],[11,R[105],E,E,119,[[["self"]],["typeid"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[103],E,E,120,[[[U]],["result"]]],[11,R[104],E,E,120,[[],["result"]]],[11,"borrow",E,E,120,[[["self"]],[T]]],[11,R[102],E,E,120,[[["self"]],[T]]],[11,R[105],E,E,120,[[["self"]],["typeid"]]],[11,"into",R[349],E,11,[[],[U]]],[11,R[832],E,E,11,[[["self"]],["string"]]],[11,R[107],E,E,11,[[["self"]],[T]]],[11,R[106],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[[U]],["result"]]],[11,R[104],E,E,11,[[],["result"]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[102],E,E,11,[[["self"]],[T]]],[11,R[105],E,E,11,[[["self"]],["typeid"]]],[11,"zero",E,E,11,[[],[T]]],[11,"into",R[345],E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[103],E,E,121,[[[U]],["result"]]],[11,R[104],E,E,121,[[],["result"]]],[11,"borrow",E,E,121,[[["self"]],[T]]],[11,R[102],E,E,121,[[["self"]],[T]]],[11,R[105],E,E,121,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,R[107],E,E,17,[[["self"]],[T]]],[11,R[106],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"from",E,E,17,[[],[T]]],[11,R[103],E,E,17,[[[U]],["result"]]],[11,R[104],E,E,17,[[],["result"]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[102],E,E,17,[[["self"]],[T]]],[11,R[105],E,E,17,[[["self"]],["typeid"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[103],E,E,122,[[[U]],["result"]]],[11,R[104],E,E,122,[[],["result"]]],[11,"borrow",E,E,122,[[["self"]],[T]]],[11,R[102],E,E,122,[[["self"]],[T]]],[11,R[105],E,E,122,[[["self"]],["typeid"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[103],E,E,123,[[[U]],["result"]]],[11,R[104],E,E,123,[[],["result"]]],[11,"borrow",E,E,123,[[["self"]],[T]]],[11,R[102],E,E,123,[[["self"]],[T]]],[11,R[105],E,E,123,[[["self"]],["typeid"]]],[11,"into",E,E,33,[[],[U]]],[11,R[107],E,E,33,[[["self"]],[T]]],[11,R[106],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[103],E,E,33,[[[U]],["result"]]],[11,R[104],E,E,33,[[],["result"]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[102],E,E,33,[[["self"]],[T]]],[11,R[105],E,E,33,[[["self"]],["typeid"]]],[11,"into",E,E,34,[[],[U]]],[11,R[107],E,E,34,[[["self"]],[T]]],[11,R[106],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[103],E,E,34,[[[U]],["result"]]],[11,R[104],E,E,34,[[],["result"]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[102],E,E,34,[[["self"]],[T]]],[11,R[105],E,E,34,[[["self"]],["typeid"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[103],E,E,124,[[[U]],["result"]]],[11,R[104],E,E,124,[[],["result"]]],[11,"borrow",E,E,124,[[["self"]],[T]]],[11,R[102],E,E,124,[[["self"]],[T]]],[11,R[105],E,E,124,[[["self"]],["typeid"]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[103],E,E,125,[[[U]],["result"]]],[11,R[104],E,E,125,[[],["result"]]],[11,"borrow",E,E,125,[[["self"]],[T]]],[11,R[102],E,E,125,[[["self"]],[T]]],[11,R[105],E,E,125,[[["self"]],["typeid"]]],[11,"into",E,E,59,[[],[U]]],[11,R[107],E,E,59,[[["self"]],[T]]],[11,R[106],E,E,59,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[103],E,E,59,[[[U]],["result"]]],[11,R[104],E,E,59,[[],["result"]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[102],E,E,59,[[["self"]],[T]]],[11,R[105],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,66,[[],[U]]],[11,R[107],E,E,66,[[["self"]],[T]]],[11,R[106],E,E,66,[[["self"],[T]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[103],E,E,66,[[[U]],["result"]]],[11,R[104],E,E,66,[[],["result"]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[102],E,E,66,[[["self"]],[T]]],[11,R[105],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,126,[[],[U]]],[11,R[107],E,E,126,[[["self"]],[T]]],[11,R[106],E,E,126,[[["self"],[T]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[103],E,E,126,[[[U]],["result"]]],[11,R[104],E,E,126,[[],["result"]]],[11,"borrow",E,E,126,[[["self"]],[T]]],[11,R[102],E,E,126,[[["self"]],[T]]],[11,R[105],E,E,126,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,R[107],E,E,83,[[["self"]],[T]]],[11,R[106],E,E,83,[[["self"],[T]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[103],E,E,83,[[[U]],["result"]]],[11,R[104],E,E,83,[[],["result"]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[102],E,E,83,[[["self"]],[T]]],[11,R[105],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[103],E,E,127,[[[U]],["result"]]],[11,R[104],E,E,127,[[],["result"]]],[11,"borrow",E,E,127,[[["self"]],[T]]],[11,R[102],E,E,127,[[["self"]],[T]]],[11,R[105],E,E,127,[[["self"]],["typeid"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[103],E,E,128,[[[U]],["result"]]],[11,R[104],E,E,128,[[],["result"]]],[11,"borrow",E,E,128,[[["self"]],[T]]],[11,R[102],E,E,128,[[["self"]],[T]]],[11,R[105],E,E,128,[[["self"]],["typeid"]]],[11,"into",R[350],E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[103],E,E,129,[[[U]],["result"]]],[11,R[104],E,E,129,[[],["result"]]],[11,"borrow",E,E,129,[[["self"]],[T]]],[11,R[102],E,E,129,[[["self"]],[T]]],[11,R[105],E,E,129,[[["self"]],["typeid"]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[103],E,E,130,[[[U]],["result"]]],[11,R[104],E,E,130,[[],["result"]]],[11,"borrow",E,E,130,[[["self"]],[T]]],[11,R[102],E,E,130,[[["self"]],[T]]],[11,R[105],E,E,130,[[["self"]],["typeid"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[103],E,E,131,[[[U]],["result"]]],[11,R[104],E,E,131,[[],["result"]]],[11,"borrow",E,E,131,[[["self"]],[T]]],[11,R[102],E,E,131,[[["self"]],[T]]],[11,R[105],E,E,131,[[["self"]],["typeid"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[103],E,E,132,[[[U]],["result"]]],[11,R[104],E,E,132,[[],["result"]]],[11,"borrow",E,E,132,[[["self"]],[T]]],[11,R[102],E,E,132,[[["self"]],[T]]],[11,R[105],E,E,132,[[["self"]],["typeid"]]],[11,R[177],E,E,131,[[[R[325]]],[R[325]]]],[11,R[178],E,E,131,[[[R[49]],[R[325]],["bool"]],[R[325]]]],[11,R[177],E,E,130,[[[R[324]]],[R[324]]]],[11,R[178],E,E,130,[[["bool"],[R[49]],[R[324]]],[R[324]]]],[11,R[177],E,E,129,[[[R[323]]],[R[323]]]],[11,R[178],E,E,129,[[["bool"],[R[49]],[R[323]]],[R[323]]]],[11,R[177],E,E,132,[[[R[326]]],[R[326]]]],[11,R[178],E,E,132,[[[R[49]],[R[326]],["bool"]],[R[326]]]],[11,"add",E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,"add",E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,"domain",E,E,132,[[["self"]],[R[49]]]],[11,R[100],E,E,132,[[["self"]],["bool"]]],[11,"domain",E,E,131,[[["self"]],[R[49]]]],[11,R[100],E,E,131,[[["self"]],["bool"]]],[11,"domain",E,E,129,[[["self"]],[R[49]]]],[11,R[100],E,E,129,[[["self"]],["bool"]]],[11,"domain",E,E,130,[[["self"]],[R[49]]]],[11,R[100],E,E,130,[[["self"]],["bool"]]],[11,R[164],E,E,129,[[["b"]]]],[11,R[165],E,E,129,[[["b"]]]],[11,R[164],E,E,131,[[["b"]]]],[11,R[165],E,E,131,[[["b"]]]],[11,R[164],E,E,132,[[["b"]]]],[11,R[165],E,E,132,[[["b"]]]],[11,R[164],E,E,130,[[["b"]]]],[11,R[165],E,E,130,[[["b"]]]],[11,R[132],E,E,130,[[["b"]]]],[11,R[133],E,E,130,[[["b"]]]],[11,R[134],E,E,130,[[["b"]]]],[11,R[135],E,E,130,[[["b"]]]],[11,R[342],E,E,130,[[["b"]]]],[11,R[132],E,E,131,[[["b"]]]],[11,R[133],E,E,131,[[["b"]]]],[11,R[134],E,E,131,[[["b"]]]],[11,R[135],E,E,131,[[["b"]]]],[11,R[342],E,E,131,[[["b"]]]],[11,R[132],E,E,132,[[["b"]]]],[11,R[133],E,E,132,[[["b"]]]],[11,R[134],E,E,132,[[["b"]]]],[11,R[135],E,E,132,[[["b"]]]],[11,R[342],E,E,132,[[["b"]]]],[11,R[132],E,E,129,[[["b"]]]],[11,R[133],E,E,129,[[["b"]]]],[11,R[134],E,E,129,[[["b"]]]],[11,R[135],E,E,129,[[["b"]]]],[11,R[342],E,E,129,[[["b"]]]],[11,R[167],E,E,130,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[167],E,E,132,[[["b"],["usize"],[R[16]],["self"],[T]]]],[11,R[167],E,E,129,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[167],E,E,130,[[["b"],["usize"],[R[16]],["self"],[T]]]],[11,R[167],E,E,129,[[["b"],["usize"],[R[16]],["self"],[T]]]],[11,R[167],E,E,131,[[["b"],["usize"],[R[16]],["self"],[T]]]],[11,R[167],E,E,132,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[167],E,E,131,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,"wrap",E,E,130,[[["self"],[T]]]],[11,"unwrap",E,E,130,[[["self"],[T]]]],[11,"wrap",E,E,132,[[["self"],[T]]]],[11,"unwrap",E,E,132,[[["self"],[T]]]],[11,"wrap",E,E,129,[[["self"],[T]]]],[11,"unwrap",E,E,129,[[["self"],[T]]]],[11,"wrap",E,E,131,[[["self"],[T]]]],[11,"unwrap",E,E,131,[[["self"],[T]]]],[11,R[191],E,E,130,[[["v"],["self"]],[[R[44]],["result",[R[44]]]]]],[11,R[191],E,E,132,[[[R[326]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[191],E,E,129,[[["v"],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[191],E,E,131,[[[R[325]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[191],E,E,130,[[["self"],[R[324]]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[191],E,E,132,[[["v"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[191],E,E,129,[[[R[323]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[191],E,E,131,[[["v"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[198],E,E,130,[[["self"]]]],[11,R[198],E,E,132,[[["self"]]]],[11,R[198],E,E,129,[[["self"]],[["vec",[R[194]]],[R[194]]]]],[11,R[198],E,E,131,[[["self"]]]],[11,R[18],E,E,130,[[],["result"]]],[11,R[18],E,E,129,[[],["result"]]],[11,R[18],E,E,132,[[],["result"]]],[11,R[18],E,E,131,[[],["result"]]],[11,R[199],E,E,131,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[199],E,E,129,[[["self"],["usize"]],[["vec",[R[351]]],["result",["vec",R[44]]],[R[44]]]]],[11,R[199],E,E,132,[[["self"],["usize"]],[[R[44]],["result",[R[44]]]]]],[11,R[199],E,E,130,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[175],E,E,130,[[["self"],["b"],[T]]]],[11,R[174],E,E,130,[[["self"],["b"],[T]]]],[11,R[175],E,E,132,[[["self"],["b"],[T]]]],[11,R[174],E,E,132,[[["self"],["b"],[T]]]],[11,R[175],E,E,131,[[["self"],["b"],[T]]]],[11,R[174],E,E,131,[[["self"],["b"],[T]]]],[11,R[175],E,E,129,[[["self"],["b"],[T]]]],[11,R[174],E,E,129,[[["self"],["b"],[T]]]],[11,R[129],E,E,131,[[["self"]],[R[52]]]],[11,R[129],E,E,132,[[["self"]],[R[52]]]],[11,R[129],E,E,129,[[["self"]],[R[52]]]],[11,R[129],E,E,130,[[["self"]],[R[52]]]],[11,R[166],E,E,132,[[["self"],["b"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[166],E,E,130,[[["self"],["b"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[166],E,E,129,[[["self"],["b"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[166],E,E,131,[[["self"],["b"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,"mirror",E,E,129,[[["self"],["b"]]]],[11,R[152],E,E,129,[[["self"]]]],[11,R[153],E,E,129,[[["self"]]]],[11,"mirror",E,E,131,[[["self"],["b"]]]],[11,R[152],E,E,131,[[["self"]]]],[11,R[153],E,E,131,[[["self"]]]],[11,"mirror",E,E,130,[[["self"],["b"]]]],[11,R[152],E,E,130,[[["self"]]]],[11,R[153],E,E,130,[[["self"]]]],[11,"mirror",E,E,132,[[["self"],["b"]]]],[11,R[152],E,E,132,[[["self"]]]],[11,R[153],E,E,132,[[["self"]]]],[11,R[170],E,E,131,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[171],E,E,131,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[172],E,E,131,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[11,R[322],E,E,131,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,131,[[["self"],["u32"]]]],[11,R[170],E,E,130,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[171],E,E,130,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[172],E,E,130,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[11,R[322],E,E,130,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,130,[[["self"],["u32"]]]],[11,R[170],E,E,129,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[171],E,E,129,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[172],E,E,129,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[11,R[322],E,E,129,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,129,[[["self"],["u32"]]]],[11,R[170],E,E,132,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[171],E,E,132,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[172],E,E,132,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[11,R[322],E,E,132,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,132,[[["self"],["u32"]]]],[11,R[160],E,E,129,[[["b"]]]],[11,"ifft",E,E,129,[[["b"]]]],[11,R[161],E,E,129,[[[R[73]],["b"]]]],[11,R[160],E,E,131,[[["b"]]]],[11,"ifft",E,E,131,[[["b"]]]],[11,R[161],E,E,131,[[[R[73]],["b"]]]],[11,R[160],E,E,132,[[["b"]]]],[11,"ifft",E,E,132,[[["b"]]]],[11,R[161],E,E,132,[[[R[73]],["b"]]]],[11,R[160],E,E,130,[[["b"]]]],[11,"ifft",E,E,130,[[["b"]]]],[11,R[161],E,E,130,[[[R[73]],["b"]]]],[11,"get",E,E,132,[[]]],[11,"get",E,E,130,[[]]],[11,"get",E,E,129,[[]]],[11,"get",E,E,131,[[]]],[11,"abs",E,E,131,[[["self"]]]],[11,"abs",E,E,132,[[["self"]]]],[11,"abs",E,E,130,[[["self"]]]],[11,"abs",E,E,129,[[["self"]]]],[11,R[190],E,E,129,[[["v"],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[190],E,E,132,[[["v"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[190],E,E,131,[[["v"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[190],E,E,130,[[["self"],[R[324]]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[190],E,E,129,[[[R[323]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[190],E,E,130,[[["v"],["self"]],[[R[44]],["result",[R[44]]]]]],[11,R[190],E,E,132,[[[R[326]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[190],E,E,131,[[[R[325]],["self"]],[["vec"],[R[44]],["result",["vec",R[44]]]]]],[11,R[141],E,E,130,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[142],E,E,130,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[141],E,E,132,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[142],E,E,132,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[141],E,E,131,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[142],E,E,131,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[141],E,E,129,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[142],E,E,129,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[158],E,E,129,[[["b"]],["result"]]],[11,"sfft",E,E,129,[[["b"]],["result"]]],[11,R[159],E,E,129,[[[R[73]],["b"]],["result"]]],[11,R[158],E,E,130,[[["b"]],["result"]]],[11,"sfft",E,E,130,[[["b"]],["result"]]],[11,R[159],E,E,130,[[[R[73]],["b"]],["result"]]],[11,R[158],E,E,132,[[["b"]],["result"]]],[11,"sfft",E,E,132,[[["b"]],["result"]]],[11,R[159],E,E,132,[[[R[73]],["b"]],["result"]]],[11,R[158],E,E,131,[[["b"]],["result"]]],[11,"sfft",E,E,131,[[["b"]],["result"]]],[11,R[159],E,E,131,[[[R[73]],["b"]],["result"]]],[11,"resize",E,E,130,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,"resize",E,E,132,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,"resize",E,E,129,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,"resize",E,E,131,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,"offset",E,E,132,[[["self"],[T]]]],[11,"offset",E,E,131,[[["self"],[R[5]]]]],[11,"offset",E,E,129,[[["self"],[R[5]]]]],[11,"offset",E,E,132,[[["self"],[R[5]]]]],[11,"offset",E,E,130,[[["self"],[R[5]]]]],[11,"offset",E,E,131,[[["self"],[T]]]],[11,"offset",E,E,129,[[["self"],[T]]]],[11,"offset",E,E,130,[[["self"],[T]]]],[11,R[343],E,E,129,[[["self"]]]],[11,R[184],E,E,129,[[["self"]]]],[11,R[343],E,E,130,[[["self"]]]],[11,R[184],E,E,130,[[["self"]]]],[11,R[343],E,E,132,[[["self"]]]],[11,R[184],E,E,132,[[["self"]]]],[11,R[343],E,E,131,[[["self"]]]],[11,R[184],E,E,131,[[["self"]]]],[11,R[195],E,E,132,[[["self"],["usize"]],[[R[44]],["result",[R[44]]]]]],[11,R[195],E,E,131,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[195],E,E,130,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[195],E,E,129,[[["self"],["usize"]],[["vec",[R[351]]],["result",["vec",R[44]]],[R[44]]]]],[11,"sum",E,E,130,[[["self"]]]],[11,"sum_sq",E,E,130,[[["self"]]]],[11,"sum",E,E,130,[[["self"]]]],[11,"sum_sq",E,E,130,[[["self"]]]],[11,"sum",E,E,130,[[["self"]]]],[11,"sum_sq",E,E,130,[[["self"]]]],[11,"sum",E,E,129,[[["self"]],["vec"]]],[11,"sum_sq",E,E,129,[[["self"]],["vec"]]],[11,R[130],E,E,131,[[]]],[11,R[131],E,E,131,[[]]],[11,R[24],E,E,131,[[]]],[11,R[341],E,E,131,[[]]],[11,"phase",E,E,131,[[]]],[11,R[130],E,E,129,[[]]],[11,R[131],E,E,129,[[]]],[11,R[24],E,E,129,[[]]],[11,R[341],E,E,129,[[]]],[11,"phase",E,E,129,[[]]],[11,R[130],E,E,130,[[]]],[11,R[131],E,E,130,[[]]],[11,R[24],E,E,130,[[]]],[11,R[341],E,E,130,[[]]],[11,"phase",E,E,130,[[]]],[11,R[130],E,E,132,[[]]],[11,R[131],E,E,132,[[]]],[11,R[24],E,E,132,[[]]],[11,R[341],E,E,132,[[]]],[11,"phase",E,E,132,[[]]],[11,R[143],E,E,131,[[["self"],[T]]]],[11,"conj",E,E,131,[[["self"]]]],[11,R[143],E,E,129,[[["self"],[T]]]],[11,"conj",E,E,129,[[["self"]]]],[11,R[143],E,E,130,[[["self"],[T]]]],[11,"conj",E,E,130,[[["self"]]]],[11,R[143],E,E,132,[[["self"],[T]]]],[11,"conj",E,E,132,[[["self"]]]],[11,R[193],E,E,131,[[["a"],["fmap"],["faggr"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[193],E,E,129,[[["a"],["fmap"],["faggr"],["self"]],[["result",["vec",R[44]]],["vec"],[R[44]]]]],[11,R[193],E,E,132,[[["a"],["fmap"],["faggr"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[193],E,E,130,[[["a"],["fmap"],["faggr"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"sqrt",E,E,132,[[["self"]]]],[11,"square",E,E,132,[[["self"]]]],[11,"root",E,E,132,[[["self"],[T]]]],[11,"powf",E,E,132,[[["self"],[T]]]],[11,"ln",E,E,132,[[["self"]]]],[11,"exp",E,E,132,[[["self"]]]],[11,"log",E,E,132,[[["self"],[T]]]],[11,"expf",E,E,132,[[["self"],[T]]]],[11,"sqrt",E,E,130,[[["self"]]]],[11,"square",E,E,130,[[["self"]]]],[11,"root",E,E,130,[[["self"],[T]]]],[11,"powf",E,E,130,[[["self"],[T]]]],[11,"ln",E,E,130,[[["self"]]]],[11,"exp",E,E,130,[[["self"]]]],[11,"log",E,E,130,[[["self"],[T]]]],[11,"expf",E,E,130,[[["self"],[T]]]],[11,"sqrt",E,E,129,[[["self"]]]],[11,"square",E,E,129,[[["self"]]]],[11,"root",E,E,129,[[["self"],[T]]]],[11,"powf",E,E,129,[[["self"],[T]]]],[11,"ln",E,E,129,[[["self"]]]],[11,"exp",E,E,129,[[["self"]]]],[11,"log",E,E,129,[[["self"],[T]]]],[11,"expf",E,E,129,[[["self"],[T]]]],[11,"sqrt",E,E,131,[[["self"]]]],[11,"square",E,E,131,[[["self"]]]],[11,"root",E,E,131,[[["self"],[T]]]],[11,"powf",E,E,131,[[["self"],[T]]]],[11,"ln",E,E,131,[[["self"]]]],[11,"exp",E,E,131,[[["self"]]]],[11,"log",E,E,131,[[["self"],[T]]]],[11,"expf",E,E,131,[[["self"],[T]]]],[11,R[192],E,E,129,[[["a"],["self"],["f"]]]],[11,R[192],E,E,132,[[["a"],["self"],["f"]]]],[11,R[192],E,E,131,[[["a"],["self"],["f"]]]],[11,R[192],E,E,129,[[["a"],["self"],["f"]]]],[11,R[192],E,E,130,[[["a"],["self"],["f"]]]],[11,R[192],E,E,132,[[["a"],["self"],["f"]]]],[11,R[192],E,E,131,[[["a"],["self"],["f"]]]],[11,R[192],E,E,130,[[["a"],["self"],["f"]]]],[11,R[169],E,E,132,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,132,[[["self"],[T],[R[17]]]]],[11,R[169],E,E,130,[[["self"],[T],[R[17]]]]],[11,R[169],E,E,131,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,129,[[["self"],[T],[R[17]]]]],[11,R[169],E,E,131,[[["self"],[T],[R[17]]]]],[11,R[169],E,E,130,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,129,[[["self"],[R[15]],[T]]]],[11,"scale",E,E,129,[[["self"],[T]]]],[11,"scale",E,E,131,[[["self"],[T]]]],[11,"scale",E,E,132,[[["self"],[T]]]],[11,"scale",E,E,130,[[["self"],[T]]]],[11,"scale",E,E,130,[[["self"],[R[5]]]]],[11,"scale",E,E,132,[[["self"],[R[5]]]]],[11,"scale",E,E,131,[[["self"],[R[5]]]]],[11,"scale",E,E,129,[[["self"],[R[5]]]]],[11,R[144],E,E,131,[[["b"]]]],[11,R[144],E,E,129,[[["b"]]]],[11,R[144],E,E,130,[[["b"]]]],[11,R[144],E,E,132,[[["b"]]]],[11,R[162],E,E,132,[[["b"]],["result"]]],[11,"sifft",E,E,132,[[["b"]],["result"]]],[11,R[163],E,E,132,[[[R[73]],["b"]],["result"]]],[11,R[162],E,E,129,[[["b"]],["result"]]],[11,"sifft",E,E,129,[[["b"]],["result"]]],[11,R[163],E,E,129,[[[R[73]],["b"]],["result"]]],[11,R[162],E,E,130,[[["b"]],["result"]]],[11,"sifft",E,E,130,[[["b"]],["result"]]],[11,R[163],E,E,130,[[[R[73]],["b"]],["result"]]],[11,R[162],E,E,131,[[["b"]],["result"]]],[11,"sifft",E,E,131,[[["b"]],["result"]]],[11,R[163],E,E,131,[[[R[73]],["b"]],["result"]]],[11,"diff",E,E,129,[[["self"]]]],[11,R[189],E,E,129,[[["self"]]]],[11,R[344],E,E,129,[[["self"]]]],[11,"diff",E,E,130,[[["self"]]]],[11,R[189],E,E,130,[[["self"]]]],[11,R[344],E,E,130,[[["self"]]]],[11,"diff",E,E,132,[[["self"]]]],[11,R[189],E,E,132,[[["self"]]]],[11,R[344],E,E,132,[[["self"]]]],[11,"diff",E,E,131,[[["self"]]]],[11,R[189],E,E,131,[[["self"]]]],[11,R[344],E,E,131,[[["self"]]]],[11,"sin",E,E,130,[[["self"]]]],[11,"cos",E,E,130,[[["self"]]]],[11,"tan",E,E,130,[[["self"]]]],[11,"asin",E,E,130,[[["self"]]]],[11,"acos",E,E,130,[[["self"]]]],[11,"atan",E,E,130,[[["self"]]]],[11,"sinh",E,E,130,[[["self"]]]],[11,"cosh",E,E,130,[[["self"]]]],[11,"tanh",E,E,130,[[["self"]]]],[11,"asinh",E,E,130,[[["self"]]]],[11,"acosh",E,E,130,[[["self"]]]],[11,"atanh",E,E,130,[[["self"]]]],[11,"sin",E,E,132,[[["self"]]]],[11,"cos",E,E,132,[[["self"]]]],[11,"tan",E,E,132,[[["self"]]]],[11,"asin",E,E,132,[[["self"]]]],[11,"acos",E,E,132,[[["self"]]]],[11,"atan",E,E,132,[[["self"]]]],[11,"sinh",E,E,132,[[["self"]]]],[11,"cosh",E,E,132,[[["self"]]]],[11,"tanh",E,E,132,[[["self"]]]],[11,"asinh",E,E,132,[[["self"]]]],[11,"acosh",E,E,132,[[["self"]]]],[11,"atanh",E,E,132,[[["self"]]]],[11,"sin",E,E,129,[[["self"]]]],[11,"cos",E,E,129,[[["self"]]]],[11,"tan",E,E,129,[[["self"]]]],[11,"asin",E,E,129,[[["self"]]]],[11,"acos",E,E,129,[[["self"]]]],[11,"atan",E,E,129,[[["self"]]]],[11,"sinh",E,E,129,[[["self"]]]],[11,"cosh",E,E,129,[[["self"]]]],[11,"tanh",E,E,129,[[["self"]]]],[11,"asinh",E,E,129,[[["self"]]]],[11,"acosh",E,E,129,[[["self"]]]],[11,"atanh",E,E,129,[[["self"]]]],[11,"sin",E,E,131,[[["self"]]]],[11,"cos",E,E,131,[[["self"]]]],[11,"tan",E,E,131,[[["self"]]]],[11,"asin",E,E,131,[[["self"]]]],[11,"acos",E,E,131,[[["self"]]]],[11,"atan",E,E,131,[[["self"]]]],[11,"sinh",E,E,131,[[["self"]]]],[11,"cosh",E,E,131,[[["self"]]]],[11,"tanh",E,E,131,[[["self"]]]],[11,"asinh",E,E,131,[[["self"]]]],[11,"acosh",E,E,131,[[["self"]]]],[11,"atanh",E,E,131,[[["self"]]]],[11,R[168],E,E,132,[[["self"],["b"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,130,[[["self"],["b"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,131,[[["self"],["b"],["dspvec"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,131,[[["self"],["b"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,130,[[["self"],["b"],["dspvec"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,132,[[["self"],["b"],["dspvec"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,129,[[["self"],["b"],["vec"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,129,[[["self"],["b"],["dspvec"]],[["result",[R[44]]],[R[44]]]]],[11,R[327],E,E,132,[[["o"],["self"]]]],[11,R[328],E,E,132,[[["o"],["self"]]]],[11,R[136],E,E,132,[[["o"],["self"]]]],[11,R[137],E,E,132,[[["o"],["self"]]]],[11,R[138],E,E,132,[[["o"],["self"]]]],[11,R[139],E,E,132,[[["o"],["self"]]]],[11,R[140],E,E,132,[[["o"],["self"]]]],[11,R[327],E,E,131,[[["o"],["self"]]]],[11,R[328],E,E,131,[[["o"],["self"]]]],[11,R[136],E,E,131,[[["o"],["self"]]]],[11,R[137],E,E,131,[[["o"],["self"]]]],[11,R[138],E,E,131,[[["o"],["self"]]]],[11,R[139],E,E,131,[[["o"],["self"]]]],[11,R[140],E,E,131,[[["o"],["self"]]]],[11,R[327],E,E,130,[[["o"],["self"]]]],[11,R[328],E,E,130,[[["o"],["self"]]]],[11,R[136],E,E,130,[[["o"],["self"]]]],[11,R[137],E,E,130,[[["o"],["self"]]]],[11,R[138],E,E,130,[[["o"],["self"]]]],[11,R[139],E,E,130,[[["o"],["self"]]]],[11,R[140],E,E,130,[[["o"],["self"]]]],[11,R[327],E,E,129,[[["o"],["self"]]]],[11,R[328],E,E,129,[[["o"],["self"]]]],[11,R[136],E,E,129,[[["o"],["self"]]]],[11,R[137],E,E,129,[[["o"],["self"]]]],[11,R[138],E,E,129,[[["o"],["self"]]]],[11,R[139],E,E,129,[[["o"],["self"]]]],[11,R[140],E,E,129,[[["o"],["self"]]]],[11,R[156],E,E,132,[[["b"]]]],[11,"fft",E,E,132,[[["b"]]]],[11,R[157],E,E,132,[[[R[73]],["b"]]]],[11,R[156],E,E,131,[[["b"]]]],[11,"fft",E,E,131,[[["b"]]]],[11,R[157],E,E,131,[[[R[73]],["b"]]]],[11,R[156],E,E,130,[[["b"]]]],[11,"fft",E,E,130,[[["b"]]]],[11,R[157],E,E,130,[[[R[73]],["b"]]]],[11,R[156],E,E,129,[[["b"]]]],[11,"fft",E,E,129,[[["b"]]]],[11,R[157],E,E,129,[[[R[73]],["b"]]]],[11,R[145],E,E,132,[[["self"]]]],[11,R[146],E,E,132,[[["self"]]]],[11,R[147],E,E,132,[[["self"]]]],[11,R[148],E,E,132,[[["self"]]]],[11,R[149],E,E,132,[[["self"],[T]]]],[11,R[150],E,E,132,[[["self"],[T]]]],[11,R[151],E,E,132,[[["self"],[T]]]],[11,R[145],E,E,131,[[["self"]]]],[11,R[146],E,E,131,[[["self"]]]],[11,R[147],E,E,131,[[["self"]]]],[11,R[148],E,E,131,[[["self"]]]],[11,R[149],E,E,131,[[["self"],[T]]]],[11,R[150],E,E,131,[[["self"],[T]]]],[11,R[151],E,E,131,[[["self"],[T]]]],[11,R[145],E,E,130,[[["self"]]]],[11,R[146],E,E,130,[[["self"]]]],[11,R[147],E,E,130,[[["self"]]]],[11,R[148],E,E,130,[[["self"]]]],[11,R[149],E,E,130,[[["self"],[T]]]],[11,R[150],E,E,130,[[["self"],[T]]]],[11,R[151],E,E,130,[[["self"],[T]]]],[11,R[145],E,E,129,[[["self"]]]],[11,R[146],E,E,129,[[["self"]]]],[11,R[147],E,E,129,[[["self"]]]],[11,R[148],E,E,129,[[["self"]]]],[11,R[149],E,E,129,[[["self"],[T]]]],[11,R[150],E,E,129,[[["self"],[T]]]],[11,R[151],E,E,129,[[["self"],[T]]]],[11,R[9],E,E,129,[[["self"]],[T]]],[11,R[126],E,E,129,[[["self"],[T]]]],[11,R[399],E,E,129,[[["self"]],["usize"]]],[11,R[320],E,E,129,[[["self"]],["usize"]]],[11,R[402],E,E,129,[[["self"]],["usize"]]],[11,"rows",E,E,129,[[["self"]]]],[11,R[321],E,E,129,[[["self"]]]],[11,R[9],E,E,132,[[["self"]],[T]]],[11,R[126],E,E,132,[[["self"],[T]]]],[11,R[399],E,E,132,[[["self"]],["usize"]]],[11,R[320],E,E,132,[[["self"]],["usize"]]],[11,R[402],E,E,132,[[["self"]],["usize"]]],[11,"rows",E,E,132,[[["self"]]]],[11,R[321],E,E,132,[[["self"]]]],[11,R[9],E,E,130,[[["self"]],[T]]],[11,R[126],E,E,130,[[["self"],[T]]]],[11,R[399],E,E,130,[[["self"]],["usize"]]],[11,R[320],E,E,130,[[["self"]],["usize"]]],[11,R[402],E,E,130,[[["self"]],["usize"]]],[11,"rows",E,E,130,[[["self"]]]],[11,R[321],E,E,130,[[["self"]]]],[11,R[9],E,E,131,[[["self"]],[T]]],[11,R[126],E,E,131,[[["self"],[T]]]],[11,R[399],E,E,131,[[["self"]],["usize"]]],[11,R[320],E,E,131,[[["self"]],["usize"]]],[11,R[402],E,E,131,[[["self"]],["usize"]]],[11,"rows",E,E,131,[[["self"]]]],[11,R[321],E,E,131,[[["self"]]]],[11,R[201],E,E,132,[[["self"]]]],[11,R[200],E,E,132,[[["self"]]]],[11,R[201],E,E,129,[[["self"]],["vec"]]],[11,R[200],E,E,129,[[["self"]],["vec"]]],[11,R[201],E,E,130,[[["self"]]]],[11,R[200],E,E,130,[[["self"]]]],[11,R[201],E,E,131,[[["self"]]]],[11,R[200],E,E,131,[[["self"]]]],[11,R[154],E,E,132,[[[R[73]],["self"]]]],[11,R[155],E,E,132,[[[R[73]],["self"]]]],[11,R[154],E,E,131,[[[R[73]],["self"]]]],[11,R[155],E,E,131,[[[R[73]],["self"]]]],[11,R[154],E,E,130,[[[R[73]],["self"]]]],[11,R[155],E,E,130,[[[R[73]],["self"]]]],[11,R[154],E,E,129,[[[R[73]],["self"]]]],[11,R[155],E,E,129,[[[R[73]],["self"]]]],[11,R[180],E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,130,[[["self"],[R[324]]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,132,[[[R[326]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,130,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,129,[[["self"],[R[323]]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,131,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,132,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,129,[[["self"],["v"]],[["result",[R[44]]],[R[44]]]]],[11,R[180],E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,131,[[[R[325]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[194],E,E,131,[[["self"]]]],[11,R[194],E,E,129,[[["self"]],[["vec",[R[194]]],[R[194]]]]],[11,R[194],E,E,132,[[["self"]]]],[11,R[194],E,E,130,[[["self"]]]],[11,"trade",R[345],E,122,[[["vec"]]]],[11,"trade",E,E,123,[[["vec"]]]],[11,"trade",E,E,124,[[["s"]]]],[11,"trade",E,E,125,[[["s"]]]],[11,R[154],E,E,17,[[[R[73]],["self"]]]],[11,R[155],E,E,17,[[[R[73]],["self"]]]],[11,"datac",E,E,17,[[["usize"],["self"],["range",["usize"]]]]],[11,"datac",E,E,17,[[["self"],[R[123]]]]],[11,"datac",E,E,17,[[["self"],["usize"]],[R[5]]]],[11,"datac",E,E,17,[[["usize"],["self"],[R[206],["usize"]]]]],[11,"datac",E,E,17,[[[R[124],["usize"]],["self"],["usize"]]]],[11,R[158],E,E,17,[[["b"]],["result"]]],[11,"sfft",E,E,17,[[["b"]],["result"]]],[11,R[159],E,E,17,[[[R[73]],["b"]],["result"]]],[11,R[684],E,E,17,[[["self"],["b"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[156],E,E,17,[[["b"]]]],[11,"fft",E,E,17,[[["b"]]]],[11,R[157],E,E,17,[[[R[73]],["b"]]]],[11,"abs",E,E,17,[[["self"]]]],[11,R[188],E,E,17,[[["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[132],E,E,17,[[["b"]]]],[11,R[133],E,E,17,[[["b"]]]],[11,R[134],E,E,17,[[["b"]]]],[11,R[135],E,E,17,[[["b"]]]],[11,R[342],E,E,17,[[["b"]]]],[11,"diff",E,E,17,[[["self"]]]],[11,R[189],E,E,17,[[["self"]]]],[11,R[344],E,E,17,[[["self"]]]],[11,"domain",E,E,126,[[["self"]],[R[49]]]],[11,R[100],E,E,126,[[["self"]],["bool"]]],[11,"domain",E,E,17,[[["self"]],[R[49]]]],[11,R[100],E,E,17,[[["self"]],["bool"]]],[11,"scale",E,E,17,[[["self"],[T]]]],[11,"scale",E,E,17,[[["self"],[R[5]]]]],[11,"clone",E,E,83,[[["self"]],[R[49]]]],[11,"clone",R[347],E,4,[[["self"]],[R[203]]]],[11,"clone",R[345],E,34,[[["self"]],[R[88]]]],[11,"clone",R[347],E,5,[[["self"]],[R[204]]]],[11,"clone",R[345],E,17,[[["self"]],["dspvec"]]],[11,R[840],E,E,17,[[["self"],["dspvec"]]]],[11,"clone",E,E,66,[[["self"]],[R[194]]]],[11,"clone",E,E,59,[[["self"]],[R[30]]]],[11,"clone",R[347],E,115,[[["self"]],["time"]]],[11,"clone",R[345],E,126,[[["self"]],[R[52]]]],[11,"clone",E,E,33,[[["self"]],[R[44]]]],[11,"clone",R[347],E,116,[[["self"]],["freq"]]],[11,"clone",E,E,113,[[["self"]],["real"]]],[11,"clone",E,E,114,[[["self"]],[R[5]]]],[11,R[166],R[345],E,17,[[["self"],["b"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[343],E,E,17,[[["self"]]]],[11,R[184],E,E,17,[[["self"]]]],[11,R[174],E,E,17,[[["self"],["b"],[T]]]],[11,R[175],E,E,17,[[["self"],["b"],[T]]]],[11,R[199],E,E,17,[[["self"],["usize"]],[["result",[R[351],R[44]]],[R[351]],[R[44]]]]],[11,R[199],E,E,17,[[["self"],["usize"]],[[R[44]],[R[351]],["result",[R[351],R[44]]]]]],[11,R[199],E,E,17,[[["self"],["usize"]],[[R[44]],[R[351]],["result",[R[351],R[44]]]]]],[11,R[199],E,E,17,[[["self"],["usize"]],[["result",[R[351],R[44]]],[R[351]],[R[44]]]]],[11,R[194],E,E,17,[[["self"]],[R[194]]]],[11,R[194],E,E,17,[[["self"]],[[R[5]],[R[194],[R[5]]]]]],[11,"index",E,E,17,[[["usize"],["self"],["range",["usize"]]]]],[11,"index",E,E,17,[[["self"],[R[123]]]]],[11,"index",E,E,17,[[["usize"],["self"],[R[206],["usize"]]]]],[11,"index",E,E,17,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"index",E,E,17,[[["usize"],["self"],[R[206],["usize"]]]]],[11,"index",E,E,17,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"index",E,E,17,[[["self"],["usize"]],[T]]],[11,"index",E,E,17,[[["self"],["usize"]],[R[5]]]],[11,"index",E,E,17,[[["usize"],["self"],["range",["usize"]]]]],[11,"index",E,E,17,[[["self"],[R[123]]]]],[11,"empty",E,E,66,[[],[[R[5]],[R[194],[R[5]]]]]],[11,R[837],E,E,66,[[],[[R[5]],[R[194],[R[5]]]]]],[11,"merge",E,E,66,[[],[[R[5]],[R[194],[R[5]]]]]],[11,R[196],E,E,66,[[],[R[351]]]],[11,R[197],E,E,66,[[["usize"]],[R[351]]]],[11,"add",E,E,66,[[["self"],[R[5]],["usize"]]]],[11,"empty",E,E,66,[[],[R[194]]]],[11,R[837],E,E,66,[[],[R[194]]]],[11,"merge",E,E,66,[[],[R[194]]]],[11,R[196],E,E,66,[[],[R[351]]]],[11,R[197],E,E,66,[[["usize"]],[R[351]]]],[11,"add",E,E,66,[[["self"],[T],["usize"]]]],[11,"wrap",E,E,17,[[["self"],[T]]]],[11,"unwrap",E,E,17,[[["self"],[T]]]],[11,"merge",E,E,17,[[["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[168],E,E,17,[[["self"],["b"],["dspvec"]],[["result",[R[44]]],[R[44]]]]],[11,"zero",R[349],E,11,[[],[R[5]]]],[11,R[2],R[346],E,108,[[["self"]],["bool"]]],[11,"calc",E,E,108,[[["f64"],["self"]],["f64"]]],[11,R[2],E,E,111,[[["self"]],["bool"]]],[11,"calc",E,E,111,[[["self"],[T]],[T]]],[11,R[2],E,E,112,[[["self"]],["bool"]]],[11,"calc",E,E,112,[[["self"],[T]],[T]]],[11,R[2],E,E,108,[[["self"]],["bool"]]],[11,"calc",E,E,108,[[["f32"],["self"]],["f32"]]],[11,R[122],R[345],E,17,[[["self"],["usize"],[R[124],["usize"]]]]],[11,R[122],E,E,17,[[["self"],[R[123]]]]],[11,R[122],E,E,17,[[["self"],["range",["usize"]],["usize"]]]],[11,R[122],E,E,17,[[["self"],[R[206],["usize"]],["usize"]]]],[11,R[122],E,E,17,[[["self"],["usize"]],[T]]],[11,R[129],E,E,17,[[["self"]],[R[52]]]],[11,"borrow",E,E,127,[[["self"],["usize"]]]],[11,R[63],E,E,127,[[["self"]],["usize"]]],[11,"borrow",E,E,121,[[["self"],["usize"]]]],[11,R[63],E,E,121,[[["self"]],["usize"]]],[11,"borrow",E,E,128,[[["self"],["usize"]]]],[11,R[63],E,E,128,[[["self"]],["usize"]]],[11,R[125],E,E,17,[[["self"],["usize"],[R[124],["usize"]]]]],[11,R[125],E,E,17,[[["self"],[R[123]]]]],[11,R[125],E,E,17,[[["self"],["range",["usize"]],["usize"]]]],[11,R[125],E,E,17,[[["self"],["usize"]],[R[5]]]],[11,R[125],E,E,17,[[["self"],[R[206],["usize"]],["usize"]]]],[11,R[191],E,E,17,[[["self"],["o"]],[[R[44]],["result",[R[5],R[44]]],[R[5]]]]],[11,R[191],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,"sin",E,E,17,[[["self"]]]],[11,"cos",E,E,17,[[["self"]]]],[11,"tan",E,E,17,[[["self"]]]],[11,"asin",E,E,17,[[["self"]]]],[11,"acos",E,E,17,[[["self"]]]],[11,"atan",E,E,17,[[["self"]]]],[11,"sinh",E,E,17,[[["self"]]]],[11,"cosh",E,E,17,[[["self"]]]],[11,"tanh",E,E,17,[[["self"]]]],[11,"asinh",E,E,17,[[["self"]]]],[11,"acosh",E,E,17,[[["self"]]]],[11,"atanh",E,E,17,[[["self"]]]],[11,R[506],E,E,121,[[],[R[32]]]],[11,R[506],R[346],E,112,[[],[R[352]]]],[11,R[144],R[345],E,17,[[["b"]]]],[11,R[162],E,E,17,[[["b"]],["result"]]],[11,"sifft",E,E,17,[[["b"]],["result"]]],[11,R[163],E,E,17,[[[R[73]],["b"]],["result"]]],[11,"deref",E,E,124,[[["self"]]]],[11,"deref",E,E,125,[[["self"]]]],[11,"deref",E,E,123,[[["self"]]]],[11,"deref",E,E,122,[[["self"]]]],[11,R[160],E,E,17,[[["b"]]]],[11,"ifft",E,E,17,[[["b"]]]],[11,R[161],E,E,17,[[[R[73]],["b"]]]],[11,R[177],E,E,17,[[["dspvec"]],[["time"],["dspvec",[R[5],"time"]],[R[5]]]]],[11,R[178],E,E,17,[[[R[49]],["dspvec"],["bool"]],[["time"],["dspvec",[R[5],"time"]],[R[5]]]]],[11,R[177],E,E,17,[[["dspvec"]],[["freq"],[R[5]],["dspvec",[R[5],"freq"]]]]],[11,R[178],E,E,17,[[[R[49]],["dspvec"],["bool"]],[["freq"],[R[5]],["dspvec",[R[5],"freq"]]]]],[11,R[177],E,E,17,[[["dspvec"]],[["freq"],["dspvec",["real","freq"]],["real"]]]],[11,R[178],E,E,17,[[[R[49]],["dspvec"],["bool"]],[["freq"],["dspvec",["real","freq"]],["real"]]]],[11,R[177],E,E,17,[[["dspvec"]],[["dspvec",["real","time"]],["real"],["time"]]]],[11,R[178],E,E,17,[[[R[49]],["dspvec"],["bool"]],[["dspvec",["real","time"]],["real"],["time"]]]],[11,R[177],E,E,17,[[["dspvec"]],[[R[204]],[R[203]],["dspvec",[R[203],R[204]]]]]],[11,R[178],E,E,17,[[[R[49]],["dspvec"],["bool"]],[[R[204]],[R[203]],["dspvec",[R[203],R[204]]]]]],[11,R[169],E,E,17,[[["self"],[T],[R[17]]]]],[11,R[169],E,E,17,[[["self"],[T],[R[15]]]]],[11,R[192],E,E,17,[[["a"],["self"],["f"]]]],[11,R[192],E,E,17,[[["a"],["self"],["f"]]]],[11,"getf",E,E,17,[[]]],[11,R[100],R[347],E,113,[[["self"]],["bool"]]],[11,R[18],E,E,113,[[["self"]]]],[11,R[24],E,E,113,[[["self"]]]],[11,R[100],E,E,4,[[["self"]],["bool"]]],[11,R[18],E,E,4,[[["self"]]]],[11,R[24],E,E,4,[[["self"]]]],[11,R[100],E,E,114,[[["self"]],["bool"]]],[11,R[18],E,E,114,[[["self"]]]],[11,R[24],E,E,114,[[["self"]]]],[11,R[786],R[345],E,17,[[[R[88]],["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,R[185],E,E,17,[[["self"],["u32"]],[["result",[R[44]]],[R[44]]]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[126],E,E,17,[[["self"],[T]]]],[11,"len",E,E,17,[[["self"]],["usize"]]],[11,R[62],E,E,17,[[["self"]],["bool"]]],[11,"points",E,E,17,[[["self"]],["usize"]]],[11,R[127],E,E,17,[[["self"]],[R[30]]]],[11,R[128],E,E,17,[[[R[30]],["self"]]]],[11,R[63],E,E,17,[[["self"]],["usize"]]],[11,R[201],E,E,17,[[["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[200],E,E,17,[[["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[201],E,E,17,[[["self"]],["f64"]]],[11,R[200],E,E,17,[[["self"]],["f64"]]],[11,R[201],E,E,17,[[["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[200],E,E,17,[[["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[201],E,E,17,[[["self"]],["f64"]]],[11,R[200],E,E,17,[[["self"]],["f64"]]],[11,R[195],E,E,17,[[["self"],["usize"]],[["result",[R[351],R[44]]],[R[351]],[R[44]]]]],[11,R[195],E,E,17,[[["self"],["usize"]],[[R[44]],[R[351]],["result",[R[351],R[44]]]]]],[11,R[141],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[142],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[327],E,E,17,[[["o"],["self"]]]],[11,R[328],E,E,17,[[["o"],["self"]]]],[11,R[136],E,E,17,[[["o"],["self"]]]],[11,R[137],E,E,17,[[["o"],["self"]]]],[11,R[138],E,E,17,[[["o"],["self"]]]],[11,R[139],E,E,17,[[["o"],["self"]]]],[11,R[140],E,E,17,[[["o"],["self"]]]],[11,R[145],E,E,17,[[["self"]]]],[11,R[146],E,E,17,[[["self"]]]],[11,R[147],E,E,17,[[["self"]]]],[11,R[148],E,E,17,[[["self"]]]],[11,R[149],E,E,17,[[["self"],[T]]]],[11,R[150],E,E,17,[[["self"],[T]]]],[11,R[151],E,E,17,[[["self"],[T]]]],[11,R[2],R[346],E,109,[[["self"]],["bool"]]],[11,"calc",E,E,109,[[["f64"],["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[2],E,E,109,[[["self"]],["bool"]]],[11,"calc",E,E,109,[[["f32"],["self"]],[["f32"],[R[5],["f32"]]]]],[11,R[167],R[345],E,17,[[["b"],["usize"],[R[16]],["self"],[T]]]],[11,R[167],E,E,17,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,"add",E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,"sub",E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,"mul",E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,"div",E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[170],E,E,17,[[[R[14]],["b"],["usize"],["self"],[T]]]],[11,R[171],E,E,17,[[["u32"],["b"],[R[15]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[322],E,E,17,[[["self"],["b"],["usize"]]]],[11,R[172],E,E,17,[[["b"],[R[15]],["usize"],["self"],["option",[R[15]]],[T]],[["result",[R[44]]],[R[44]]]]],[11,R[173],E,E,17,[[["self"],["u32"]]]],[11,R[143],E,E,17,[[["self"],[T]]]],[11,"conj",E,E,17,[[["self"]]]],[11,R[2],R[348],E,118,[[["self"]],["bool"]]],[11,"window",E,E,118,[[["self"],["usize"]],[T]]],[11,R[2],E,E,117,[[["self"]],["bool"]]],[11,"window",E,E,117,[[["self"],["usize"]],[T]]],[11,R[2],E,E,119,[[["self"]],["bool"]]],[11,"window",E,E,119,[[["self"],["usize"]],[T]]],[11,R[2],E,E,120,[[["self"]],["bool"]]],[11,"window",E,E,120,[[["self"],["usize"]],[T]]],[11,"fmt",R[347],E,5,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,114,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[345],E,83,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,59,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[347],E,115,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[345],E,33,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[347],E,116,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[345],E,34,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[347],E,113,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[345],E,17,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,66,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",R[347],E,4,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,R[18],R[345],E,17,[[],["result"]]],[11,R[190],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[190],E,E,17,[[["self"],["o"]],[[R[44]],["result",[R[5],R[44]]],[R[5]]]]],[11,R[176],E,E,17,[[["o"]],["dspvec"]]],[11,R[179],E,E,17,[[],["o"]]],[11,"get",E,E,17,[[]]],[11,"get",E,E,17,[[]]],[11,"get",E,E,17,[[]]],[11,"get",E,E,17,[[]]],[11,"domain",R[347],E,115,[[["self"]],[R[49]]]],[11,R[838],E,E,115,[[["self"]]]],[11,R[839],E,E,115,[[["self"]]]],[11,"domain",E,E,5,[[["self"]],[R[49]]]],[11,R[838],E,E,5,[[["self"]]]],[11,R[839],E,E,5,[[["self"]]]],[11,"domain",E,E,116,[[["self"]],[R[49]]]],[11,R[839],E,E,116,[[["self"]]]],[11,R[838],E,E,116,[[["self"]]]],[11,R[186],R[345],E,17,[[["b"],["usize"],[R[88]],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[187],E,E,17,[[["self"],["b"],["u32"]]]],[11,R[180],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[181],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[182],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[183],E,E,17,[[["self"],["o"]],[["result",[R[44]]],[R[44]]]]],[11,R[202],E,E,66,[[[R[5]],[R[5]],["usize"],["self"]]]],[11,R[202],E,E,66,[[["usize"],[T],["self"],[T]]]],[11,"resize",E,E,17,[[["self"],["usize"]],[["result",[R[44]]],[R[44]]]]],[11,"offset",E,E,17,[[["self"],[R[5]]]]],[11,"offset",E,E,17,[[["self"],[T]]]],[11,R[198],E,E,17,[[["self"]],[[R[194],[R[5]]],[R[5],["f64"]]]]],[11,R[198],E,E,17,[[["self"]],[[R[194],["f64"]],["f64"]]]],[11,R[198],E,E,17,[[["self"]],[[R[194],["f64"]],["f64"]]]],[11,R[198],E,E,17,[[["self"]],[[R[194],[R[5]]],[R[5],["f64"]]]]],[11,R[205],E,E,125,[[["self"]]]],[11,R[205],E,E,123,[[["self"]]]],[11,R[205],E,E,122,[[["self"]]]],[11,R[205],E,E,124,[[["self"]]]],[11,R[207],E,E,17,[[["self"],["usize"],[R[124],["usize"]]]]],[11,R[207],E,E,17,[[["self"],["usize"]],[R[5]]]],[11,R[207],E,E,17,[[["self"],["usize"]],[T]]],[11,R[207],E,E,17,[[["self"],[R[123]]]]],[11,R[207],E,E,17,[[["self"],[R[206],["usize"]],["usize"]]]],[11,R[207],E,E,17,[[["self"],["usize"],[R[124],["usize"]]]]],[11,R[207],E,E,17,[[["self"],["range",["usize"]],["usize"]]]],[11,R[207],E,E,17,[[["self"],["range",["usize"]],["usize"]]]],[11,R[207],E,E,17,[[["self"],[R[206],["usize"]],["usize"]]]],[11,R[207],E,E,17,[[["self"],[R[123]]]]],[11,"eq",R[347],E,114,[[["self"],[R[5]]],["bool"]]],[11,"eq",E,E,115,[[["self"],["time"]],["bool"]]],[11,"eq",R[345],E,33,[[[R[44]],["self"]],["bool"]]],[11,"eq",R[347],E,116,[[["freq"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[204]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[204]]],["bool"]]],[11,"eq",R[345],E,83,[[[R[49]],["self"]],["bool"]]],[11,"eq",R[347],E,113,[[["real"],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[203]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[203]],["self"]],["bool"]]],[11,"eq",R[345],E,66,[[[R[194]],["self"]],["bool"]]],[11,"ne",E,E,66,[[[R[194]],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[88]]],["bool"]]],[11,"sum",E,E,17,[[["self"]],[R[5]]]],[11,"sum_sq",E,E,17,[[["self"]],[R[5]]]],[11,"sum",E,E,17,[[["self"]],[T]]],[11,"sum_sq",E,E,17,[[["self"]],[T]]],[11,R[2],R[346],E,110,[[["self"]],["bool"]]],[11,"calc",E,E,110,[[["f32"],["self"]],[["f32"],[R[5],["f32"]]]]],[11,R[2],E,E,110,[[["self"]],["bool"]]],[11,"calc",E,E,110,[[["f64"],["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[2],E,E,107,[[["self"]],["bool"]]],[11,"calc",E,E,107,[[["f64"],["self"]],["f64"]]],[11,R[2],E,E,111,[[["self"]],["bool"]]],[11,"calc",E,E,111,[[["self"],[T]],[T]]],[11,R[2],E,E,107,[[["self"]],["bool"]]],[11,"calc",E,E,107,[[["f32"],["self"]],["f32"]]],[11,R[2],E,E,112,[[["self"]],["bool"]]],[11,"calc",E,E,112,[[["self"],[T]],[T]]],[11,R[164],R[345],E,17,[[["b"]]]],[11,R[165],E,E,17,[[["b"]]]],[11,"from",E,E,17,[[["s"]],[["time"],["dspvec",[R[5],"time"]],[R[5]]]]],[11,"from",E,E,17,[[["s"]],[["dspvec",["real","time"]],["real"],["time"]]]],[11,"from",E,E,17,[[["s"]],[["freq"],[R[5]],["dspvec",[R[5],"freq"]]]]],[11,"from",E,E,17,[[["s"]],[["freq"],["dspvec",["real","freq"]],["real"]]]],[11,"data",E,E,17,[[["self"],[R[123]]]]],[11,"data",E,E,17,[[["usize"],["self"],["range",["usize"]]]]],[11,"data",E,E,17,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"data",E,E,17,[[["self"],["usize"]],[T]]],[11,"data",E,E,17,[[["usize"],["self"],[R[206],["usize"]]]]],[11,R[193],E,E,17,[[["a"],["fmap"],["faggr"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,R[193],E,E,17,[[["a"],["fmap"],["faggr"],["self"]],[["result",[R[44]]],[R[44]]]]],[11,"sqrt",E,E,17,[[["self"]]]],[11,"square",E,E,17,[[["self"]]]],[11,"root",E,E,17,[[["self"],[T]]]],[11,"powf",E,E,17,[[["self"],[T]]]],[11,"ln",E,E,17,[[["self"]]]],[11,"exp",E,E,17,[[["self"]]]],[11,"log",E,E,17,[[["self"],[T]]]],[11,"expf",E,E,17,[[["self"],[T]]]],[11,"mirror",E,E,17,[[["self"],["b"]]]],[11,R[152],E,E,17,[[["self"]]]],[11,R[153],E,E,17,[[["self"]]]],[11,R[130],E,E,17,[[]]],[11,R[131],E,E,17,[[]]],[11,R[24],E,E,17,[[]]],[11,R[341],E,E,17,[[]]],[11,"phase",E,E,17,[[]]],[11,"rem",R[349],E,11,[[[R[5]]],[R[5]]]],[11,"rem",E,E,11,[[[R[5]]],[R[5]]]],[11,"rem",E,E,11,[[[T]],[R[5]]]],[11,"rem",E,E,11,[[[T]],[R[5]]]],[11,R[833],E,E,11,[[["usize"]],[["option",[R[5]]],[R[5]]]]],[11,R[834],E,E,11,[[["isize"]],[["option",[R[5]]],[R[5]]]]],[11,"from_u8",E,E,11,[[["u8"]],[["option",[R[5]]],[R[5]]]]],[11,"from_u16",E,E,11,[[["u16"]],[["option",[R[5]]],[R[5]]]]],[11,"from_u32",E,E,11,[[["u32"]],[["option",[R[5]]],[R[5]]]]],[11,"from_u64",E,E,11,[[["u64"]],[["option",[R[5]]],[R[5]]]]],[11,"from_i8",E,E,11,[[["i8"]],[["option",[R[5]]],[R[5]]]]],[11,"from_i16",E,E,11,[[["i16"]],[["option",[R[5]]],[R[5]]]]],[11,"from_i32",E,E,11,[[["i32"]],[["option",[R[5]]],[R[5]]]]],[11,"from_i64",E,E,11,[[["i64"]],[["option",[R[5]]],[R[5]]]]],[11,R[835],E,E,11,[[["u128"]],[["option",[R[5]]],[R[5]]]]],[11,R[836],E,E,11,[[["i128"]],[["option",[R[5]]],[R[5]]]]],[11,"from_f32",E,E,11,[[["f32"]],[["option",[R[5]]],[R[5]]]]],[11,"from_f64",E,E,11,[[["f64"]],[["option",[R[5]]],[R[5]]]]],[11,"sum",E,E,11,[[["i"]],[R[5]]]],[11,"sum",E,E,11,[[["i"]],[R[5]]]],[11,"zero",E,E,11,[[],[R[5]]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,R[112],E,E,11,[[["self"],[R[5]]]]],[11,R[112],E,E,11,[[["self"],[R[5]]]]],[11,R[112],E,E,11,[[["self"],[T]]]],[11,R[112],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[R[5]]]],[11,"from",E,E,11,[[[T]],[R[5]]]],[11,"inv",E,E,11,[[],[R[5]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"clone",E,E,11,[[["self"]],[R[5]]]],[11,"mul",E,E,11,[[[R[5]]],[R[5]]]],[11,"mul",E,E,11,[[[R[5]]],[R[5]]]],[11,"mul",E,E,11,[[[T]],[R[5]]]],[11,"mul",E,E,11,[[[T]],[R[5]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"from_str",E,R[115],11,[[["str"]],[["result",[R[5]]],[R[5]]]]],[11,"eq",E,E,11,[[["self"],[R[5]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[5]]],["bool"]]],[11,"div",E,E,11,[[[R[5]]],[R[5]]]],[11,"div",E,E,11,[[[R[5]]],[R[5]]]],[11,"div",E,E,11,[[[T]],[R[5]]]],[11,"div",E,E,11,[[[T]],[R[5]]]],[11,"product",E,E,11,[[["i"]],[R[5]]]],[11,"product",E,E,11,[[["i"]],[R[5]]]],[11,"add",E,E,11,[[[R[5]]],[R[5]]]],[11,"add",E,E,11,[[[T]],[R[5]]]],[11,"add",E,E,11,[[[R[5]]],[R[5]]]],[11,"add",E,E,11,[[[T]],[R[5]]]],[11,R[114],E,R[115],11,[[["str"],["u32"]],[["result",[R[5]]],[R[5]]]]],[11,"one",E,E,11,[[],[R[5]]]],[11,"is_one",E,E,11,[[["self"]],["bool"]]],[11,"from",E,E,11,[[[U]],[["option",[R[5]]],[R[5]]]]],[11,R[116],E,E,11,[[["self"],[R[5]]]]],[11,R[116],E,E,11,[[["self"],[T]]]],[11,R[116],E,E,11,[[["self"],[R[5]]]]],[11,R[116],E,E,11,[[["self"],[T]]]],[11,R[117],E,E,11,[[["self"],[T]]]],[11,R[117],E,E,11,[[["self"],[T]]]],[11,R[117],E,E,11,[[["self"],[R[5]]]]],[11,R[117],E,E,11,[[["self"],[R[5]]]]],[11,"neg",E,E,11,[[],[R[5]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,R[506],E,E,11,[[],[R[5]]]],[11,R[118],E,E,11,[[["self"],[T]]]],[11,R[118],E,E,11,[[["self"],[R[5]]]]],[11,R[118],E,E,11,[[["self"],[T]]]],[11,R[118],E,E,11,[[["self"],[R[5]]]]],[11,"to_usize",E,E,11,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize",E,E,11,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_u8",E,E,11,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,E,11,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32",E,E,11,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"to_u64",E,E,11,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8",E,E,11,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16",E,E,11,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32",E,E,11,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64",E,E,11,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128",E,E,11,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_i128",E,E,11,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32",E,E,11,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64",E,E,11,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"sub",E,E,11,[[[R[5]]],[R[5]]]],[11,"sub",E,E,11,[[[T]],[R[5]]]],[11,"sub",E,E,11,[[[T]],[R[5]]]],[11,"sub",E,E,11,[[[R[5]]],[R[5]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,11,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,R[119],E,E,11,[[["self"],[T]]]],[11,R[119],E,E,11,[[["self"],[T]]]],[11,R[119],E,E,11,[[["self"],[R[5]]]]],[11,R[119],E,E,11,[[["self"],[R[5]]]]],[11,"as_",E,E,11,[[],[U]]],[11,R[8],R[346],R[6],107,[[["self"]]]],[11,R[9],E,R[7],107,[[["self"]],[T]]],[11,R[10],E,R[11],107,[[["f32"],["bool"]],[[R[23],["f32"]],["f32"]]]],[11,R[12],E,R[13],107,[[["f32"],[R[14]],["usize"]],[[R[23],["f32"]],["f32"]]]],[11,R[10],E,R[11],107,[[["f64"],["bool"]],[[R[23],["f64"]],["f64"]]]],[11,R[12],E,R[13],107,[[["f64"],[R[14]],["usize"]],[[R[23],["f64"]],["f64"]]]],[11,R[18],E,R[19],107,[[["self"]],[[R[20],["f32"]],["f32"]]]],[11,R[18],E,R[19],107,[[["self"]],[[R[20],["f64"]],["f64"]]]],[11,"fft",E,R[27],107,[[],[["f32"],[R[25],["f32"]]]]],[11,"fft",E,R[27],107,[[],[["f64"],[R[25],["f64"]]]]],[11,R[8],E,R[6],108,[[["self"]]]],[11,R[9],E,R[7],108,[[["self"]],[T]]],[11,R[10],E,R[11],108,[[["f32"],["bool"]],[["f32"],[R[25],["f32"]]]]],[11,R[12],E,R[13],108,[[["f32"],["usize"],[R[15]]],[["f32"],[R[25],["f32"]]]]],[11,R[10],E,R[11],108,[[["f64"],["bool"]],[["f64"],[R[25],["f64"]]]]],[11,R[12],E,R[13],108,[[["f64"],["usize"],[R[15]]],[["f64"],[R[25],["f64"]]]]],[11,R[18],E,R[19],108,[[["self"]],[[R[21],["f32"]],["f32"]]]],[11,R[18],E,R[19],108,[[["self"]],[["f64"],[R[21],["f64"]]]]],[11,R[8],E,R[6],109,[[["self"]]]],[11,R[9],E,R[7],109,[[["self"]],[T]]],[11,R[10],E,R[11],109,[[["f32"],["bool"]],[[R[20],["f32"]],["f32"]]]],[11,R[12],E,R[13],109,[[["f32"],[R[16]],["usize"]],[[R[20],["f32"]],["f32"]]]],[11,R[10],E,R[11],109,[[["f64"],["bool"]],[[R[20],["f64"]],["f64"]]]],[11,R[12],E,R[13],109,[[[R[16]],["f64"],["usize"]],[[R[20],["f64"]],["f64"]]]],[11,R[24],E,R[22],109,[[["self"]],[[R[23],["f32"]],["f32"]]]],[11,R[24],E,R[22],109,[[["self"]],[[R[23],["f64"]],["f64"]]]],[11,"fft",E,R[26],109,[[],[[R[21],["f32"]],["f32"]]]],[11,"fft",E,R[26],109,[[],[["f64"],[R[21],["f64"]]]]],[11,R[8],E,R[6],110,[[["self"]]]],[11,R[9],E,R[7],110,[[["self"]],[T]]],[11,R[10],E,R[11],110,[[["f32"],["bool"]],[[R[21],["f32"]],["f32"]]]],[11,R[12],E,R[13],110,[[["f32"],[R[17]],["usize"]],[[R[21],["f32"]],["f32"]]]],[11,R[10],E,R[11],110,[[["f64"],["bool"]],[["f64"],[R[21],["f64"]]]]],[11,R[12],E,R[13],110,[[[R[17]],["f64"],["usize"]],[["f64"],[R[21],["f64"]]]]],[11,R[24],E,R[22],110,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,R[24],E,R[22],110,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,"ifft",E,R[28],110,[[],[[R[20],["f32"]],["f32"]]]],[11,"ifft",E,R[28],110,[[],[[R[20],["f64"]],["f64"]]]],[11,"new",E,R[496],111,[[[T]],["raisedcosinefunction"]]],[11,"new",E,R[497],112,[[],[R[352]]]],[11,"new",R[348],R[530],118,[[[T]],[R[353]]]],[11,R[506],E,R[531],118,[[],[R[353]]]],[11,"new",R[349],R[841],11,[[[T]],[R[5]]]],[11,"i",E,R[842],11,[[],[R[5]]]],[11,"norm_sqr",E,R[843],11,[[["self"]],[T]]],[11,"scale",E,R[844],11,[[["self"],[T]],[R[5]]]],[11,"unscale",E,R[845],11,[[["self"],[T]],[R[5]]]],[11,"conj",E,R[846],11,[[["self"]],[R[5]]]],[11,"inv",E,R[847],11,[[["self"]],[R[5]]]],[11,"norm",E,R[848],11,[[["self"]],[T]]],[11,"arg",E,R[849],11,[[["self"]],[T]]],[11,"to_polar",E,R[850],11,[[["self"]]]],[11,R[851],E,R[852],11,[[[T]],[R[5]]]],[11,"exp",E,R[853],11,[[["self"]],[R[5]]]],[11,"ln",E,R[854],11,[[["self"]],[R[5]]]],[11,"sqrt",E,R[855],11,[[["self"]],[R[5]]]],[11,"powf",E,R[856],11,[[["self"],[T]],[R[5]]]],[11,"log",E,R[857],11,[[["self"],[T]],[R[5]]]],[11,"powc",E,R[858],11,[[["self"],[R[5]]],[R[5]]]],[11,"expf",E,R[859],11,[[["self"],[T]],[R[5]]]],[11,"sin",E,R[860],11,[[["self"]],[R[5]]]],[11,"cos",E,R[861],11,[[["self"]],[R[5]]]],[11,"tan",E,R[862],11,[[["self"]],[R[5]]]],[11,"asin",E,R[863],11,[[["self"]],[R[5]]]],[11,"acos",E,R[864],11,[[["self"]],[R[5]]]],[11,"atan",E,R[865],11,[[["self"]],[R[5]]]],[11,"sinh",E,R[866],11,[[["self"]],[R[5]]]],[11,"cosh",E,R[867],11,[[["self"]],[R[5]]]],[11,"tanh",E,R[868],11,[[["self"]],[R[5]]]],[11,"asinh",E,R[869],11,[[["self"]],[R[5]]]],[11,"acosh",E,R[870],11,[[["self"]],[R[5]]]],[11,"atanh",E,R[871],11,[[["self"]],[R[5]]]],[11,"is_nan",E,R[872],11,[[],["bool"]]],[11,R[208],E,R[873],11,[[],["bool"]]],[11,R[209],E,R[874],11,[[],["bool"]]],[11,R[210],E,R[875],11,[[],["bool"]]],[11,"new",R[345],R[31],121,[[],[R[32]]]],[11,R[516],E,R[31],121,[[["usize"]],[R[32]]]],[11,R[517],E,R[518],17,[[],[["result",[R[44]]],[R[44]]]]],[11,R[519],E,R[520],17,[[["self"]],["bool"]]],[11,R[506],E,R[507],59,[[],[R[30]]]],[11,R[508],E,R[509],59,[[],[R[30]]]],[11,"parallel",E,R[510],59,[[],[R[30]]]],[11,"new",E,R[511],59,[[["usize"]],[R[30]]]],[11,R[512],E,R[513],59,[[["usize"]],[R[30]]]],[11,"new",E,R[514],127,[[["s"]],[R[515]]]]],"p":[[8,R[216]],[8,R[217]],[8,R[218]],[8,R[219]],[3,R[226]],[3,R[227]],[8,R[230]],[8,"ToSimd"],[8,"Zero"],[8,"One"],[8,"Float"],[3,R[533]],[8,"Num"],[8,R[270]],[8,R[234]],[8,R[272]],[8,"Domain"],[3,"DspVec"],[8,R[289]],[8,R[282]],[8,R[239]],[8,"SumOps"],[8,R[259]],[8,R[238]],[8,R[237]],[8,R[252]],[8,R[255]],[8,R[787]],[8,R[291]],[8,R[294]],[8,R[290]],[8,R[293]],[8,R[249]],[4,R[213]],[4,R[214]],[8,R[261]],[8,R[242]],[8,R[269]],[8,R[262]],[8,R[292]],[8,R[263]],[8,R[283]],[8,R[265]],[8,R[281]],[8,R[251]],[8,R[256]],[8,"Resize"],[8,R[280]],[8,"Vector"],[8,R[285]],[8,R[233]],[8,R[253]],[8,R[236]],[8,R[286]],[8,R[241]],[8,R[250]],[8,"TrigOps"],[8,R[278]],[8,R[258]],[3,R[211]],[8,"Buffer"],[8,R[260]],[8,R[273]],[8,R[288]],[8,R[279]],[8,R[245]],[3,R[212]],[8,R[749]],[8,R[244]],[8,R[276]],[8,R[275]],[8,R[287]],[8,R[773]],[8,R[248]],[8,R[243]],[8,R[268]],[8,"ToSlice"],[8,"Stats"],[8,R[246]],[8,R[284]],[8,R[247]],[8,R[240]],[8,R[254]],[4,R[215]],[8,R[266]],[8,R[257]],[8,R[264]],[8,R[295]],[8,R[297]],[8,R[296]],[8,R[274]],[8,R[790]],[8,R[680]],[8,R[232]],[8,R[235]],[8,R[271]],[8,"RealOps"],[8,R[267]],[8,R[277]],[8,"Matrix"],[8,R[332]],[8,R[333]],[8,R[334]],[8,R[406]],[8,R[329]],[8,R[330]],[8,R[331]],[3,R[220]],[3,R[221]],[3,R[222]],[3,R[223]],[3,R[224]],[3,R[225]],[3,"Real"],[3,R[533]],[3,"Time"],[3,"Freq"],[3,R[303]],[3,R[231]],[3,R[304]],[3,R[305]],[3,R[229]],[3,R[300]],[3,R[299]],[3,R[298]],[3,R[302]],[3,R[301]],[3,R[228]],[3,R[431]],[3,R[335]],[3,R[336]],[3,R[337]],[3,R[338]]]};
searchIndex["basic_dsp_matrix"]={"doc":"In this lib a matrix is simply a collection of vectors.…","i":[[3,R[335],"basic_dsp_matrix",R[354],N,N],[3,R[336],E,R[355],N,N],[3,R[337],E,R[356],N,N],[3,R[338],E,R[357],N,N],[6,R[358],E,R[311],N,N],[6,R[359],E,R[312],N,N],[6,R[360],E,R[311],N,N],[6,R[361],E,R[312],N,N],[6,R[362],E,R[311],N,N],[6,R[363],E,R[312],N,N],[6,R[364],E,R[311],N,N],[6,R[365],E,R[312],N,N],[6,R[366],E,R[311],N,N],[6,R[367],E,R[312],N,N],[6,R[368],E,R[313],N,N],[6,R[369],E,R[314],N,N],[6,R[370],E,R[313],N,N],[6,R[371],E,R[314],N,N],[6,R[372],E,R[313],N,N],[6,R[373],E,R[314],N,N],[6,R[374],E,R[313],N,N],[6,R[375],E,R[314],N,N],[6,R[376],E,R[313],N,N],[6,R[377],E,R[314],N,N],[6,R[378],E,R[315],N,N],[6,R[379],E,R[316],N,N],[6,R[380],E,R[315],N,N],[6,R[381],E,R[316],N,N],[6,R[382],E,R[315],N,N],[6,R[383],E,R[316],N,N],[6,R[384],E,R[315],N,N],[6,R[385],E,R[317],N,N],[6,R[386],E,R[318],N,N],[6,R[387],E,R[317],N,N],[6,R[388],E,R[318],N,N],[6,R[389],E,R[317],N,N],[6,R[390],E,R[318],N,N],[6,R[391],E,R[317],N,N],[6,R[392],E,R[318],N,N],[6,R[393],E,R[317],N,N],[6,R[394],E,R[318],N,N],[6,R[395],E,R[317],N,N],[6,R[396],E,R[318],N,N],[6,R[397],E,R[317],N,N],[8,"Matrix",E,R[398],N,N],[10,R[9],E,R[339],0,[[["self"]],[T]]],[10,R[126],E,R[340],0,[[["self"],[T]]]],[10,R[399],E,R[400],0,[[["self"]],["usize"]]],[10,R[320],E,R[401],0,[[["self"]],["usize"]]],[10,R[402],E,R[403],0,[[["self"]],["usize"]]],[10,"rows",E,R[404],0,[[["self"]]]],[10,R[321],E,R[405],0,[[["self"]]]],[8,R[406],E,R[407],N,N],[16,R[92],E,E,1,N],[10,"to_mat",E,R[408],1,[[]]],[8,R[329],E,R[409],N,N],[16,R[92],E,E,2,N],[10,R[410],E,R[411],2,[[[R[49]],["bool"]]]],[8,R[330],E,R[319],N,N],[16,R[92],E,E,3,N],[10,R[412],E,R[413],3,[[]]],[8,R[331],E,R[319],N,N],[16,R[92],E,E,4,N],[10,R[414],E,R[45],4,[[]]],[8,R[332],E,R[39],N,N],[16,R[92],E,E,5,N],[10,R[415],E,R[416],5,[[]]],[8,R[333],E,R[39],N,N],[16,R[92],E,E,6,N],[10,R[417],E,R[418],6,[[]]],[8,R[334],E,R[419],N,N],[16,R[92],E,R[420],7,N],[10,"get",E,R[421],7,[[]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[103],E,E,8,[[[U]],["result"]]],[11,R[104],E,E,8,[[],["result"]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[102],E,E,8,[[["self"]],[T]]],[11,R[105],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[103],E,E,9,[[[U]],["result"]]],[11,R[104],E,E,9,[[],["result"]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[102],E,E,9,[[["self"]],[T]]],[11,R[105],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[103],E,E,10,[[[U]],["result"]]],[11,R[104],E,E,10,[[],["result"]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[102],E,E,10,[[["self"]],[T]]],[11,R[105],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[[U]],["result"]]],[11,R[104],E,E,11,[[],["result"]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[102],E,E,11,[[["self"]],[T]]],[11,R[105],E,E,11,[[["self"]],["typeid"]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[126],E,E,8,[[["self"],[T]]]],[11,R[399],E,E,8,[[["self"]],["usize"]]],[11,R[320],E,E,8,[[["self"]],["usize"]]],[11,R[402],E,E,8,[[["self"]],["usize"]]],[11,"rows",E,E,8,[[["self"]]]],[11,R[321],E,E,8,[[["self"]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[126],E,E,9,[[["self"],[T]]]],[11,R[399],E,E,9,[[["self"]],["usize"]]],[11,R[320],E,E,9,[[["self"]],["usize"]]],[11,R[402],E,E,9,[[["self"]],["usize"]]],[11,"rows",E,E,9,[[["self"]]]],[11,R[321],E,E,9,[[["self"]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[126],E,E,10,[[["self"],[T]]]],[11,R[399],E,E,10,[[["self"]],["usize"]]],[11,R[320],E,E,10,[[["self"]],["usize"]]],[11,R[402],E,E,10,[[["self"]],["usize"]]],[11,"rows",E,E,10,[[["self"]]]],[11,R[321],E,E,10,[[["self"]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[126],E,E,11,[[["self"],[T]]]],[11,R[399],E,E,11,[[["self"]],["usize"]]],[11,R[320],E,E,11,[[["self"]],["usize"]]],[11,R[402],E,E,11,[[["self"]],["usize"]]],[11,"rows",E,E,11,[[["self"]]]],[11,R[321],E,E,11,[[["self"]]]],[11,"get",E,E,8,[[]]],[11,"get",E,E,9,[[]]],[11,"get",E,E,10,[[]]],[11,"get",E,E,11,[[]]],[11,R[343],E,E,8,[[["self"]]]],[11,R[184],E,E,8,[[["self"]]]],[11,R[343],E,E,9,[[["self"]]]],[11,R[184],E,E,9,[[["self"]]]],[11,R[343],E,E,10,[[["self"]]]],[11,R[184],E,E,10,[[["self"]]]],[11,R[343],E,E,11,[[["self"]]]],[11,R[184],E,E,11,[[["self"]]]],[11,"sum",E,E,8,[[["self"]],["vec"]]],[11,"sum_sq",E,E,8,[[["self"]],["vec"]]],[11,"sum",E,E,9,[[["self"]]]],[11,"sum_sq",E,E,9,[[["self"]]]],[11,"sum",E,E,9,[[["self"]]]],[11,"sum_sq",E,E,9,[[["self"]]]],[11,"sum",E,E,9,[[["self"]]]],[11,"sum_sq",E,E,9,[[["self"]]]],[11,R[194],E,E,8,[[["self"]],[["vec",[R[194]]],[R[194]]]]],[11,R[194],E,E,9,[[["self"]]]],[11,R[194],E,E,10,[[["self"]]]],[11,R[194],E,E,11,[[["self"]]]],[11,R[130],E,E,8,[[]]],[11,R[131],E,E,8,[[]]],[11,R[24],E,E,8,[[]]],[11,R[341],E,E,8,[[]]],[11,"phase",E,E,8,[[]]],[11,R[130],E,E,9,[[]]],[11,R[131],E,E,9,[[]]],[11,R[24],E,E,9,[[]]],[11,R[341],E,E,9,[[]]],[11,"phase",E,E,9,[[]]],[11,R[130],E,E,10,[[]]],[11,R[131],E,E,10,[[]]],[11,R[24],E,E,10,[[]]],[11,R[341],E,E,10,[[]]],[11,"phase",E,E,10,[[]]],[11,R[130],E,E,11,[[]]],[11,R[131],E,E,11,[[]]],[11,R[24],E,E,11,[[]]],[11,R[341],E,E,11,[[]]],[11,"phase",E,E,11,[[]]],[11,R[170],E,E,8,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[171],E,E,8,[[["u32"],["b"],["self"],[R[15]]],[R[38]]]],[11,R[172],E,E,8,[[["option",[R[15]]],["b"],["usize"],["self"],[T],[R[15]]],[R[38]]]],[11,R[322],E,E,8,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,8,[[["self"],["u32"]]]],[11,R[170],E,E,9,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[171],E,E,9,[[["u32"],["b"],["self"],[R[15]]],[R[38]]]],[11,R[172],E,E,9,[[["option",[R[15]]],["b"],["usize"],["self"],[T],[R[15]]],[R[38]]]],[11,R[322],E,E,9,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,9,[[["self"],["u32"]]]],[11,R[170],E,E,10,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[171],E,E,10,[[["u32"],["b"],["self"],[R[15]]],[R[38]]]],[11,R[172],E,E,10,[[["option",[R[15]]],["b"],["usize"],["self"],[T],[R[15]]],[R[38]]]],[11,R[322],E,E,10,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,10,[[["self"],["u32"]]]],[11,R[170],E,E,11,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[171],E,E,11,[[["u32"],["b"],["self"],[R[15]]],[R[38]]]],[11,R[172],E,E,11,[[["option",[R[15]]],["b"],["usize"],["self"],[T],[R[15]]],[R[38]]]],[11,R[322],E,E,11,[[["self"],["b"],["usize"]]]],[11,R[173],E,E,11,[[["self"],["u32"]]]],[11,R[158],E,E,8,[[["b"]],[R[75]]]],[11,"sfft",E,E,8,[[["b"]],[R[75]]]],[11,R[159],E,E,8,[[[R[73]],["b"]],[R[75]]]],[11,R[158],E,E,9,[[["b"]],[R[75]]]],[11,"sfft",E,E,9,[[["b"]],[R[75]]]],[11,R[159],E,E,9,[[[R[73]],["b"]],[R[75]]]],[11,R[158],E,E,10,[[["b"]],[R[75]]]],[11,"sfft",E,E,10,[[["b"]],[R[75]]]],[11,R[159],E,E,10,[[[R[73]],["b"]],[R[75]]]],[11,R[158],E,E,11,[[["b"]],[R[75]]]],[11,"sfft",E,E,11,[[["b"]],[R[75]]]],[11,R[159],E,E,11,[[[R[73]],["b"]],[R[75]]]],[11,R[162],E,E,8,[[["b"]],[R[75]]]],[11,"sifft",E,E,8,[[["b"]],[R[75]]]],[11,R[163],E,E,8,[[[R[73]],["b"]],[R[75]]]],[11,R[162],E,E,9,[[["b"]],[R[75]]]],[11,"sifft",E,E,9,[[["b"]],[R[75]]]],[11,R[163],E,E,9,[[[R[73]],["b"]],[R[75]]]],[11,R[162],E,E,10,[[["b"]],[R[75]]]],[11,"sifft",E,E,10,[[["b"]],[R[75]]]],[11,R[163],E,E,10,[[[R[73]],["b"]],[R[75]]]],[11,R[162],E,E,11,[[["b"]],[R[75]]]],[11,"sifft",E,E,11,[[["b"]],[R[75]]]],[11,R[163],E,E,11,[[[R[73]],["b"]],[R[75]]]],[11,R[166],E,E,8,[[["self"],["b"],["o"]],[R[38]]]],[11,R[166],E,E,9,[[["self"],["b"],["o"]],[R[38]]]],[11,R[166],E,E,10,[[["self"],["b"],["o"]],[R[38]]]],[11,R[166],E,E,11,[[["self"],["b"],["o"]],[R[38]]]],[11,R[180],E,E,8,[[["self"],["self"]],[R[38]]]],[11,R[181],E,E,8,[[["self"],["self"]],[R[38]]]],[11,R[183],E,E,8,[[["self"],["self"]],[R[38]]]],[11,R[182],E,E,8,[[["self"],["self"]],[R[38]]]],[11,R[180],E,E,8,[[["self"],["v"]],[R[38]]]],[11,R[181],E,E,8,[[["self"],["v"]],[R[38]]]],[11,R[183],E,E,8,[[["self"],["v"]],[R[38]]]],[11,R[182],E,E,8,[[["self"],["v"]],[R[38]]]],[11,R[180],E,E,9,[[["self"],["self"]],[R[38]]]],[11,R[181],E,E,9,[[["self"],["self"]],[R[38]]]],[11,R[183],E,E,9,[[["self"],["self"]],[R[38]]]],[11,R[182],E,E,9,[[["self"],["self"]],[R[38]]]],[11,R[180],E,E,9,[[["self"],["v"]],[R[38]]]],[11,R[181],E,E,9,[[["self"],["v"]],[R[38]]]],[11,R[183],E,E,9,[[["self"],["v"]],[R[38]]]],[11,R[182],E,E,9,[[["self"],["v"]],[R[38]]]],[11,R[180],E,E,10,[[["self"],["self"]],[R[38]]]],[11,R[181],E,E,10,[[["self"],["self"]],[R[38]]]],[11,R[183],E,E,10,[[["self"],["self"]],[R[38]]]],[11,R[182],E,E,10,[[["self"],["self"]],[R[38]]]],[11,R[180],E,E,10,[[["self"],["v"]],[R[38]]]],[11,R[181],E,E,10,[[["self"],["v"]],[R[38]]]],[11,R[183],E,E,10,[[["self"],["v"]],[R[38]]]],[11,R[182],E,E,10,[[["self"],["v"]],[R[38]]]],[11,R[180],E,E,11,[[["self"],["self"]],[R[38]]]],[11,R[181],E,E,11,[[["self"],["self"]],[R[38]]]],[11,R[183],E,E,11,[[["self"],["self"]],[R[38]]]],[11,R[182],E,E,11,[[["self"],["self"]],[R[38]]]],[11,R[180],E,E,11,[[["self"],["v"]],[R[38]]]],[11,R[181],E,E,11,[[["self"],["v"]],[R[38]]]],[11,R[183],E,E,11,[[["self"],["v"]],[R[38]]]],[11,R[182],E,E,11,[[["self"],["v"]],[R[38]]]],[11,"wrap",E,E,8,[[["self"],[T]]]],[11,"unwrap",E,E,8,[[["self"],[T]]]],[11,"wrap",E,E,9,[[["self"],[T]]]],[11,"unwrap",E,E,9,[[["self"],[T]]]],[11,"wrap",E,E,10,[[["self"],[T]]]],[11,"unwrap",E,E,10,[[["self"],[T]]]],[11,"wrap",E,E,11,[[["self"],[T]]]],[11,"unwrap",E,E,11,[[["self"],[T]]]],[11,"diff",E,E,8,[[["self"]]]],[11,R[189],E,E,8,[[["self"]]]],[11,R[344],E,E,8,[[["self"]]]],[11,"diff",E,E,9,[[["self"]]]],[11,R[189],E,E,9,[[["self"]]]],[11,R[344],E,E,9,[[["self"]]]],[11,"diff",E,E,10,[[["self"]]]],[11,R[189],E,E,10,[[["self"]]]],[11,R[344],E,E,10,[[["self"]]]],[11,"diff",E,E,11,[[["self"]]]],[11,R[189],E,E,11,[[["self"]]]],[11,R[344],E,E,11,[[["self"]]]],[11,R[156],E,E,8,[[["b"]]]],[11,"fft",E,E,8,[[["b"]]]],[11,R[157],E,E,8,[[[R[73]],["b"]]]],[11,R[156],E,E,9,[[["b"]]]],[11,"fft",E,E,9,[[["b"]]]],[11,R[157],E,E,9,[[[R[73]],["b"]]]],[11,R[156],E,E,10,[[["b"]]]],[11,"fft",E,E,10,[[["b"]]]],[11,R[157],E,E,10,[[[R[73]],["b"]]]],[11,R[156],E,E,11,[[["b"]]]],[11,"fft",E,E,11,[[["b"]]]],[11,R[157],E,E,11,[[[R[73]],["b"]]]],[11,R[192],E,E,8,[[["a"],["self"],["f"]]]],[11,R[192],E,E,8,[[["a"],["self"],["f"]]]],[11,R[192],E,E,9,[[["a"],["self"],["f"]]]],[11,R[192],E,E,9,[[["a"],["self"],["f"]]]],[11,R[192],E,E,10,[[["a"],["self"],["f"]]]],[11,R[192],E,E,10,[[["a"],["self"],["f"]]]],[11,R[192],E,E,11,[[["a"],["self"],["f"]]]],[11,R[192],E,E,11,[[["a"],["self"],["f"]]]],[11,"scale",E,E,8,[[["self"],[T]]]],[11,"scale",E,E,8,[[["self"],[R[5]]]]],[11,"scale",E,E,9,[[["self"],[T]]]],[11,"scale",E,E,9,[[["self"],[R[5]]]]],[11,"scale",E,E,10,[[["self"],[T]]]],[11,"scale",E,E,10,[[["self"],[R[5]]]]],[11,"scale",E,E,11,[[["self"],[T]]]],[11,"scale",E,E,11,[[["self"],[R[5]]]]],[11,"sqrt",E,E,8,[[["self"]]]],[11,"square",E,E,8,[[["self"]]]],[11,"root",E,E,8,[[["self"],[T]]]],[11,"powf",E,E,8,[[["self"],[T]]]],[11,"ln",E,E,8,[[["self"]]]],[11,"exp",E,E,8,[[["self"]]]],[11,"log",E,E,8,[[["self"],[T]]]],[11,"expf",E,E,8,[[["self"],[T]]]],[11,"sqrt",E,E,9,[[["self"]]]],[11,"square",E,E,9,[[["self"]]]],[11,"root",E,E,9,[[["self"],[T]]]],[11,"powf",E,E,9,[[["self"],[T]]]],[11,"ln",E,E,9,[[["self"]]]],[11,"exp",E,E,9,[[["self"]]]],[11,"log",E,E,9,[[["self"],[T]]]],[11,"expf",E,E,9,[[["self"],[T]]]],[11,"sqrt",E,E,10,[[["self"]]]],[11,"square",E,E,10,[[["self"]]]],[11,"root",E,E,10,[[["self"],[T]]]],[11,"powf",E,E,10,[[["self"],[T]]]],[11,"ln",E,E,10,[[["self"]]]],[11,"exp",E,E,10,[[["self"]]]],[11,"log",E,E,10,[[["self"],[T]]]],[11,"expf",E,E,10,[[["self"],[T]]]],[11,"sqrt",E,E,11,[[["self"]]]],[11,"square",E,E,11,[[["self"]]]],[11,"root",E,E,11,[[["self"],[T]]]],[11,"powf",E,E,11,[[["self"],[T]]]],[11,"ln",E,E,11,[[["self"]]]],[11,"exp",E,E,11,[[["self"]]]],[11,"log",E,E,11,[[["self"],[T]]]],[11,"expf",E,E,11,[[["self"],[T]]]],[11,R[129],E,E,8,[[["self"]],[R[52]]]],[11,R[129],E,E,9,[[["self"]],[R[52]]]],[11,R[129],E,E,10,[[["self"]],[R[52]]]],[11,R[129],E,E,11,[[["self"]],[R[52]]]],[11,R[169],E,E,8,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,8,[[["self"],[R[17]],[T]]]],[11,R[169],E,E,9,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,9,[[["self"],[R[17]],[T]]]],[11,R[169],E,E,10,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,10,[[["self"],[R[17]],[T]]]],[11,R[169],E,E,11,[[["self"],[R[15]],[T]]]],[11,R[169],E,E,11,[[["self"],[R[17]],[T]]]],[11,R[18],E,E,8,[[],[R[75]]]],[11,R[18],E,E,9,[[],[R[75]]]],[11,R[18],E,E,10,[[],[R[75]]]],[11,R[18],E,E,11,[[],[R[75]]]],[11,R[167],E,E,8,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[167],E,E,8,[[["b"],[R[16]],["usize"],["self"],[T]]]],[11,R[167],E,E,9,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[167],E,E,9,[[["b"],[R[16]],["usize"],["self"],[T]]]],[11,R[167],E,E,10,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[167],E,E,10,[[["b"],[R[16]],["usize"],["self"],[T]]]],[11,R[167],E,E,11,[[["b"],["usize"],["self"],[T],[R[14]]]]],[11,R[167],E,E,11,[[["b"],[R[16]],["usize"],["self"],[T]]]],[11,R[164],E,E,8,[[["b"]]]],[11,R[165],E,E,8,[[["b"]]]],[11,R[164],E,E,9,[[["b"]]]],[11,R[165],E,E,9,[[["b"]]]],[11,R[164],E,E,10,[[["b"]]]],[11,R[165],E,E,10,[[["b"]]]],[11,R[164],E,E,11,[[["b"]]]],[11,R[165],E,E,11,[[["b"]]]],[11,"abs",E,E,8,[[["self"]]]],[11,"abs",E,E,9,[[["self"]]]],[11,"abs",E,E,10,[[["self"]]]],[11,"abs",E,E,11,[[["self"]]]],[11,R[175],E,E,8,[[["self"],["b"],[T]]]],[11,R[174],E,E,8,[[["self"],["b"],[T]]]],[11,R[175],E,E,9,[[["self"],["b"],[T]]]],[11,R[174],E,E,9,[[["self"],["b"],[T]]]],[11,R[175],E,E,10,[[["self"],["b"],[T]]]],[11,R[174],E,E,10,[[["self"],["b"],[T]]]],[11,R[175],E,E,11,[[["self"],["b"],[T]]]],[11,R[174],E,E,11,[[["self"],["b"],[T]]]],[11,R[177],E,E,8,[[[R[323]]],["self"]]],[11,R[178],E,E,8,[[["bool"],[R[49]],[R[323]]],["self"]]],[11,R[177],E,E,9,[[[R[324]]],["self"]]],[11,R[178],E,E,9,[[[R[324]],[R[49]],["bool"]],["self"]]],[11,R[177],E,E,10,[[[R[325]]],["self"]]],[11,R[178],E,E,10,[[[R[49]],[R[325]],["bool"]],["self"]]],[11,R[177],E,E,11,[[[R[326]]],["self"]]],[11,R[178],E,E,11,[[["bool"],[R[49]],[R[326]]],["self"]]],[11,R[193],E,E,8,[[["a"],["fmap"],["faggr"],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[193],E,E,9,[[["a"],["fmap"],["faggr"],["self"]],[R[98]]]],[11,R[193],E,E,10,[[["a"],["fmap"],["faggr"],["self"]],[R[98]]]],[11,R[193],E,E,11,[[["a"],["fmap"],["faggr"],["self"]],[R[98]]]],[11,R[154],E,E,8,[[[R[73]],["self"]]]],[11,R[155],E,E,8,[[[R[73]],["self"]]]],[11,R[154],E,E,9,[[[R[73]],["self"]]]],[11,R[155],E,E,9,[[[R[73]],["self"]]]],[11,R[154],E,E,10,[[[R[73]],["self"]]]],[11,R[155],E,E,10,[[[R[73]],["self"]]]],[11,R[154],E,E,11,[[[R[73]],["self"]]]],[11,R[155],E,E,11,[[[R[73]],["self"]]]],[11,R[141],E,E,8,[[["self"],["o"]],[R[38]]]],[11,R[142],E,E,8,[[["self"],["o"]],[R[38]]]],[11,R[141],E,E,9,[[["self"],["o"]],[R[38]]]],[11,R[142],E,E,9,[[["self"],["o"]],[R[38]]]],[11,R[141],E,E,10,[[["self"],["o"]],[R[38]]]],[11,R[142],E,E,10,[[["self"],["o"]],[R[38]]]],[11,R[141],E,E,11,[[["self"],["o"]],[R[38]]]],[11,R[142],E,E,11,[[["self"],["o"]],[R[38]]]],[11,R[144],E,E,8,[[["b"]]]],[11,R[144],E,E,9,[[["b"]]]],[11,R[144],E,E,10,[[["b"]]]],[11,R[144],E,E,11,[[["b"]]]],[11,R[195],E,E,8,[[["self"],["usize"]],[[R[98],["vec"]],["vec",[R[95]]]]]],[11,R[195],E,E,9,[[["self"],["usize"]],[R[98]]]],[11,R[195],E,E,10,[[["self"],["usize"]],[R[98]]]],[11,R[195],E,E,11,[[["self"],["usize"]],[R[98]]]],[11,R[201],E,E,8,[[["self"]],["vec"]]],[11,R[200],E,E,8,[[["self"]],["vec"]]],[11,R[201],E,E,9,[[["self"]]]],[11,R[200],E,E,9,[[["self"]]]],[11,R[201],E,E,10,[[["self"]]]],[11,R[200],E,E,10,[[["self"]]]],[11,R[201],E,E,11,[[["self"]]]],[11,R[200],E,E,11,[[["self"]]]],[11,R[199],E,E,8,[[["self"],["usize"]],[[R[98],["vec"]],["vec",[R[95]]]]]],[11,R[199],E,E,9,[[["self"],["usize"]],[R[98]]]],[11,R[199],E,E,10,[[["self"],["usize"]],[R[98]]]],[11,R[199],E,E,11,[[["self"],["usize"]],[R[98]]]],[11,R[160],E,E,8,[[["b"]]]],[11,"ifft",E,E,8,[[["b"]]]],[11,R[161],E,E,8,[[[R[73]],["b"]]]],[11,R[160],E,E,9,[[["b"]]]],[11,"ifft",E,E,9,[[["b"]]]],[11,R[161],E,E,9,[[[R[73]],["b"]]]],[11,R[160],E,E,10,[[["b"]]]],[11,"ifft",E,E,10,[[["b"]]]],[11,R[161],E,E,10,[[[R[73]],["b"]]]],[11,R[160],E,E,11,[[["b"]]]],[11,"ifft",E,E,11,[[["b"]]]],[11,R[161],E,E,11,[[[R[73]],["b"]]]],[11,R[198],E,E,8,[[["self"]],[["vec",[R[194]]],[R[194]]]]],[11,R[198],E,E,9,[[["self"]]]],[11,R[198],E,E,10,[[["self"]]]],[11,R[198],E,E,11,[[["self"]]]],[11,R[327],E,E,8,[[["o"],["self"]]]],[11,R[328],E,E,8,[[["o"],["self"]]]],[11,R[136],E,E,8,[[["o"],["self"]]]],[11,R[137],E,E,8,[[["o"],["self"]]]],[11,R[138],E,E,8,[[["o"],["self"]]]],[11,R[139],E,E,8,[[["o"],["self"]]]],[11,R[140],E,E,8,[[["o"],["self"]]]],[11,R[327],E,E,9,[[["o"],["self"]]]],[11,R[328],E,E,9,[[["o"],["self"]]]],[11,R[136],E,E,9,[[["o"],["self"]]]],[11,R[137],E,E,9,[[["o"],["self"]]]],[11,R[138],E,E,9,[[["o"],["self"]]]],[11,R[139],E,E,9,[[["o"],["self"]]]],[11,R[140],E,E,9,[[["o"],["self"]]]],[11,R[327],E,E,10,[[["o"],["self"]]]],[11,R[328],E,E,10,[[["o"],["self"]]]],[11,R[136],E,E,10,[[["o"],["self"]]]],[11,R[137],E,E,10,[[["o"],["self"]]]],[11,R[138],E,E,10,[[["o"],["self"]]]],[11,R[139],E,E,10,[[["o"],["self"]]]],[11,R[140],E,E,10,[[["o"],["self"]]]],[11,R[327],E,E,11,[[["o"],["self"]]]],[11,R[328],E,E,11,[[["o"],["self"]]]],[11,R[136],E,E,11,[[["o"],["self"]]]],[11,R[137],E,E,11,[[["o"],["self"]]]],[11,R[138],E,E,11,[[["o"],["self"]]]],[11,R[139],E,E,11,[[["o"],["self"]]]],[11,R[140],E,E,11,[[["o"],["self"]]]],[11,"add",E,E,8,[[["self"],["self"]],[R[38]]]],[11,"sub",E,E,8,[[["self"],["self"]],[R[38]]]],[11,"div",E,E,8,[[["self"],["self"]],[R[38]]]],[11,"mul",E,E,8,[[["self"],["self"]],[R[38]]]],[11,"add",E,E,8,[[["self"],["v"]],[R[38]]]],[11,"sub",E,E,8,[[["self"],["v"]],[R[38]]]],[11,"div",E,E,8,[[["self"],["v"]],[R[38]]]],[11,"mul",E,E,8,[[["self"],["v"]],[R[38]]]],[11,"add",E,E,9,[[["self"],["self"]],[R[38]]]],[11,"sub",E,E,9,[[["self"],["self"]],[R[38]]]],[11,"div",E,E,9,[[["self"],["self"]],[R[38]]]],[11,"mul",E,E,9,[[["self"],["self"]],[R[38]]]],[11,"add",E,E,9,[[["self"],["v"]],[R[38]]]],[11,"sub",E,E,9,[[["self"],["v"]],[R[38]]]],[11,"div",E,E,9,[[["self"],["v"]],[R[38]]]],[11,"mul",E,E,9,[[["self"],["v"]],[R[38]]]],[11,"add",E,E,10,[[["self"],["self"]],[R[38]]]],[11,"sub",E,E,10,[[["self"],["self"]],[R[38]]]],[11,"div",E,E,10,[[["self"],["self"]],[R[38]]]],[11,"mul",E,E,10,[[["self"],["self"]],[R[38]]]],[11,"add",E,E,10,[[["self"],["v"]],[R[38]]]],[11,"sub",E,E,10,[[["self"],["v"]],[R[38]]]],[11,"div",E,E,10,[[["self"],["v"]],[R[38]]]],[11,"mul",E,E,10,[[["self"],["v"]],[R[38]]]],[11,"add",E,E,11,[[["self"],["self"]],[R[38]]]],[11,"sub",E,E,11,[[["self"],["self"]],[R[38]]]],[11,"div",E,E,11,[[["self"],["self"]],[R[38]]]],[11,"mul",E,E,11,[[["self"],["self"]],[R[38]]]],[11,"add",E,E,11,[[["self"],["v"]],[R[38]]]],[11,"sub",E,E,11,[[["self"],["v"]],[R[38]]]],[11,"div",E,E,11,[[["self"],["v"]],[R[38]]]],[11,"mul",E,E,11,[[["self"],["v"]],[R[38]]]],[11,R[143],E,E,8,[[["self"],[T]]]],[11,"conj",E,E,8,[[["self"]]]],[11,R[143],E,E,9,[[["self"],[T]]]],[11,"conj",E,E,9,[[["self"]]]],[11,R[143],E,E,10,[[["self"],[T]]]],[11,"conj",E,E,10,[[["self"]]]],[11,R[143],E,E,11,[[["self"],[T]]]],[11,"conj",E,E,11,[[["self"]]]],[11,R[190],E,E,8,[[["self"],[R[323]]],[["vec"],[R[98],["vec"]]]]],[11,R[190],E,E,9,[[[R[324]],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[190],E,E,10,[[["self"],[R[325]]],[["vec"],[R[98],["vec"]]]]],[11,R[190],E,E,11,[[[R[326]],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[190],E,E,8,[[["v"],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[190],E,E,9,[[["v"],["self"]],[R[98]]]],[11,R[190],E,E,10,[[["v"],["self"]],[R[98]]]],[11,R[190],E,E,11,[[["v"],["self"]],[R[98]]]],[11,"sin",E,E,8,[[["self"]]]],[11,"cos",E,E,8,[[["self"]]]],[11,"tan",E,E,8,[[["self"]]]],[11,"asin",E,E,8,[[["self"]]]],[11,"acos",E,E,8,[[["self"]]]],[11,"atan",E,E,8,[[["self"]]]],[11,"sinh",E,E,8,[[["self"]]]],[11,"cosh",E,E,8,[[["self"]]]],[11,"tanh",E,E,8,[[["self"]]]],[11,"asinh",E,E,8,[[["self"]]]],[11,"acosh",E,E,8,[[["self"]]]],[11,"atanh",E,E,8,[[["self"]]]],[11,"sin",E,E,9,[[["self"]]]],[11,"cos",E,E,9,[[["self"]]]],[11,"tan",E,E,9,[[["self"]]]],[11,"asin",E,E,9,[[["self"]]]],[11,"acos",E,E,9,[[["self"]]]],[11,"atan",E,E,9,[[["self"]]]],[11,"sinh",E,E,9,[[["self"]]]],[11,"cosh",E,E,9,[[["self"]]]],[11,"tanh",E,E,9,[[["self"]]]],[11,"asinh",E,E,9,[[["self"]]]],[11,"acosh",E,E,9,[[["self"]]]],[11,"atanh",E,E,9,[[["self"]]]],[11,"sin",E,E,10,[[["self"]]]],[11,"cos",E,E,10,[[["self"]]]],[11,"tan",E,E,10,[[["self"]]]],[11,"asin",E,E,10,[[["self"]]]],[11,"acos",E,E,10,[[["self"]]]],[11,"atan",E,E,10,[[["self"]]]],[11,"sinh",E,E,10,[[["self"]]]],[11,"cosh",E,E,10,[[["self"]]]],[11,"tanh",E,E,10,[[["self"]]]],[11,"asinh",E,E,10,[[["self"]]]],[11,"acosh",E,E,10,[[["self"]]]],[11,"atanh",E,E,10,[[["self"]]]],[11,"sin",E,E,11,[[["self"]]]],[11,"cos",E,E,11,[[["self"]]]],[11,"tan",E,E,11,[[["self"]]]],[11,"asin",E,E,11,[[["self"]]]],[11,"acos",E,E,11,[[["self"]]]],[11,"atan",E,E,11,[[["self"]]]],[11,"sinh",E,E,11,[[["self"]]]],[11,"cosh",E,E,11,[[["self"]]]],[11,"tanh",E,E,11,[[["self"]]]],[11,"asinh",E,E,11,[[["self"]]]],[11,"acosh",E,E,11,[[["self"]]]],[11,"atanh",E,E,11,[[["self"]]]],[11,R[132],E,E,8,[[["b"]]]],[11,R[133],E,E,8,[[["b"]]]],[11,R[134],E,E,8,[[["b"]]]],[11,R[135],E,E,8,[[["b"]]]],[11,R[342],E,E,8,[[["b"]]]],[11,R[132],E,E,9,[[["b"]]]],[11,R[133],E,E,9,[[["b"]]]],[11,R[134],E,E,9,[[["b"]]]],[11,R[135],E,E,9,[[["b"]]]],[11,R[342],E,E,9,[[["b"]]]],[11,R[132],E,E,10,[[["b"]]]],[11,R[133],E,E,10,[[["b"]]]],[11,R[134],E,E,10,[[["b"]]]],[11,R[135],E,E,10,[[["b"]]]],[11,R[342],E,E,10,[[["b"]]]],[11,R[132],E,E,11,[[["b"]]]],[11,R[133],E,E,11,[[["b"]]]],[11,R[134],E,E,11,[[["b"]]]],[11,R[135],E,E,11,[[["b"]]]],[11,R[342],E,E,11,[[["b"]]]],[11,"mirror",E,E,8,[[["self"],["b"]]]],[11,R[152],E,E,8,[[["self"]]]],[11,R[153],E,E,8,[[["self"]]]],[11,"mirror",E,E,9,[[["self"],["b"]]]],[11,R[152],E,E,9,[[["self"]]]],[11,R[153],E,E,9,[[["self"]]]],[11,"mirror",E,E,10,[[["self"],["b"]]]],[11,R[152],E,E,10,[[["self"]]]],[11,R[153],E,E,10,[[["self"]]]],[11,"mirror",E,E,11,[[["self"],["b"]]]],[11,R[152],E,E,11,[[["self"]]]],[11,R[153],E,E,11,[[["self"]]]],[11,"offset",E,E,8,[[["self"],[T]]]],[11,"offset",E,E,8,[[["self"],[R[5]]]]],[11,"offset",E,E,9,[[["self"],[T]]]],[11,"offset",E,E,9,[[["self"],[R[5]]]]],[11,"offset",E,E,10,[[["self"],[T]]]],[11,"offset",E,E,10,[[["self"],[R[5]]]]],[11,"offset",E,E,11,[[["self"],[T]]]],[11,"offset",E,E,11,[[["self"],[R[5]]]]],[11,R[191],E,E,8,[[["self"],[R[323]]],[["vec"],[R[98],["vec"]]]]],[11,R[191],E,E,9,[[[R[324]],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[191],E,E,10,[[["self"],[R[325]]],[["vec"],[R[98],["vec"]]]]],[11,R[191],E,E,11,[[[R[326]],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[191],E,E,8,[[["v"],["self"]],[["vec"],[R[98],["vec"]]]]],[11,R[191],E,E,9,[[["v"],["self"]],[R[98]]]],[11,R[191],E,E,10,[[["v"],["self"]],[R[98]]]],[11,R[191],E,E,11,[[["v"],["self"]],[R[98]]]],[11,"resize",E,E,8,[[["self"],["usize"]],[R[38]]]],[11,"resize",E,E,9,[[["self"],["usize"]],[R[38]]]],[11,"resize",E,E,10,[[["self"],["usize"]],[R[38]]]],[11,"resize",E,E,11,[[["self"],["usize"]],[R[38]]]],[11,R[145],E,E,8,[[["self"]]]],[11,R[146],E,E,8,[[["self"]]]],[11,R[147],E,E,8,[[["self"]]]],[11,R[148],E,E,8,[[["self"]]]],[11,R[149],E,E,8,[[["self"],[T]]]],[11,R[150],E,E,8,[[["self"],[T]]]],[11,R[151],E,E,8,[[["self"],[T]]]],[11,R[145],E,E,9,[[["self"]]]],[11,R[146],E,E,9,[[["self"]]]],[11,R[147],E,E,9,[[["self"]]]],[11,R[148],E,E,9,[[["self"]]]],[11,R[149],E,E,9,[[["self"],[T]]]],[11,R[150],E,E,9,[[["self"],[T]]]],[11,R[151],E,E,9,[[["self"],[T]]]],[11,R[145],E,E,10,[[["self"]]]],[11,R[146],E,E,10,[[["self"]]]],[11,R[147],E,E,10,[[["self"]]]],[11,R[148],E,E,10,[[["self"]]]],[11,R[149],E,E,10,[[["self"],[T]]]],[11,R[150],E,E,10,[[["self"],[T]]]],[11,R[151],E,E,10,[[["self"],[T]]]],[11,R[145],E,E,11,[[["self"]]]],[11,R[146],E,E,11,[[["self"]]]],[11,R[147],E,E,11,[[["self"]]]],[11,R[148],E,E,11,[[["self"]]]],[11,R[149],E,E,11,[[["self"],[T]]]],[11,R[150],E,E,11,[[["self"],[T]]]],[11,R[151],E,E,11,[[["self"],[T]]]],[11,"domain",E,E,8,[[["self"]],[R[49]]]],[11,R[100],E,E,8,[[["self"]],["bool"]]],[11,"domain",E,E,9,[[["self"]],[R[49]]]],[11,R[100],E,E,9,[[["self"]],["bool"]]],[11,"domain",E,E,10,[[["self"]],[R[49]]]],[11,R[100],E,E,10,[[["self"]],["bool"]]],[11,"domain",E,E,11,[[["self"]],[R[49]]]],[11,R[100],E,E,11,[[["self"]],["bool"]]],[11,R[168],E,E,8,[[["self"],["b"],["dspvec"]],[R[38]]]],[11,R[168],E,E,9,[[["self"],["b"],["dspvec"]],[R[38]]]],[11,R[168],E,E,10,[[["self"],["b"],["dspvec"]],[R[38]]]],[11,R[168],E,E,11,[[["self"],["b"],["dspvec"]],[R[38]]]],[11,R[168],E,E,8,[[["self"],["b"],["vec"]],[R[38]]]],[11,R[168],E,E,9,[[["self"],["b"]],[R[38]]]],[11,R[168],E,E,10,[[["self"],["b"]],[R[38]]]],[11,R[168],E,E,11,[[["self"],["b"]],[R[38]]]]],"p":[[8,"Matrix"],[8,R[406]],[8,R[329]],[8,R[330]],[8,R[331]],[8,R[332]],[8,R[333]],[8,R[334]],[3,R[335]],[3,R[336]],[3,R[337]],[3,R[338]]]};
searchIndex["basic_dsp_vector"]={"doc":"Basic digital signal processing (DSP) operations","i":[[3,R[211],R[29],R[422],N,N],[12,R[423],E,R[424],0,N],[12,R[425],E,E,0,N],[12,R[426],E,E,0,N],[12,R[427],E,E,0,N],[12,R[428],E,E,0,N],[3,R[298],E,R[0],N,N],[3,R[228],E,R[429],N,N],[3,R[299],E,R[0],N,N],[3,R[229],E,R[430],N,N],[3,R[431],E,R[432],N,N],[3,R[300],E,R[433],N,N],[3,R[212],E,R[434],N,N],[12,"sum",E,R[435],1,N],[12,"count",E,R[436],1,N],[12,"average",E,R[437],1,N],[12,"rms",E,R[438],1,N],[12,"min",E,R[439],1,N],[12,R[440],E,R[441],1,N],[12,"max",E,R[442],1,N],[12,R[443],E,R[444],1,N],[3,"DspVec",E,R[445],N,N],[12,"data",E,R[446],2,N],[3,R[301],E,R[447],N,N],[3,R[302],E,R[448],N,N],[4,R[213],E,R[449],N,N],[13,R[450],E,R[451],3,N],[13,R[452],E,R[453],3,N],[13,R[454],E,R[455],3,N],[13,R[456],E,R[457],3,N],[13,R[458],E,R[459],3,N],[13,R[460],E,R[461],3,N],[13,R[462],E,R[463],3,N],[13,R[464],E,R[465],3,N],[13,R[466],E,R[467],3,N],[13,R[468],E,R[469],3,N],[13,R[470],E,R[471],3,N],[13,R[472],E,R[473],3,N],[13,R[474],E,R[475],3,N],[13,R[476],E,R[477],3,N],[4,R[214],E,R[478],N,N],[13,"End",E,R[479],4,N],[13,"Surround",E,R[480],4,N],[13,"Center",E,R[481],4,N],[4,R[215],E,R[482],N,N],[13,"Time",E,R[483],5,N],[13,R[484],E,R[485],5,N],[5,R[486],E,R[487],N,[[],["string"]]],[0,R[488],E,R[489],N,N],[3,R[220],R[108],R[1],N,N],[3,R[221],E,R[1],N,N],[3,R[222],E,R[1],N,N],[3,R[223],E,R[1],N,N],[3,R[224],E,R[490],N,N],[3,R[225],E,R[491],N,N],[8,R[216],E,R[492],N,N],[10,R[2],E,R[3],6,[[["self"]],["bool"]]],[10,"calc",E,R[4],6,[[["self"],[T]],[T]]],[8,R[217],E,R[493],N,N],[10,R[2],E,R[3],7,[[["self"]],["bool"]]],[10,"calc",E,R[4],7,[[["self"],[T]],[T]]],[8,R[218],E,R[494],N,N],[10,R[2],E,R[3],8,[[["self"]],["bool"]]],[10,"calc",E,R[4],8,[[["self"],[T]],[R[5]]]],[8,R[219],E,R[495],N,N],[10,R[2],E,R[3],9,[[["self"]],["bool"]]],[10,"calc",E,R[4],9,[[["self"],[T]],[R[5]]]],[11,R[8],E,R[6],10,[[["self"]]]],[11,R[9],E,R[7],10,[[["self"]],[T]]],[11,R[8],E,R[6],11,[[["self"]]]],[11,R[9],E,R[7],11,[[["self"]],[T]]],[11,R[8],E,R[6],12,[[["self"]]]],[11,R[9],E,R[7],12,[[["self"]],[T]]],[11,R[8],E,R[6],13,[[["self"]]]],[11,R[9],E,R[7],13,[[["self"]],[T]]],[11,R[10],E,R[11],10,[[["f32"],["bool"]],["self"]]],[11,R[12],E,R[13],10,[[["f32"],[R[14]],["usize"]],["self"]]],[11,R[10],E,R[11],10,[[["f64"],["bool"]],["self"]]],[11,R[12],E,R[13],10,[[[R[14]],["f64"],["usize"]],["self"]]],[11,R[10],E,R[11],11,[[["f32"],["bool"]],["self"]]],[11,R[12],E,R[13],11,[[[R[15]],["f32"],["usize"]],["self"]]],[11,R[10],E,R[11],11,[[["f64"],["bool"]],["self"]]],[11,R[12],E,R[13],11,[[["f64"],[R[15]],["usize"]],["self"]]],[11,R[10],E,R[11],12,[[["f32"],["bool"]],["self"]]],[11,R[12],E,R[13],12,[[["f32"],["usize"],[R[16]]],["self"]]],[11,R[10],E,R[11],12,[[["bool"],["f64"]],["self"]]],[11,R[12],E,R[13],12,[[["f64"],["usize"],[R[16]]],["self"]]],[11,R[10],E,R[11],13,[[["f32"],["bool"]],["self"]]],[11,R[12],E,R[13],13,[[[R[17]],["f32"],["usize"]],["self"]]],[11,R[10],E,R[11],13,[[["bool"],["f64"]],["self"]]],[11,R[12],E,R[13],13,[[["f64"],[R[17]],["usize"]],["self"]]],[11,R[18],E,R[19],10,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,R[18],E,R[19],10,[[["self"]],[["f64"],[R[20],["f64"]]]]],[11,R[18],E,R[19],11,[[["self"]],[["f32"],[R[21],["f32"]]]]],[11,R[18],E,R[19],11,[[["self"]],[["f64"],[R[21],["f64"]]]]],[11,R[24],E,R[22],12,[[["self"]],[["f32"],[R[23],["f32"]]]]],[11,R[24],E,R[22],12,[[["self"]],[["f64"],[R[23],["f64"]]]]],[11,R[24],E,R[22],13,[[["self"]],[[R[25],["f32"]],["f32"]]]],[11,R[24],E,R[22],13,[[["self"]],[[R[25],["f64"]],["f64"]]]],[11,"fft",E,R[26],12,[[],[["f32"],[R[21],["f32"]]]]],[11,"fft",E,R[26],12,[[],[["f64"],[R[21],["f64"]]]]],[11,"fft",E,R[27],10,[[],[[R[25],["f32"]],["f32"]]]],[11,"fft",E,R[27],10,[[],[[R[25],["f64"]],["f64"]]]],[11,"ifft",E,R[28],13,[[],[["f32"],[R[20],["f32"]]]]],[11,"ifft",E,R[28],13,[[],[["f64"],[R[20],["f64"]]]]],[11,"new",E,R[496],14,[[[T]],["self"]]],[11,"new",E,R[497],15,[[],["self"]]],[0,"meta",R[29],E,N,N],[3,"Real",R[109],R[498],N,N],[3,R[533],E,R[499],N,N],[3,R[226],E,R[500],N,N],[12,R[501],E,E,16,N],[3,"Time",E,R[502],N,N],[3,"Freq",E,R[503],N,N],[3,R[227],E,R[504],N,N],[12,R[505],E,E,17,N],[11,R[506],R[29],R[507],0,[[],[R[30]]]],[11,R[508],E,R[509],0,[[],[R[30]]]],[11,"parallel",E,R[510],0,[[],[R[30]]]],[11,"new",E,R[511],0,[[["usize"]],[R[30]]]],[11,R[512],E,R[513],0,[[["usize"]],[R[30]]]],[11,"new",E,R[514],18,[[["s"]],[R[515]]]],[11,"new",E,R[31],19,[[],[R[32]]]],[11,R[516],E,R[31],19,[[["usize"]],[R[32]]]],[11,R[517],E,R[518],2,[[],[R[38]]]],[11,R[519],E,R[520],2,[[["self"]],["bool"]]],[0,R[521],E,R[522],N,N],[3,R[303],R[110],R[523],N,N],[3,R[231],E,R[524],N,N],[3,R[304],E,R[525],N,N],[3,R[305],E,R[526],N,N],[8,R[230],E,R[527],N,N],[10,R[2],E,R[528],20,[[["self"]],["bool"]]],[10,"window",E,R[529],20,[[["self"],["usize"]],[T]]],[11,"new",E,R[530],21,[[[T]],["self"]]],[11,R[506],E,R[531],21,[[],["self"]]],[0,"numbers",R[29],R[532],N,N],[3,R[533],R[111],R[534],N,N],[12,"re",E,R[535],22,N],[12,"im",E,R[536],22,N],[8,"Float",E,R[537],N,N],[10,"nan",E,R[538],23,[[],["self"]]],[10,"infinity",E,R[539],23,[[],["self"]]],[10,R[540],E,R[541],23,[[],["self"]]],[10,"neg_zero",E,R[542],23,[[],["self"]]],[10,R[543],E,R[544],23,[[],["self"]]],[10,R[545],E,R[546],23,[[],["self"]]],[11,"epsilon",E,R[547],23,[[],["self"]]],[10,R[548],E,R[549],23,[[],["self"]]],[10,"is_nan",E,R[550],23,[[],["bool"]]],[10,R[208],E,R[551],23,[[],["bool"]]],[10,R[209],E,R[552],23,[[],["bool"]]],[10,R[210],E,R[553],23,[[],["bool"]]],[10,"classify",E,R[554],23,[[],[R[555]]]],[10,"floor",E,R[556],23,[[],["self"]]],[10,"ceil",E,R[557],23,[[],["self"]]],[10,"round",E,R[558],23,[[],["self"]]],[10,"trunc",E,R[559],23,[[],["self"]]],[10,"fract",E,R[560],23,[[],["self"]]],[10,"abs",E,R[561],23,[[],["self"]]],[10,"signum",E,R[562],23,[[],["self"]]],[10,R[563],E,R[564],23,[[],["bool"]]],[10,R[565],E,R[566],23,[[],["bool"]]],[10,"mul_add",E,R[567],23,[[],["self"]]],[10,"recip",E,R[568],23,[[],["self"]]],[10,"powi",E,R[569],23,[[["i32"]],["self"]]],[10,"powf",E,R[570],23,[[],["self"]]],[10,"sqrt",E,R[571],23,[[],["self"]]],[10,"exp",E,R[572],23,[[],["self"]]],[10,"exp2",E,R[573],23,[[],["self"]]],[10,"ln",E,R[574],23,[[],["self"]]],[10,"log",E,R[575],23,[[],["self"]]],[10,"log2",E,R[576],23,[[],["self"]]],[10,"log10",E,R[577],23,[[],["self"]]],[11,R[578],E,R[579],23,[[],["self"]]],[11,R[580],E,R[581],23,[[],["self"]]],[10,"max",E,R[582],23,[[],["self"]]],[10,"min",E,R[583],23,[[],["self"]]],[10,"abs_sub",E,R[584],23,[[],["self"]]],[10,"cbrt",E,R[585],23,[[],["self"]]],[10,"hypot",E,R[586],23,[[],["self"]]],[10,"sin",E,R[587],23,[[],["self"]]],[10,"cos",E,R[588],23,[[],["self"]]],[10,"tan",E,R[589],23,[[],["self"]]],[10,"asin",E,R[590],23,[[],["self"]]],[10,"acos",E,R[591],23,[[],["self"]]],[10,"atan",E,R[592],23,[[],["self"]]],[10,"atan2",E,R[593],23,[[],["self"]]],[10,"sin_cos",E,R[594],23,[[]]],[10,"exp_m1",E,R[595],23,[[],["self"]]],[10,"ln_1p",E,R[596],23,[[],["self"]]],[10,"sinh",E,R[597],23,[[],["self"]]],[10,"cosh",E,R[598],23,[[],["self"]]],[10,"tanh",E,R[599],23,[[],["self"]]],[10,"asinh",E,R[600],23,[[],["self"]]],[10,"acosh",E,R[601],23,[[],["self"]]],[10,"atanh",E,R[602],23,[[],["self"]]],[10,R[603],E,R[604],23,[[]]],[8,"Num",E,R[605],N,N],[16,R[606],E,E,24,N],[10,R[114],E,R[607],24,[[["str"],["u32"]],["result"]]],[8,"One",E,R[608],N,N],[10,"one",E,R[609],25,[[],["self"]]],[11,"is_one",E,R[610],25,[[["self"]],["bool"]]],[8,R[611],E,R[612],N,N],[8,"ToSimd",E,R[613],N,N],[16,R[614],E,R[615],26,N],[16,"RegSse",E,E,26,N],[16,"RegAvx",E,E,26,N],[16,R[616],E,E,26,N],[16,"GpuReg",E,R[617],26,N],[8,R[618],E,R[619],N,N],[8,"Zero",E,R[620],N,N],[10,"zero",E,E,27,[[],["self"]]],[6,R[306],R[29],R[33],N,N],[6,R[307],E,R[34],N,N],[6,R[308],E,R[35],N,N],[6,R[309],E,R[36],N,N],[6,R[310],E,R[37],N,N],[6,R[621],E,R[33],N,N],[6,R[622],E,R[34],N,N],[6,R[623],E,R[35],N,N],[6,R[624],E,R[36],N,N],[6,R[625],E,R[37],N,N],[6,R[626],E,R[33],N,N],[6,R[627],E,R[34],N,N],[6,R[628],E,R[35],N,N],[6,R[629],E,R[36],N,N],[6,R[630],E,R[37],N,N],[6,R[631],E,R[33],N,N],[6,R[632],E,R[34],N,N],[6,R[633],E,R[35],N,N],[6,R[634],E,R[36],N,N],[6,R[635],E,R[37],N,N],[6,R[636],E,R[33],N,N],[6,R[637],E,R[34],N,N],[6,R[638],E,R[35],N,N],[6,R[639],E,R[36],N,N],[6,R[640],E,R[37],N,N],[6,"StatsVec",E,R[641],N,N],[6,"TransRes",E,R[642],N,N],[6,R[643],E,R[644],N,N],[6,R[645],E,R[646],N,N],[17,R[647],E,R[648],N,N],[8,"ToSlice",E,R[649],N,N],[10,"to_slice",E,R[650],28,[[["self"]]]],[10,"len",E,R[651],28,[[["self"]],["usize"]]],[10,R[62],E,R[652],28,[[["self"]],["bool"]]],[10,R[63],E,R[653],28,[[["self"]],["usize"]]],[10,R[654],E,R[655],28,[[["self"],["usize"]],[R[38]]]],[8,R[232],E,R[656],N,N],[10,R[657],E,R[658],29,[[["self"]]]],[8,"Resize",E,R[659],N,N],[10,"resize",E,R[660],30,[[["self"],["usize"]]]],[8,R[233],E,R[47],N,N],[10,R[661],E,R[48],31,[[[R[49]],["bool"]],[R[50]]]],[10,R[662],E,R[51],31,[[[R[52]]],["dspvec"]]],[8,R[234],E,R[39],N,N],[10,R[663],E,R[42],32,[[],[R[53]]]],[10,R[664],E,R[45],32,[[],[R[54]]]],[8,R[235],E,R[39],N,N],[10,R[665],E,R[55],33,[[],[R[43]]]],[10,R[666],E,R[56],33,[[],[R[46]]]],[8,R[236],E,R[667],N,N],[16,R[92],E,R[40],34,N],[10,"getf",E,R[41],34,[[]]],[8,R[237],E,R[668],N,N],[16,R[92],E,R[40],35,N],[10,"get",E,R[41],35,[[]]],[8,R[238],E,R[669],N,N],[10,R[670],E,R[42],36,[[["self"]],[["result",[R[43],R[44]]],[R[43],["vec"]],[R[44]]]]],[10,R[671],E,R[45],36,[[["self"]],[["result",[R[46],R[44]]],[R[46],["vec"]],[R[44]]]]],[8,R[239],E,R[47],N,N],[10,R[672],E,R[48],37,[[[R[49]],["bool"]],[R[50]]]],[10,R[673],E,R[51],37,[[[R[52]]],["dspvec"]]],[8,R[240],E,R[39],N,N],[10,R[674],E,R[42],38,[[],[R[53]]]],[10,R[675],E,R[45],38,[[],[R[54]]]],[8,R[241],E,R[39],N,N],[10,R[676],E,R[55],39,[[],[R[43]]]],[10,R[677],E,R[56],39,[[],[R[46]]]],[8,R[242],E,R[57],N,N],[16,R[92],E,E,40,N],[10,"data",E,R[678],40,[[["idx"],["self"]]]],[8,R[243],E,R[58],N,N],[10,R[122],E,R[679],41,[[["self"],["idx"]]]],[8,R[244],E,R[57],N,N],[16,R[92],E,E,42,N],[10,"datac",E,R[59],42,[[["idx"],["self"]]]],[8,R[245],E,R[58],N,N],[10,R[125],E,R[59],43,[[["self"],["idx"]]]],[8,R[680],E,R[681],N,N],[10,"domain",E,R[682],44,[[["self"]],[R[49]]]],[10,R[100],E,R[683],44,[[["self"]],["bool"]]],[8,R[246],E,R[60],N,N],[10,"resize",E,R[61],45,[[["self"],["usize"]],[R[38]]]],[8,R[247],E,R[60],N,N],[10,R[684],E,R[61],46,[[["self"],["b"],["usize"]],[R[38]]]],[8,"Vector",E,R[685],N,N],[10,R[9],E,R[339],47,[[["self"]],[T]]],[10,R[126],E,R[340],47,[[["self"],[T]]]],[10,"len",E,R[686],47,[[["self"]],["usize"]]],[10,R[62],E,R[687],47,[[["self"]],["bool"]]],[10,"points",E,R[688],47,[[["self"]],["usize"]]],[10,R[127],E,R[689],47,[[["self"]],[R[30]]]],[10,R[128],E,R[690],47,[[["self"],[R[30]]]]],[10,R[63],E,R[691],47,[[["self"]],["usize"]]],[8,R[248],E,R[692],N,N],[10,R[129],E,R[693],48,[[["self"]],[R[52]]]],[8,R[249],E,R[64],N,N],[10,R[130],E,R[65],49,[[]]],[10,R[131],E,R[66],49,[[]]],[10,R[24],E,R[67],49,[[]]],[10,R[341],E,R[68],49,[[]]],[10,"phase",E,R[69],49,[[]]],[8,R[250],E,R[64],N,N],[10,R[132],E,R[65],50,[[["b"]]]],[10,R[133],E,R[66],50,[[["b"]]]],[10,R[134],E,R[67],50,[[["b"]]]],[10,R[135],E,R[68],50,[[["b"]]]],[10,R[342],E,R[69],50,[[["b"]]]],[8,R[251],E,R[694],N,N],[10,R[327],E,R[695],51,[[["a"],["self"]]]],[10,R[328],E,R[696],51,[[["a"],["self"]]]],[10,R[136],E,R[697],51,[[["a"],["self"]]]],[10,R[137],E,R[698],51,[[["a"],["self"]]]],[10,R[138],E,R[699],51,[[["a"],["self"]]]],[10,R[139],E,R[700],51,[[["a"],["self"]]]],[10,R[140],E,R[701],51,[[["a"],["self"]]]],[8,R[252],E,R[702],N,N],[10,R[141],E,R[703],52,[[["self"],["a"]],[R[38]]]],[10,R[142],E,R[704],52,[[["self"],["a"]],[R[38]]]],[8,R[253],E,R[705],N,N],[10,R[143],E,R[706],53,[[["self"],[T]]]],[10,"conj",E,R[707],53,[[["self"]]]],[8,R[254],E,R[70],N,N],[10,R[18],E,R[708],54,[[],[R[75]]]],[8,R[255],E,R[70],N,N],[10,R[144],E,R[709],55,[[["b"]]]],[8,"RealOps",E,R[71],N,N],[10,"abs",E,R[710],56,[[["self"]]]],[8,R[256],E,R[71],N,N],[10,"wrap",E,R[711],57,[[["self"],[T]]]],[10,"unwrap",E,R[712],57,[[["self"],[T]]]],[8,R[257],E,R[713],N,N],[10,R[145],E,R[714],58,[[["self"]]]],[10,R[146],E,R[715],58,[[["self"]]]],[10,R[147],E,R[716],58,[[["self"]]]],[10,R[148],E,R[717],58,[[["self"]]]],[10,R[149],E,R[718],58,[[["self"],[T]]]],[10,R[150],E,R[719],58,[[["self"],[T]]]],[10,R[151],E,R[720],58,[[["self"],[T]]]],[8,R[258],E,R[72],N,N],[10,"mirror",E,R[721],59,[[["self"],["b"]]]],[10,R[152],E,R[722],59,[[["self"]]]],[10,R[153],E,R[723],59,[[["self"]]]],[8,R[259],E,R[72],N,N],[10,R[154],E,R[724],60,[[["self"],[R[73]]]]],[10,R[155],E,R[725],60,[[["self"],[R[73]]]]],[8,R[260],E,R[72],N,N],[10,R[156],E,R[74],61,[[["b"]]]],[10,"fft",E,R[74],61,[[["b"]]]],[10,R[157],E,R[726],61,[[[R[73]],["b"]]]],[8,R[261],E,R[72],N,N],[10,R[158],E,R[76],62,[[["b"]],[R[75]]]],[10,"sfft",E,R[76],62,[[["b"]],[R[75]]]],[10,R[159],E,R[76],62,[[[R[73]],["b"]],[R[75]]]],[8,R[262],E,R[72],N,N],[10,R[160],E,R[77],63,[[["b"]]]],[10,"ifft",E,R[77],63,[[["b"]]]],[10,R[161],E,R[77],63,[[[R[73]],["b"]]]],[8,R[263],E,R[72],N,N],[10,R[162],E,R[78],64,[[["b"]],[R[75]]]],[10,"sifft",E,R[78],64,[[["b"]],[R[75]]]],[10,R[163],E,R[78],64,[[[R[73]],["b"]],[R[75]]]],[8,R[264],E,R[727],N,N],[10,R[164],E,R[728],65,[[["b"]]]],[10,R[165],E,R[729],65,[[["b"]]]],[8,R[265],E,R[730],N,N],[10,R[166],E,R[731],66,[[["self"],["b"],["a"]],[R[38]]]],[8,R[266],E,R[732],N,N],[10,R[167],E,R[79],67,[[["b"],["usize"],["c"],["self"],[T]]]],[8,R[267],E,R[733],N,N],[10,R[168],E,R[79],68,[[["self"],["b"],["a"]],[R[38]]]],[8,R[268],E,R[734],N,N],[10,R[169],E,R[735],69,[[["c"],["self"],[T]]]],[8,R[269],E,R[736],N,N],[10,R[170],E,R[80],70,[[["b"],[R[14]],["usize"],["self"],[T]]]],[10,R[171],E,R[80],70,[[[R[15]],["u32"],["b"],["self"]],[R[38]]]],[10,R[172],E,R[81],70,[[[R[15]],["b"],["usize"],["self"],["option",[R[15]]],[T]],[R[38]]]],[10,R[322],E,R[81],70,[[["self"],["b"],["usize"]]]],[10,R[173],E,R[737],70,[[["self"],["u32"]]]],[8,R[270],E,R[738],N,N],[10,R[175],E,R[739],71,[[["self"],["b"],[T]]]],[10,R[174],E,R[740],71,[[["self"],["b"],[T]]]],[8,R[271],E,R[83],N,N],[10,R[176],E,R[741],72,[[["other"]],["self"]]],[8,R[272],E,R[742],N,N],[10,R[177],E,R[82],73,[[["other"]],["self"]]],[10,R[178],E,R[82],73,[[["other"],[R[49]],["bool"]],["self"]]],[8,R[273],E,R[83],N,N],[10,R[179],E,R[743],74,[[],["other"]]],[8,R[274],E,R[84],N,N],[16,R[744],E,E,75,N],[8,R[275],E,R[84],N,N],[16,R[745],E,E,76,N],[8,R[276],E,R[84],N,N],[16,R[746],E,R[84],77,N],[8,R[277],E,R[84],N,N],[16,R[747],E,E,78,N],[8,R[278],E,R[84],N,N],[16,R[748],E,E,79,N],[8,R[749],E,R[91],N,N],[10,"scale",E,R[750],80,[[["self"],[T]]]],[8,R[279],E,R[751],N,N],[10,"offset",E,R[752],81,[[["self"],[T]]]],[8,R[280],E,R[753],N,N],[10,"add",E,R[754],82,[[["self"],["a"]],[R[38]]]],[10,"sub",E,R[755],82,[[["self"],["a"]],[R[38]]]],[10,"mul",E,R[756],82,[[["self"],["a"]],[R[38]]]],[10,"div",E,R[757],82,[[["self"],["a"]],[R[38]]]],[8,R[281],E,R[758],N,N],[10,R[180],E,R[759],83,[[["self"],["a"]],[R[38]]]],[10,R[181],E,R[760],83,[[["self"],["a"]],[R[38]]]],[10,R[182],E,R[761],83,[[["self"],["a"]],[R[38]]]],[10,R[183],E,R[762],83,[[["self"],["a"]],[R[38]]]],[8,"TrigOps",E,R[763],N,N],[10,"sin",E,R[764],84,[[["self"]]]],[10,"cos",E,R[765],84,[[["self"]]]],[10,"tan",E,R[766],84,[[["self"]]]],[10,"asin",E,R[767],84,[[["self"]]]],[10,"acos",E,R[768],84,[[["self"]]]],[10,"atan",E,R[769],84,[[["self"]]]],[10,"sinh",E,R[770],84,[[["self"]]]],[10,"cosh",E,R[771],84,[[["self"]]]],[10,"tanh",E,R[772],84,[[["self"]]]],[10,"asinh",E,R[85],84,[[["self"]]]],[10,"acosh",E,R[85],84,[[["self"]]]],[10,"atanh",E,R[85],84,[[["self"]]]],[8,R[773],E,R[774],N,N],[10,"sqrt",E,R[775],85,[[["self"]]]],[10,"square",E,R[776],85,[[["self"]]]],[10,"root",E,R[777],85,[[["self"],[T]]]],[10,"powf",E,R[778],85,[[["self"],[T]]]],[10,"ln",E,R[779],85,[[["self"]]]],[10,"exp",E,R[780],85,[[["self"]]]],[10,"log",E,R[781],85,[[["self"],[T]]]],[10,"expf",E,R[782],85,[[["self"],[T]]]],[8,R[282],E,R[783],N,N],[10,R[343],E,R[784],86,[[["self"]]]],[10,R[184],E,R[785],86,[[["self"]]]],[8,R[283],E,R[86],N,N],[10,R[786],E,R[87],87,[[["self"],["usize"],[R[88]]],[R[38]]]],[10,R[185],E,R[89],87,[[["self"],["u32"]],[R[38]]]],[8,R[284],E,R[86],N,N],[10,R[186],E,R[87],88,[[["b"],["usize"],["self"],[R[88]]],[R[38]]]],[10,R[187],E,R[89],88,[[["self"],["b"],["u32"]]]],[8,R[787],E,R[788],N,N],[10,R[188],E,R[789],89,[[["self"]],[R[38]]]],[8,R[790],E,R[791],N,N],[10,"merge",E,R[792],90,[[["self"]],[R[38]]]],[8,R[285],E,R[793],N,N],[10,"diff",E,R[90],91,[[["self"]]]],[10,R[189],E,R[90],91,[[["self"]]]],[10,R[344],E,R[794],91,[[["self"]]]],[8,R[286],E,R[91],N,N],[16,R[92],E,E,92,N],[10,R[190],E,R[795],92,[[["self"],["a"]]]],[8,R[287],E,R[91],N,N],[16,R[92],E,E,93,N],[10,R[191],E,R[796],93,[[["self"],["a"]]]],[8,R[288],E,R[93],N,N],[10,R[192],E,R[797],94,[[["a"],["self"],["f"]]]],[8,R[289],E,R[93],N,N],[16,R[92],E,E,95,N],[10,R[193],E,R[798],95,[[["a"],["fmap"],["faggr"],["self"]]]],[8,R[290],E,R[94],N,N],[16,"Result",E,E,96,N],[10,R[194],E,R[799],96,[[["self"]]]],[8,R[291],E,R[94],N,N],[16,"Result",E,E,97,N],[10,R[195],E,R[96],97,[[["self"],["usize"]],[R[98]]]],[8,"SumOps",E,R[800],N,N],[10,"sum",E,R[801],98,[[["self"]],[T]]],[10,"sum_sq",E,R[99],98,[[["self"]],[T]]],[8,"Stats",E,R[802],N,N],[10,"empty",E,R[803],99,[[],["self"]]],[10,R[197],E,R[804],99,[[["usize"]],[R[95]]]],[10,R[837],E,R[805],99,[[],["self"]]],[10,"merge",E,R[806],99,[[],["self"]]],[10,R[196],E,R[807],99,[[],[R[95]]]],[10,"add",E,R[808],99,[[["self"],[T],["usize"]]]],[8,R[292],E,R[97],N,N],[16,"Result",E,E,100,N],[10,R[198],E,R[96],100,[[["self"]]]],[8,R[293],E,R[97],N,N],[16,"Result",E,E,101,N],[10,R[199],E,R[96],101,[[["self"],["usize"]],[R[98]]]],[8,R[294],E,R[809],N,N],[10,R[201],E,R[810],102,[[["self"]],[T]]],[10,R[200],E,R[99],102,[[["self"]],[T]]],[8,R[295],E,R[811],N,N],[10,R[202],E,R[812],103,[[["usize"],[T],["self"],[T]]]],[8,R[296],E,R[813],N,N],[10,"trade",E,R[814],104,[[["s"]]]],[8,"Buffer",E,R[815],N,N],[16,"Borrow",E,R[816],105,N],[10,"borrow",E,R[817],105,[[["self"],["usize"]]]],[10,R[63],E,R[818],105,[[["self"]],["usize"]]],[8,R[297],E,R[819],N,N],[10,R[100],E,E,106,[[["self"]],["bool"]]],[10,R[18],E,R[820],106,[[["self"]]]],[10,R[24],E,R[821],106,[[["self"]]]],[8,"Domain",E,R[822],N,N],[10,"domain",E,E,107,[[["self"]],[R[49]]]],[10,R[838],E,R[101],107,[[["self"]]]],[10,R[839],E,R[101],107,[[["self"]]]],[8,R[823],E,R[824],N,N],[8,R[825],E,R[826],N,N],[8,R[827],E,R[828],N,N],[8,R[829],E,R[830],N,N],[8,"PosEq",E,R[831],N,N],[11,"into",E,E,0,[[],[U]]],[11,R[107],E,E,0,[[["self"]],[T]]],[11,R[106],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[103],E,E,0,[[[U]],["result"]]],[11,R[104],E,E,0,[[],["result"]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[102],E,E,0,[[["self"]],[T]]],[11,R[105],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[103],E,E,108,[[[U]],["result"]]],[11,R[104],E,E,108,[[],["result"]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[102],E,E,108,[[["self"]],[T]]],[11,R[105],E,E,108,[[["self"]],["typeid"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[103],E,E,18,[[[U]],["result"]]],[11,R[104],E,E,18,[[],["result"]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[102],E,E,18,[[["self"]],[T]]],[11,R[105],E,E,18,[[["self"]],["typeid"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[103],E,E,109,[[[U]],["result"]]],[11,R[104],E,E,109,[[],["result"]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[102],E,E,109,[[["self"]],[T]]],[11,R[105],E,E,109,[[["self"]],["typeid"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[103],E,E,19,[[[U]],["result"]]],[11,R[104],E,E,19,[[],["result"]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[102],E,E,19,[[["self"]],[T]]],[11,R[105],E,E,19,[[["self"]],["typeid"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[103],E,E,110,[[[U]],["result"]]],[11,R[104],E,E,110,[[],["result"]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[102],E,E,110,[[["self"]],[T]]],[11,R[105],E,E,110,[[["self"]],["typeid"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[103],E,E,111,[[[U]],["result"]]],[11,R[104],E,E,111,[[],["result"]]],[11,"borrow",E,E,111,[[["self"]],[T]]],[11,R[102],E,E,111,[[["self"]],[T]]],[11,R[105],E,E,111,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,R[107],E,E,1,[[["self"]],[T]]],[11,R[106],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[103],E,E,1,[[[U]],["result"]]],[11,R[104],E,E,1,[[],["result"]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[102],E,E,1,[[["self"]],[T]]],[11,R[105],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,R[107],E,E,2,[[["self"]],[T]]],[11,R[106],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"from",E,E,2,[[],[T]]],[11,R[103],E,E,2,[[[U]],["result"]]],[11,R[104],E,E,2,[[],["result"]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[102],E,E,2,[[["self"]],[T]]],[11,R[105],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,112,[[],[U]]],[11,R[107],E,E,112,[[["self"]],[T]]],[11,R[106],E,E,112,[[["self"],[T]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[103],E,E,112,[[[U]],["result"]]],[11,R[104],E,E,112,[[],["result"]]],[11,"borrow",E,E,112,[[["self"]],[T]]],[11,R[102],E,E,112,[[["self"]],[T]]],[11,R[105],E,E,112,[[["self"]],["typeid"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[103],E,E,113,[[[U]],["result"]]],[11,R[104],E,E,113,[[],["result"]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,R[102],E,E,113,[[["self"]],[T]]],[11,R[105],E,E,113,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,R[107],E,E,3,[[["self"]],[T]]],[11,R[106],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[103],E,E,3,[[[U]],["result"]]],[11,R[104],E,E,3,[[],["result"]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[102],E,E,3,[[["self"]],[T]]],[11,R[105],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,R[107],E,E,4,[[["self"]],[T]]],[11,R[106],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[103],E,E,4,[[[U]],["result"]]],[11,R[104],E,E,4,[[],["result"]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[102],E,E,4,[[["self"]],[T]]],[11,R[105],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,5,[[],[U]]],[11,R[107],E,E,5,[[["self"]],[T]]],[11,R[106],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[103],E,E,5,[[[U]],["result"]]],[11,R[104],E,E,5,[[],["result"]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[102],E,E,5,[[["self"]],[T]]],[11,R[105],E,E,5,[[["self"]],["typeid"]]],[11,"into",R[108],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[103],E,E,10,[[[U]],["result"]]],[11,R[104],E,E,10,[[],["result"]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[102],E,E,10,[[["self"]],[T]]],[11,R[105],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[[U]],["result"]]],[11,R[104],E,E,11,[[],["result"]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[102],E,E,11,[[["self"]],[T]]],[11,R[105],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[103],E,E,12,[[[U]],["result"]]],[11,R[104],E,E,12,[[],["result"]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[102],E,E,12,[[["self"]],[T]]],[11,R[105],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[103],E,E,13,[[[U]],["result"]]],[11,R[104],E,E,13,[[],["result"]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[102],E,E,13,[[["self"]],[T]]],[11,R[105],E,E,13,[[["self"]],["typeid"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[103],E,E,14,[[[U]],["result"]]],[11,R[104],E,E,14,[[],["result"]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[102],E,E,14,[[["self"]],[T]]],[11,R[105],E,E,14,[[["self"]],["typeid"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[103],E,E,15,[[[U]],["result"]]],[11,R[104],E,E,15,[[],["result"]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[102],E,E,15,[[["self"]],[T]]],[11,R[105],E,E,15,[[["self"]],["typeid"]]],[11,"into",R[109],E,114,[[],[U]]],[11,R[107],E,E,114,[[["self"]],[T]]],[11,R[106],E,E,114,[[["self"],[T]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[103],E,E,114,[[[U]],["result"]]],[11,R[104],E,E,114,[[],["result"]]],[11,"borrow",E,E,114,[[["self"]],[T]]],[11,R[102],E,E,114,[[["self"]],[T]]],[11,R[105],E,E,114,[[["self"]],["typeid"]]],[11,"into",E,E,115,[[],[U]]],[11,R[107],E,E,115,[[["self"]],[T]]],[11,R[106],E,E,115,[[["self"],[T]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[103],E,E,115,[[[U]],["result"]]],[11,R[104],E,E,115,[[],["result"]]],[11,"borrow",E,E,115,[[["self"]],[T]]],[11,R[102],E,E,115,[[["self"]],[T]]],[11,R[105],E,E,115,[[["self"]],["typeid"]]],[11,"into",E,E,16,[[],[U]]],[11,R[107],E,E,16,[[["self"]],[T]]],[11,R[106],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[103],E,E,16,[[[U]],["result"]]],[11,R[104],E,E,16,[[],["result"]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[102],E,E,16,[[["self"]],[T]]],[11,R[105],E,E,16,[[["self"]],["typeid"]]],[11,"into",E,E,116,[[],[U]]],[11,R[107],E,E,116,[[["self"]],[T]]],[11,R[106],E,E,116,[[["self"],[T]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[103],E,E,116,[[[U]],["result"]]],[11,R[104],E,E,116,[[],["result"]]],[11,"borrow",E,E,116,[[["self"]],[T]]],[11,R[102],E,E,116,[[["self"]],[T]]],[11,R[105],E,E,116,[[["self"]],["typeid"]]],[11,"into",E,E,117,[[],[U]]],[11,R[107],E,E,117,[[["self"]],[T]]],[11,R[106],E,E,117,[[["self"],[T]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[103],E,E,117,[[[U]],["result"]]],[11,R[104],E,E,117,[[],["result"]]],[11,"borrow",E,E,117,[[["self"]],[T]]],[11,R[102],E,E,117,[[["self"]],[T]]],[11,R[105],E,E,117,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,R[107],E,E,17,[[["self"]],[T]]],[11,R[106],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[103],E,E,17,[[[U]],["result"]]],[11,R[104],E,E,17,[[],["result"]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[102],E,E,17,[[["self"]],[T]]],[11,R[105],E,E,17,[[["self"]],["typeid"]]],[11,"into",R[110],E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[103],E,E,118,[[[U]],["result"]]],[11,R[104],E,E,118,[[],["result"]]],[11,"borrow",E,E,118,[[["self"]],[T]]],[11,R[102],E,E,118,[[["self"]],[T]]],[11,R[105],E,E,118,[[["self"]],["typeid"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[103],E,E,21,[[[U]],["result"]]],[11,R[104],E,E,21,[[],["result"]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[102],E,E,21,[[["self"]],[T]]],[11,R[105],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[103],E,E,119,[[[U]],["result"]]],[11,R[104],E,E,119,[[],["result"]]],[11,"borrow",E,E,119,[[["self"]],[T]]],[11,R[102],E,E,119,[[["self"]],[T]]],[11,R[105],E,E,119,[[["self"]],["typeid"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[103],E,E,120,[[[U]],["result"]]],[11,R[104],E,E,120,[[],["result"]]],[11,"borrow",E,E,120,[[["self"]],[T]]],[11,R[102],E,E,120,[[["self"]],[T]]],[11,R[105],E,E,120,[[["self"]],["typeid"]]],[11,"zero",R[111],E,22,[[],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[832],E,E,22,[[["self"]],["string"]]],[11,R[107],E,E,22,[[["self"]],[T]]],[11,R[106],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[103],E,E,22,[[[U]],["result"]]],[11,R[104],E,E,22,[[],["result"]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[102],E,E,22,[[["self"]],[T]]],[11,R[105],E,E,22,[[["self"]],["typeid"]]],[11,"rem",E,E,22,[[[R[5]]],[R[5]]]],[11,"rem",E,E,22,[[[R[5]]],[R[5]]]],[11,"rem",E,E,22,[[[T]],[R[5]]]],[11,"rem",E,E,22,[[[T]],[R[5]]]],[11,R[833],E,E,22,[[["usize"]],[[R[5]],["option",[R[5]]]]]],[11,R[834],E,E,22,[[["isize"]],[[R[5]],["option",[R[5]]]]]],[11,"from_u8",E,E,22,[[["u8"]],[[R[5]],["option",[R[5]]]]]],[11,"from_u16",E,E,22,[[["u16"]],[[R[5]],["option",[R[5]]]]]],[11,"from_u32",E,E,22,[[["u32"]],[[R[5]],["option",[R[5]]]]]],[11,"from_u64",E,E,22,[[["u64"]],[[R[5]],["option",[R[5]]]]]],[11,"from_i8",E,E,22,[[["i8"]],[[R[5]],["option",[R[5]]]]]],[11,"from_i16",E,E,22,[[["i16"]],[[R[5]],["option",[R[5]]]]]],[11,"from_i32",E,E,22,[[["i32"]],[[R[5]],["option",[R[5]]]]]],[11,"from_i64",E,E,22,[[["i64"]],[[R[5]],["option",[R[5]]]]]],[11,R[835],E,E,22,[[["u128"]],[[R[5]],["option",[R[5]]]]]],[11,R[836],E,E,22,[[["i128"]],[[R[5]],["option",[R[5]]]]]],[11,"from_f32",E,E,22,[[["f32"]],[[R[5]],["option",[R[5]]]]]],[11,"from_f64",E,E,22,[[["f64"]],[[R[5]],["option",[R[5]]]]]],[11,"sum",E,E,22,[[["i"]],[R[5]]]],[11,"sum",E,E,22,[[["i"]],[R[5]]]],[11,"zero",E,E,22,[[],[R[5]]]],[11,"is_zero",E,E,22,[[["self"]],["bool"]]],[11,R[112],E,E,22,[[[R[5]],["self"]]]],[11,R[112],E,E,22,[[["self"],[R[5]]]]],[11,R[112],E,E,22,[[["self"],[T]]]],[11,R[112],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[R[5]]]],[11,"from",E,E,22,[[[T]],[R[5]]]],[11,"inv",E,E,22,[[],[R[5]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"clone",E,E,22,[[["self"]],[R[5]]]],[11,"mul",E,E,22,[[[R[5]]],[R[5]]]],[11,"mul",E,E,22,[[[R[5]]],[R[5]]]],[11,"mul",E,E,22,[[[T]],[R[5]]]],[11,"mul",E,E,22,[[[T]],[R[5]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"from_str",E,R[115],22,[[["str"]],[[R[5]],["result",[R[5]]]]]],[11,"eq",E,E,22,[[["self"],[R[5]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[5]]],["bool"]]],[11,"div",E,E,22,[[[R[5]]],[R[5]]]],[11,"div",E,E,22,[[[R[5]]],[R[5]]]],[11,"div",E,E,22,[[[T]],[R[5]]]],[11,"div",E,E,22,[[[T]],[R[5]]]],[11,"product",E,E,22,[[["i"]],[R[5]]]],[11,"product",E,E,22,[[["i"]],[R[5]]]],[11,"add",E,E,22,[[[R[5]]],[R[5]]]],[11,"add",E,E,22,[[[T]],[R[5]]]],[11,"add",E,E,22,[[[R[5]]],[R[5]]]],[11,"add",E,E,22,[[[T]],[R[5]]]],[11,R[114],E,R[115],22,[[["str"],["u32"]],[["result",[R[5]]],[R[5]]]]],[11,"one",E,E,22,[[],[R[5]]]],[11,"is_one",E,E,22,[[["self"]],["bool"]]],[11,"from",E,E,22,[[[U]],[[R[5]],["option",[R[5]]]]]],[11,R[116],E,E,22,[[[R[5]],["self"]]]],[11,R[116],E,E,22,[[["self"],[T]]]],[11,R[116],E,E,22,[[["self"],[R[5]]]]],[11,R[116],E,E,22,[[["self"],[T]]]],[11,R[117],E,E,22,[[["self"],[T]]]],[11,R[117],E,E,22,[[["self"],[T]]]],[11,R[117],E,E,22,[[["self"],[R[5]]]]],[11,R[117],E,E,22,[[[R[5]],["self"]]]],[11,"neg",E,E,22,[[],[R[5]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,R[506],E,E,22,[[],[R[5]]]],[11,R[118],E,E,22,[[["self"],[T]]]],[11,R[118],E,E,22,[[[R[5]],["self"]]]],[11,R[118],E,E,22,[[["self"],[T]]]],[11,R[118],E,E,22,[[["self"],[R[5]]]]],[11,"to_usize",E,E,22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize",E,E,22,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_u8",E,E,22,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,E,22,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32",E,E,22,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"to_u64",E,E,22,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8",E,E,22,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16",E,E,22,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32",E,E,22,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64",E,E,22,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128",E,E,22,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_i128",E,E,22,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32",E,E,22,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64",E,E,22,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"sub",E,E,22,[[[R[5]]],[R[5]]]],[11,"sub",E,E,22,[[[T]],[R[5]]]],[11,"sub",E,E,22,[[[T]],[R[5]]]],[11,"sub",E,E,22,[[[R[5]]],[R[5]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"fmt",E,E,22,[[[R[113]],["self"]],[["result",["error"]],["error"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,R[119],E,E,22,[[["self"],[T]]]],[11,R[119],E,E,22,[[["self"],[T]]]],[11,R[119],E,E,22,[[[R[5]],["self"]]]],[11,R[119],E,E,22,[[["self"],[R[5]]]]],[11,"as_",E,E,22,[[],[U]]],[11,R[2],R[108],E,10,[[["self"]],["bool"]]],[11,"calc",E,E,10,[[["f32"],["self"]],["f32"]]],[11,R[2],E,E,10,[[["self"]],["bool"]]],[11,"calc",E,E,10,[[["f64"],["self"]],["f64"]]],[11,R[2],E,E,14,[[["self"]],["bool"]]],[11,"calc",E,E,14,[[["self"],[T]],[T]]],[11,R[2],E,E,15,[[["self"]],["bool"]]],[11,"calc",E,E,15,[[["self"],[T]],[T]]],[11,R[2],E,E,11,[[["self"]],["bool"]]],[11,"calc",E,E,11,[[["f32"],["self"]],["f32"]]],[11,R[2],E,E,11,[[["self"]],["bool"]]],[11,"calc",E,E,11,[[["f64"],["self"]],["f64"]]],[11,R[2],E,E,14,[[["self"]],["bool"]]],[11,"calc",E,E,14,[[["self"],[T]],[T]]],[11,R[2],E,E,15,[[["self"]],["bool"]]],[11,"calc",E,E,15,[[["self"],[T]],[T]]],[11,R[2],E,E,12,[[["self"]],["bool"]]],[11,"calc",E,E,12,[[["f32"],["self"]],[R[120]]]],[11,R[2],E,E,12,[[["self"]],["bool"]]],[11,"calc",E,E,12,[[["f64"],["self"]],[R[121]]]],[11,R[2],E,E,13,[[["self"]],["bool"]]],[11,"calc",E,E,13,[[["f32"],["self"]],[R[120]]]],[11,R[2],E,E,13,[[["self"]],["bool"]]],[11,"calc",E,E,13,[[["f64"],["self"]],[R[121]]]],[11,"getf",R[29],E,2,[[]]],[11,"get",E,E,2,[[]]],[11,"get",E,E,2,[[]]],[11,"get",E,E,2,[[]]],[11,"get",E,E,2,[[]]],[11,"data",E,E,2,[[["self"],["usize"]],[T]]],[11,"data",E,E,2,[[[R[123]],["self"]]]],[11,"data",E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"data",E,E,2,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"data",E,E,2,[[["range",["usize"]],["self"],["usize"]]]],[11,R[122],E,E,2,[[["self"],["usize"]],[T]]],[11,R[122],E,E,2,[[[R[123]],["self"]]]],[11,R[122],E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,R[122],E,E,2,[[["self"],["usize"],[R[206],["usize"]]]]],[11,R[122],E,E,2,[[["self"],["usize"],["range",["usize"]]]]],[11,"datac",E,E,2,[[["self"],["usize"]],[R[5]]]],[11,"datac",E,E,2,[[[R[123]],["self"]]]],[11,"datac",E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"datac",E,E,2,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"datac",E,E,2,[[["range",["usize"]],["self"],["usize"]]]],[11,R[125],E,E,2,[[["self"],["usize"]],[R[5]]]],[11,R[125],E,E,2,[[[R[123]],["self"]]]],[11,R[125],E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,R[125],E,E,2,[[["self"],["usize"],[R[206],["usize"]]]]],[11,R[125],E,E,2,[[["self"],["usize"],["range",["usize"]]]]],[11,"domain",E,E,2,[[["self"]],[R[49]]]],[11,R[100],E,E,2,[[["self"]],["bool"]]],[11,"domain",E,E,112,[[["self"]],[R[49]]]],[11,R[100],E,E,112,[[["self"]],["bool"]]],[11,"resize",E,E,2,[[["self"],["usize"]],[R[38]]]],[11,R[684],E,E,2,[[["self"],["b"],["usize"]],[R[38]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[126],E,E,2,[[["self"],[T]]]],[11,"len",E,E,2,[[["self"]],["usize"]]],[11,R[62],E,E,2,[[["self"]],["bool"]]],[11,"points",E,E,2,[[["self"]],["usize"]]],[11,R[127],E,E,2,[[["self"]],[R[30]]]],[11,R[128],E,E,2,[[["self"],[R[30]]]]],[11,R[63],E,E,2,[[["self"]],["usize"]]],[11,R[129],E,E,2,[[["self"]],[R[52]]]],[11,R[130],E,E,2,[[]]],[11,R[131],E,E,2,[[]]],[11,R[24],E,E,2,[[]]],[11,R[341],E,E,2,[[]]],[11,"phase",E,E,2,[[]]],[11,R[132],E,E,2,[[["b"]]]],[11,R[133],E,E,2,[[["b"]]]],[11,R[134],E,E,2,[[["b"]]]],[11,R[135],E,E,2,[[["b"]]]],[11,R[342],E,E,2,[[["b"]]]],[11,R[327],E,E,2,[[["o"],["self"]]]],[11,R[328],E,E,2,[[["o"],["self"]]]],[11,R[136],E,E,2,[[["o"],["self"]]]],[11,R[137],E,E,2,[[["o"],["self"]]]],[11,R[138],E,E,2,[[["o"],["self"]]]],[11,R[139],E,E,2,[[["o"],["self"]]]],[11,R[140],E,E,2,[[["o"],["self"]]]],[11,R[141],E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[142],E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[143],E,E,2,[[["self"],[T]]]],[11,"conj",E,E,2,[[["self"]]]],[11,R[18],E,E,2,[[],[R[75]]]],[11,R[144],E,E,2,[[["b"]]]],[11,"abs",E,E,2,[[["self"]]]],[11,"wrap",E,E,2,[[["self"],[T]]]],[11,"unwrap",E,E,2,[[["self"],[T]]]],[11,R[145],E,E,2,[[["self"]]]],[11,R[146],E,E,2,[[["self"]]]],[11,R[147],E,E,2,[[["self"]]]],[11,R[148],E,E,2,[[["self"]]]],[11,R[149],E,E,2,[[["self"],[T]]]],[11,R[150],E,E,2,[[["self"],[T]]]],[11,R[151],E,E,2,[[["self"],[T]]]],[11,"mirror",E,E,2,[[["self"],["b"]]]],[11,R[152],E,E,2,[[["self"]]]],[11,R[153],E,E,2,[[["self"]]]],[11,R[154],E,E,2,[[["self"],[R[73]]]]],[11,R[155],E,E,2,[[["self"],[R[73]]]]],[11,R[156],E,E,2,[[["b"]]]],[11,"fft",E,E,2,[[["b"]]]],[11,R[157],E,E,2,[[[R[73]],["b"]]]],[11,R[158],E,E,2,[[["b"]],[R[75]]]],[11,"sfft",E,E,2,[[["b"]],[R[75]]]],[11,R[159],E,E,2,[[[R[73]],["b"]],[R[75]]]],[11,R[160],E,E,2,[[["b"]]]],[11,"ifft",E,E,2,[[["b"]]]],[11,R[161],E,E,2,[[[R[73]],["b"]]]],[11,R[162],E,E,2,[[["b"]],[R[75]]]],[11,"sifft",E,E,2,[[["b"]],[R[75]]]],[11,R[163],E,E,2,[[[R[73]],["b"]],[R[75]]]],[11,R[164],E,E,2,[[["b"]]]],[11,R[165],E,E,2,[[["b"]]]],[11,R[166],E,E,2,[[["self"],["b"],["o"]],[R[38]]]],[11,R[167],E,E,2,[[["b"],[R[14]],["usize"],["self"],[T]]]],[11,R[167],E,E,2,[[["b"],["usize"],["self"],[R[16]],[T]]]],[11,R[168],E,E,2,[[["dspvec"],["self"],["b"]],[R[38]]]],[11,R[169],E,E,2,[[["self"],[R[17]],[T]]]],[11,R[169],E,E,2,[[[R[15]],["self"],[T]]]],[11,R[170],E,E,2,[[["b"],[R[14]],["usize"],["self"],[T]]]],[11,R[171],E,E,2,[[[R[15]],["u32"],["b"],["self"]],[R[38]]]],[11,R[322],E,E,2,[[["self"],["b"],["usize"]]]],[11,R[172],E,E,2,[[[R[15]],["b"],["usize"],["self"],["option",[R[15]]],[T]],[R[38]]]],[11,R[173],E,E,2,[[["self"],["u32"]]]],[11,R[174],E,E,2,[[["self"],["b"],[T]]]],[11,R[175],E,E,2,[[["self"],["b"],[T]]]],[11,R[176],E,E,2,[[["o"]],["self"]]],[11,R[177],E,E,121,[[["dspvec"]],["self"]]],[11,R[178],E,E,121,[[["dspvec"],[R[49]],["bool"]],["self"]]],[11,R[177],E,E,122,[[["dspvec"]],["self"]]],[11,R[178],E,E,122,[[["dspvec"],[R[49]],["bool"]],["self"]]],[11,R[177],E,E,123,[[["dspvec"]],["self"]]],[11,R[178],E,E,123,[[["dspvec"],[R[49]],["bool"]],["self"]]],[11,R[177],E,E,124,[[["dspvec"]],["self"]]],[11,R[178],E,E,124,[[["dspvec"],[R[49]],["bool"]],["self"]]],[11,R[177],E,E,125,[[["dspvec"]],["self"]]],[11,R[178],E,E,125,[[["dspvec"],[R[49]],["bool"]],["self"]]],[11,R[179],E,E,2,[[],["o"]]],[11,"scale",E,E,2,[[["self"],[T]]]],[11,"scale",E,E,2,[[["self"],[R[5]]]]],[11,"offset",E,E,2,[[["self"],[T]]]],[11,"offset",E,E,2,[[["self"],[R[5]]]]],[11,"add",E,E,2,[[["self"],["o"]],[R[38]]]],[11,"sub",E,E,2,[[["self"],["o"]],[R[38]]]],[11,"mul",E,E,2,[[["self"],["o"]],[R[38]]]],[11,"div",E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[180],E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[181],E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[182],E,E,2,[[["self"],["o"]],[R[38]]]],[11,R[183],E,E,2,[[["self"],["o"]],[R[38]]]],[11,"sin",E,E,2,[[["self"]]]],[11,"cos",E,E,2,[[["self"]]]],[11,"tan",E,E,2,[[["self"]]]],[11,"asin",E,E,2,[[["self"]]]],[11,"acos",E,E,2,[[["self"]]]],[11,"atan",E,E,2,[[["self"]]]],[11,"sinh",E,E,2,[[["self"]]]],[11,"cosh",E,E,2,[[["self"]]]],[11,"tanh",E,E,2,[[["self"]]]],[11,"asinh",E,E,2,[[["self"]]]],[11,"acosh",E,E,2,[[["self"]]]],[11,"atanh",E,E,2,[[["self"]]]],[11,"sqrt",E,E,2,[[["self"]]]],[11,"square",E,E,2,[[["self"]]]],[11,"root",E,E,2,[[["self"],[T]]]],[11,"powf",E,E,2,[[["self"],[T]]]],[11,"ln",E,E,2,[[["self"]]]],[11,"exp",E,E,2,[[["self"]]]],[11,"log",E,E,2,[[["self"],[T]]]],[11,"expf",E,E,2,[[["self"],[T]]]],[11,R[343],E,E,2,[[["self"]]]],[11,R[184],E,E,2,[[["self"]]]],[11,R[786],E,E,2,[[["self"],["usize"],[R[88]]],[R[38]]]],[11,R[185],E,E,2,[[["self"],["u32"]],[R[38]]]],[11,R[186],E,E,2,[[["b"],["usize"],["self"],[R[88]]],[R[38]]]],[11,R[187],E,E,2,[[["self"],["b"],["u32"]]]],[11,R[188],E,E,2,[[["self"]],[R[38]]]],[11,"merge",E,E,2,[[["self"]],[R[38]]]],[11,"diff",E,E,2,[[["self"]]]],[11,R[189],E,E,2,[[["self"]]]],[11,R[344],E,E,2,[[["self"]]]],[11,R[190],E,E,2,[[["self"],["o"]],[R[98]]]],[11,R[190],E,E,2,[[["self"],["o"]],[[R[98],[R[5]]],[R[5]]]]],[11,R[191],E,E,2,[[["self"],["o"]],[R[98]]]],[11,R[191],E,E,2,[[["self"],["o"]],[[R[98],[R[5]]],[R[5]]]]],[11,R[192],E,E,2,[[["a"],["self"],["f"]]]],[11,R[192],E,E,2,[[["a"],["self"],["f"]]]],[11,R[193],E,E,2,[[["a"],["fmap"],["faggr"],["self"]],[R[98]]]],[11,R[193],E,E,2,[[["a"],["fmap"],["faggr"],["self"]],[R[98]]]],[11,R[194],E,E,2,[[["self"]],[R[194]]]],[11,R[194],E,E,2,[[["self"]],[[R[194],[R[5]]],[R[5]]]]],[11,R[195],E,E,2,[[["self"],["usize"]],[[R[95],[R[194]]],[R[98],[R[95]]]]]],[11,R[195],E,E,2,[[["self"],["usize"]],[[R[98],[R[95]]],[R[95],[R[194]]]]]],[11,"sum",E,E,2,[[["self"]],[T]]],[11,"sum_sq",E,E,2,[[["self"]],[T]]],[11,"sum",E,E,2,[[["self"]],[R[5]]]],[11,"sum_sq",E,E,2,[[["self"]],[R[5]]]],[11,"empty",E,E,1,[[],["self"]]],[11,R[837],E,E,1,[[],["self"]]],[11,"merge",E,E,1,[[],[R[194]]]],[11,R[196],E,E,1,[[],[R[95]]]],[11,R[197],E,E,1,[[["usize"]],[R[95]]]],[11,"add",E,E,1,[[["self"],[T],["usize"]]]],[11,"empty",E,E,1,[[],["self"]]],[11,R[837],E,E,1,[[],["self"]]],[11,"merge",E,E,1,[[],[[R[194],[R[5]]],[R[5]]]]],[11,R[196],E,E,1,[[],[R[95]]]],[11,R[197],E,E,1,[[["usize"]],[R[95]]]],[11,"add",E,E,1,[[["self"],["usize"],[R[5]]]]],[11,R[198],E,E,2,[[["self"]],[[R[194],["f64"]],["f64"]]]],[11,R[198],E,E,2,[[["self"]],[[R[194],["f64"]],["f64"]]]],[11,R[198],E,E,2,[[["self"]],[[R[194],[R[5]]],[R[5],["f64"]]]]],[11,R[198],E,E,2,[[["self"]],[[R[194],[R[5]]],[R[5],["f64"]]]]],[11,R[199],E,E,2,[[["self"],["usize"]],[[R[95],[R[194]]],[R[98],[R[95]]]]]],[11,R[199],E,E,2,[[["self"],["usize"]],[[R[95],[R[194]]],[R[98],[R[95]]]]]],[11,R[199],E,E,2,[[["self"],["usize"]],[[R[98],[R[95]]],[R[95],[R[194]]]]]],[11,R[199],E,E,2,[[["self"],["usize"]],[[R[98],[R[95]]],[R[95],[R[194]]]]]],[11,R[201],E,E,2,[[["self"]],["f64"]]],[11,R[200],E,E,2,[[["self"]],["f64"]]],[11,R[201],E,E,2,[[["self"]],["f64"]]],[11,R[200],E,E,2,[[["self"]],["f64"]]],[11,R[201],E,E,2,[[["self"]],[["f64"],[R[5],["f64"]]]]],[11,R[200],E,E,2,[[["self"]],[["f64"],[R[5],["f64"]]]]],[11,R[201],E,E,2,[[["self"]],[["f64"],[R[5],["f64"]]]]],[11,R[200],E,E,2,[[["self"]],[["f64"],[R[5],["f64"]]]]],[11,R[202],E,E,1,[[["usize"],[T],["self"],[T]]]],[11,R[202],E,E,1,[[[R[5]],["usize"],["self"],[R[5]]]]],[11,"trade",E,E,108,[[["s"]]]],[11,"trade",E,E,109,[[["vec"]]]],[11,"trade",E,E,111,[[["vec"]]]],[11,"trade",E,E,113,[[["s"]]]],[11,"borrow",E,E,18,[[["self"],["usize"]]]],[11,R[63],E,E,18,[[["self"]],["usize"]]],[11,"borrow",E,E,19,[[["self"],["usize"]]]],[11,R[63],E,E,19,[[["self"]],["usize"]]],[11,"borrow",E,E,110,[[["self"],["usize"]]]],[11,R[63],E,E,110,[[["self"]],["usize"]]],[11,R[100],R[109],E,114,[[["self"]],["bool"]]],[11,R[18],E,E,114,[[["self"]]]],[11,R[24],E,E,114,[[["self"]]]],[11,R[100],E,E,115,[[["self"]],["bool"]]],[11,R[18],E,E,115,[[["self"]]]],[11,R[24],E,E,115,[[["self"]]]],[11,R[100],E,E,16,[[["self"]],["bool"]]],[11,R[18],E,E,16,[[["self"]]]],[11,R[24],E,E,16,[[["self"]]]],[11,"domain",E,E,116,[[["self"]],[R[49]]]],[11,R[838],E,E,116,[[["self"]]]],[11,R[839],E,E,116,[[["self"]]]],[11,"domain",E,E,117,[[["self"]],[R[49]]]],[11,R[839],E,E,117,[[["self"]]]],[11,R[838],E,E,117,[[["self"]]]],[11,"domain",E,E,17,[[["self"]],[R[49]]]],[11,R[838],E,E,17,[[["self"]]]],[11,R[839],E,E,17,[[["self"]]]],[11,R[2],R[110],E,118,[[["self"]],["bool"]]],[11,"window",E,E,118,[[["self"],["usize"]],[T]]],[11,R[2],E,E,21,[[["self"]],["bool"]]],[11,"window",E,E,21,[[["self"],["usize"]],[T]]],[11,R[2],E,E,119,[[["self"]],["bool"]]],[11,"window",E,E,119,[[["self"],["usize"]],[T]]],[11,R[2],E,E,120,[[["self"]],["bool"]]],[11,"window",E,E,120,[[["self"],["usize"]],[T]]],[11,"zero",R[111],E,22,[[],["self"]]],[11,R[506],R[108],E,15,[[],[R[352]]]],[11,R[506],R[29],E,19,[[],[R[32]]]],[11,"clone",R[109],E,114,[[["self"]],["real"]]],[11,"clone",E,E,115,[[["self"]],[R[5]]]],[11,"clone",E,E,16,[[["self"]],[R[203]]]],[11,"clone",E,E,116,[[["self"]],["time"]]],[11,"clone",E,E,117,[[["self"]],["freq"]]],[11,"clone",E,E,17,[[["self"]],[R[204]]]],[11,"clone",R[29],E,0,[[["self"]],[R[30]]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,R[840],E,E,2,[[["self"],["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[44]]]],[11,"clone",E,E,4,[[["self"]],[R[88]]]],[11,"clone",E,E,1,[[["self"]],[R[194]]]],[11,"clone",E,E,5,[[["self"]],[R[49]]]],[11,"clone",E,E,112,[[["self"]],[R[52]]]],[11,"eq",R[109],E,114,[[["real"],["self"]],["bool"]]],[11,"eq",E,E,115,[[[R[5]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[203]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[203]]],["bool"]]],[11,"eq",E,E,116,[[["self"],["time"]],["bool"]]],[11,"eq",E,E,117,[[["self"],["freq"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[204]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[204]]],["bool"]]],[11,"eq",R[29],E,3,[[[R[44]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[88]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[194]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[194]]],["bool"]]],[11,"eq",E,E,5,[[[R[49]],["self"]],["bool"]]],[11,"from",E,E,121,[[["s"]],["self"]]],[11,"from",E,E,123,[[["s"]],["self"]]],[11,"from",E,E,122,[[["s"]],["self"]]],[11,"from",E,E,124,[[["s"]],["self"]]],[11,"deref",E,E,108,[[["self"]]]],[11,"deref",E,E,109,[[["self"]]]],[11,"deref",E,E,111,[[["self"]]]],[11,"deref",E,E,113,[[["self"]]]],[11,R[205],E,E,108,[[["self"]]]],[11,R[205],E,E,109,[[["self"]]]],[11,R[205],E,E,111,[[["self"]]]],[11,R[205],E,E,113,[[["self"]]]],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,2,[[[R[123]],["self"]]]],[11,"index",E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"index",E,E,2,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"index",E,E,2,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,2,[[["self"],["usize"]],[R[5]]]],[11,"index",E,E,2,[[[R[123]],["self"]]]],[11,"index",E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,"index",E,E,2,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"index",E,E,2,[[["range",["usize"]],["self"],["usize"]]]],[11,R[207],E,E,2,[[["self"],["usize"]],[T]]],[11,R[207],E,E,2,[[[R[123]],["self"]]]],[11,R[207],E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,R[207],E,E,2,[[["self"],["usize"],[R[206],["usize"]]]]],[11,R[207],E,E,2,[[["self"],["usize"],["range",["usize"]]]]],[11,R[207],E,E,2,[[["self"],["usize"]],[R[5]]]],[11,R[207],E,E,2,[[[R[123]],["self"]]]],[11,R[207],E,E,2,[[[R[124],["usize"]],["self"],["usize"]]]],[11,R[207],E,E,2,[[["self"],["usize"],[R[206],["usize"]]]]],[11,R[207],E,E,2,[[["self"],["usize"],["range",["usize"]]]]],[11,"fmt",R[109],E,114,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,115,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,16,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,116,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,117,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,17,[[["self"],[R[113]]],["result"]]],[11,"fmt",R[29],E,0,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,3,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,4,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,1,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,5,[[["self"],[R[113]]],["result"]]],[11,"fmt",E,E,2,[[[R[113]],["self"]],["result"]]],[11,"new",R[111],R[841],22,[[[T]],[R[5]]]],[11,"i",E,R[842],22,[[],[R[5]]]],[11,"norm_sqr",E,R[843],22,[[["self"]],[T]]],[11,"scale",E,R[844],22,[[["self"],[T]],[R[5]]]],[11,"unscale",E,R[845],22,[[["self"],[T]],[R[5]]]],[11,"conj",E,R[846],22,[[["self"]],[R[5]]]],[11,"inv",E,R[847],22,[[["self"]],[R[5]]]],[11,"norm",E,R[848],22,[[["self"]],[T]]],[11,"arg",E,R[849],22,[[["self"]],[T]]],[11,"to_polar",E,R[850],22,[[["self"]]]],[11,R[851],E,R[852],22,[[[T]],[R[5]]]],[11,"exp",E,R[853],22,[[["self"]],[R[5]]]],[11,"ln",E,R[854],22,[[["self"]],[R[5]]]],[11,"sqrt",E,R[855],22,[[["self"]],[R[5]]]],[11,"powf",E,R[856],22,[[["self"],[T]],[R[5]]]],[11,"log",E,R[857],22,[[["self"],[T]],[R[5]]]],[11,"powc",E,R[858],22,[[[R[5]],["self"]],[R[5]]]],[11,"expf",E,R[859],22,[[["self"],[T]],[R[5]]]],[11,"sin",E,R[860],22,[[["self"]],[R[5]]]],[11,"cos",E,R[861],22,[[["self"]],[R[5]]]],[11,"tan",E,R[862],22,[[["self"]],[R[5]]]],[11,"asin",E,R[863],22,[[["self"]],[R[5]]]],[11,"acos",E,R[864],22,[[["self"]],[R[5]]]],[11,"atan",E,R[865],22,[[["self"]],[R[5]]]],[11,"sinh",E,R[866],22,[[["self"]],[R[5]]]],[11,"cosh",E,R[867],22,[[["self"]],[R[5]]]],[11,"tanh",E,R[868],22,[[["self"]],[R[5]]]],[11,"asinh",E,R[869],22,[[["self"]],[R[5]]]],[11,"acosh",E,R[870],22,[[["self"]],[R[5]]]],[11,"atanh",E,R[871],22,[[["self"]],[R[5]]]],[11,"is_nan",E,R[872],22,[[],["bool"]]],[11,R[208],E,R[873],22,[[],["bool"]]],[11,R[209],E,R[874],22,[[],["bool"]]],[11,R[210],E,R[875],22,[[],["bool"]]]],"p":[[3,R[211]],[3,R[212]],[3,"DspVec"],[4,R[213]],[4,R[214]],[4,R[215]],[8,R[216]],[8,R[217]],[8,R[218]],[8,R[219]],[3,R[220]],[3,R[221]],[3,R[222]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[226]],[3,R[227]],[3,R[228]],[3,R[229]],[8,R[230]],[3,R[231]],[3,R[533]],[8,"Float"],[8,"Num"],[8,"One"],[8,"ToSimd"],[8,"Zero"],[8,"ToSlice"],[8,R[232]],[8,"Resize"],[8,R[233]],[8,R[234]],[8,R[235]],[8,R[236]],[8,R[237]],[8,R[238]],[8,R[239]],[8,R[240]],[8,R[241]],[8,R[242]],[8,R[243]],[8,R[244]],[8,R[245]],[8,R[680]],[8,R[246]],[8,R[247]],[8,"Vector"],[8,R[248]],[8,R[249]],[8,R[250]],[8,R[251]],[8,R[252]],[8,R[253]],[8,R[254]],[8,R[255]],[8,"RealOps"],[8,R[256]],[8,R[257]],[8,R[258]],[8,R[259]],[8,R[260]],[8,R[261]],[8,R[262]],[8,R[263]],[8,R[264]],[8,R[265]],[8,R[266]],[8,R[267]],[8,R[268]],[8,R[269]],[8,R[270]],[8,R[271]],[8,R[272]],[8,R[273]],[8,R[274]],[8,R[275]],[8,R[276]],[8,R[277]],[8,R[278]],[8,R[749]],[8,R[279]],[8,R[280]],[8,R[281]],[8,"TrigOps"],[8,R[773]],[8,R[282]],[8,R[283]],[8,R[284]],[8,R[787]],[8,R[790]],[8,R[285]],[8,R[286]],[8,R[287]],[8,R[288]],[8,R[289]],[8,R[290]],[8,R[291]],[8,"SumOps"],[8,"Stats"],[8,R[292]],[8,R[293]],[8,R[294]],[8,R[295]],[8,R[296]],[8,"Buffer"],[8,R[297]],[8,"Domain"],[3,R[298]],[3,R[299]],[3,R[431]],[3,R[300]],[3,R[301]],[3,R[302]],[3,"Real"],[3,R[533]],[3,"Time"],[3,"Freq"],[3,R[303]],[3,R[304]],[3,R[305]],[6,R[306]],[6,R[307]],[6,R[308]],[6,R[309]],[6,R[310]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);